["```ts\n$ ng completion --bash >> ~/.bashrc\n$ source ~/.bashrc\n```", "```ts\n$ ng completion --zsh >> ~/.zshrc\n$ source ~/.zshrc\n```", "```ts\n$ ng completion --bash >> ~/.bash_profile\n$ source ~/.bash_profile\n```", "```ts\n$ npx @angular/cli new lemon-mart --routing\n```", "```ts\nsrc/app/app-routing.modules.ts\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n```", "```ts\nsrc/app/app.module.ts ...\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  ...\n  imports: [\n    AppRoutingModule \n    ...\n  ],\n  ...\n```", "```ts\n$ npx ng add @angular/material\n$ npm i @angular/flex-layout hammerjs \n$ npx ng g m material --flat -m app\n```", "```ts\nsrc/styles.css\n\nbody {\n  margin: 0;\n}\n\n.margin-top {\n  margin-top: 16px;\n}\n\n.horizontal-padding {\n  margin-left: 16px;\n  margin-right: 16px;\n}\n\n.flex-spacer {\n  flex: 1 1 auto;\n}\n```", "```ts\n$ npx ng g m manager -m app --routing\n$ npx ng g m inventory -m app --routing\n$ npx ng g m pos -m app --routing\n$ npx ng g m user -m app --routing\n```", "```ts\n/src/app\n│   app-routing.module.ts\n│   app.component.css\n│   app.component.html\n│   app.component.spec.ts\n│   app.component.ts\n│   app.module.ts\n│   material.module.ts\n├───inventory\n│        inventory-routing.module.ts\n│        inventory.module.ts\n├───manager\n│        manager-routing.module.ts\n│        manager.module.ts\n├───pos\n│        pos-routing.module.ts\n│        pos.module.ts\n└───user\n        user-routing.module.ts\n        user.module.ts\n```", "```ts\nsrc/app/manager/manager.module.ts\nimport { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\n\nimport { ManagerRoutingModule } from './manager-routing.module'\n\n@NgModule({\n  imports: [CommonModule, ManagerRoutingModule],\n  declarations: [],\n```", "```ts\n})\nexport class ManagerModule {}\n```", "```ts\nsrc/app/app.module.ts\n...\nimport { ManagerModule } from './manager/manager.module'\n...\n@NgModule({\n  ...\n  imports: [\n    ...\n    ManagerModule \n  ],\n...\n```", "```ts\nsrc/app/manager/manager-routing.module.ts\nimport { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\n\nconst routes: Routes = []\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ManagerRoutingModule {}\n```", "```ts\n$ npx ng g c home -m app --inline-template --inline-style\n```", "```ts\nsrc/app/app-routing.module.ts \n...\nconst routes: Routes = [\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent },\n]\n...\n```", "```ts\nsrc/app/app-routing.module.ts \n...\nconst routes: Routes = [\n  ...\n  { path: '**', component: PageNotFoundComponent }\n]\n...\n```", "```ts\nsrc/app/page-not-found/page-not-found.component.ts\n...\ntemplate: `\n    <p>\n      This page doesn't exist. Go back to <a routerLink=\"/home\">home</a>.\n    </p>\n  `,\n...\n```", "```ts\nsrc/app/app.component.ts\n...\ntemplate: `\n    <mat-toolbar color=\"primary\">\n      <a mat-button routerLink=\"/home\"><h1>LemonMart</h1></a>\n    </mat-toolbar>\n    <router-outlet></router-outlet>\n  `,\n```", "```ts\nhttps://material.io/color/#!/?view.left=0&view.right=0&primary.color=2E7D32&secondary.color=C6FF00\n```", "```ts\nangular.json   \n\"apps\": [\n  {\n    ...\n      \"assets\": [\n        \"src/assets\",\n        \"src/favicon.ico\",\n        \"src/android-chrome-192x192.png\",\n        \"src/favicon-16x16.png\",\n        \"src/mstile-310x150.png\",\n        \"src/android-chrome-512x512.png\",\n        \"src/favicon-32x32.png\",\n        \"src/mstile-310x310.png\",\n        \"src/apple-touch-icon.png\",\n        \"src/manifest.json\",\n        \"src/mstile-70x70.png\",\n        \"src/browserconfig.xml\",\n        \"src/mstile-144x144.png\",\n        \"src/safari-pinned-tab.svg\",\n        \"src/mstile-150x150.png\"\n      ]\n```", "```ts\nsrc/index.html\n<link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png?v=rMlKOnvxlK\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicon-32x32.png?v=rMlKOnvxlK\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicon-16x16.png?v=rMlKOnvxlK\">\n<link rel=\"manifest\" href=\"/manifest.json?v=rMlKOnvxlK\">\n<link rel=\"mask-icon\" href=\"/safari-pinned-tab.svg?v=rMlKOnvxlK\" color=\"#b3ad2d\">\n<link rel=\"shortcut icon\" href=\"/favicon.ico?v=rMlKOnvxlK\">\n<meta name=\"theme-color\" content=\"#ffffff\">\n```", "```ts\nsrc/app/app.component.ts import { DomSanitizer } from '@angular/platform-browser'\n...\nexport class AppComponent {\n  constructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\n    iconRegistry.addSvgIcon(\n      'lemon',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/img/icons/lemon.svg')\n    )\n  }\n}\n```", "```ts\nsrc/app/app.component.ts  \ntemplate: `\n    <mat-toolbar color=\"primary\">\n      <mat-icon svgIcon=\"lemon\"></mat-icon>\n      <a mat-button routerLink=\"/home\"><h1>LemonMart</h1></a>\n    </mat-toolbar>\n    <router-outlet></router-outlet>\n  `,\n```", "```ts\nsrc/index.html\n<head>\n  ...\n  <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n</head>\n```", "```ts\nsrc/app/app.component.ts    \ntemplate: `\n    <mat-toolbar color=\"primary\">\n      <button mat-icon-button><mat-icon>menu</mat-icon></button>\n      <mat-icon svgIcon=\"lemon\"></mat-icon>\n      <a mat-button routerLink=\"/home\"><h1>LemonMart</h1></a>\n      <span class=\"flex-spacer\"></span>\n      <button mat-icon-button><mat-icon>account_circle</mat-icon></button>\n      <button mat-icon-button><mat-icon>lock_open</mat-icon></button>\n    </mat-toolbar>\n    <router-outlet></router-outlet>\n  `,\n```", "```ts\nsrc/app/home/home.component.ts \n  styles: [`\n    div[fxLayout] {margin-top: 32px;}\n  `],\n  template: `\n    <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n      <span class=\"mat-display-2\">Hello, Lemonite!</span>\n      <button mat-raised-button color=\"primary\">Login</button>\n    </div>\n  `\n```", "```ts\nsrc/app/home/home.component.ts\n...\nimport { AuthService } from '../auth.service'\n...\nexport class HomeComponent implements OnInit {\n  displayLogin = true\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.displayLogin = !this.authService.isAuthenticated()\n  }\n}\n```", "```ts\n> !this.authService.isAuthenticated()\ntrue\n```", "```ts\n> this.displayLogin = false\nfalse\n```", "```ts\n$ npx ng g c manager/managerHome -m manager -s -t\n```", "```ts\n /src\n ├───app\n │ │\n │ ├───manager\n │ │ │ manager-routing.module.ts\n │ │ │ manager.module.ts\n │ │ │\n │ │ └───manager-home\n │ │ manager-home.component.spec.ts\n │ │ manager-home.component.ts\n```", "```ts\nsrc/app/manager/manager-routing.module.ts\nimport { ManagerHomeComponent } from './manager-home/manager-home.component'\nimport { ManagerComponent } from './manager.component'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ManagerComponent,\n    children: [\n      { path: '', redirectTo: '/manager/home', pathMatch: 'full' },\n      { path: 'home', component: ManagerHomeComponent },\n    ],\n  },\n]\n```", "```ts\n src/app/app.module.ts\n import { ManagerModule } from './manager/manager.module'\n   ...\n   imports: [\n   ...\n     ManagerModule,\n   ]\n```", "```ts\nsrc/app/app-routing.module.ts\nimport { ManagerHomeComponent } from './manager/manager-home/manager-home.component'  \n...\nconst routes: Routes = [\n  ...\n  { path: 'manager', component: ManagerHomeComponent },\n  { path: '**', component: PageNotFoundComponent },\n]\n```", "```ts\nexample/manager/manager.module\nexport const managerModuleRoutes: Routes = [\n  { path: '', component: ManagerHomeComponent }\n]\n```", "```ts\nexample/app-routing.module\nimport { managerModuleRoutes } from './manager/manager.module'\n...\n{ path: 'manager', children: managerModuleRoutes },\n```", "```ts\nsrc/app/app-routing.module.ts\nimport {\n  ...\n  const routes: Routes = [\n    ...\n    { path: 'manager', loadChildren: './manager/manager.module#ManagerModule' },\n    { path: '**', component: PageNotFoundComponent },\n  ]\n  ...\n```", "```ts\nsrc/app/manager/manager-routing.module.ts\nconst routes: Routes = [\n  { path: '', redirectTo: '/manager/home', pathMatch: 'full' },\n  { path: 'home', component: ManagerHomeComponent },\n]\n```", "```ts\nsrc/app/home/home.component.ts\n ...\n <button mat-raised-button color=\"primary\" routerLink=\"/manager\">Login as Manager</button>\n ...\n```", "```ts\n$ npx ng g c manager/manager -m manager --flat -s -t\n```", "```ts\nsrc/app/manager/manager.component.ts\nstyles: [`\n   div[fxLayout] {margin-top: 32px;}\n   `, `\n  .active-link {\n    font-weight: bold;\n    border-bottom: 2px solid #005005;\n  }`\n],\ntemplate: `\n  <mat-toolbar color=\"accent\">\n    <a mat-button routerLink=\"/manager/home\" routerLinkActive=\"active-link\">Manager's Dashboard</a>\n    <a mat-button routerLink=\"/manager/users\" routerLinkActive=\"active-link\">User Management</a>\n    <a mat-button routerLink=\"/manager/receipts\" routerLinkActive=\"active-link\">Receipt Lookup</a>\n  </mat-toolbar>\n  <router-outlet></router-outlet>\n`\n```", "```ts\nsrc/app/manager/manager.module.ts\nimport { MaterialModule } from '../material.module'\nimport { ManagerComponent } from './manager.component'\n...\nimports: [... MaterialModule, ManagerComponent],\n```", "```ts\n$ npx ng g c manager/userManagement -m manager\n$ npx ng g c manager/receiptLookup -m manager\n```", "```ts\nexample\n{ path: '', redirectTo: '/manager/home', pathMatch: 'full' },\n{ path: 'home', component: ManagerHomeComponent },\n{ path: 'users', component: UserManagementComponent },\n{ path: 'receipts', component: ReceiptLookupComponent },\n```", "```ts\nsrc/app/manager/manager-routing.module.ts\n...\nconst routes: Routes = [\n  {\n    path: '', component: ManagerComponent, children: [\n      { path: '', redirectTo: '/manager/home', pathMatch: 'full' },\n      { path: 'home', component: ManagerHomeComponent },\n```", "```ts\n      { path: 'users', component: UserManagementComponent },\n      { path: 'receipts', component: ReceiptLookupComponent },\n    ]\n  },\n]\n```", "```ts\n$ npx ng g c user/profile -m user\n$ npx ng g c user/logout -m user -t -s\n$ npx ng g c user/navigationMenu -m user -t -s\n```", "```ts\nsrc/app/app-routing.module.ts\n... \n { path: 'user', loadChildren: 'app/user/user.module#UserModule' },\n```", "```ts\nsrc/app/user/user-routing.module.ts\n...\nconst routes: Routes = [\n  { path: 'profile', component: ProfileComponent },\n  { path: 'logout', component: LogoutComponent },\n]\n```", "```ts\nsrc/app/app.component.ts ...\n<mat-toolbar>\n  ...\n  <button mat-mini-fab routerLink=\"/user/profile\" matTooltip=\"Profile\" aria-label=\"User Profile\"><mat-icon>account_circle</mat-icon></button>\n  <button mat-mini-fab routerLink=\"/user/logout\" matTooltip=\"Logout\" aria-label=\"Logout\"><mat-icon>lock_open</mat-icon></button>\n</mat-toolbar>\n```", "```ts\nsrc/app/app.component.ts ...<mat-toolbar>  ...\n  <a mat-icon-button routerLink=\"/home\"><mat-icon svgIcon=\"lemon\"></mat-icon><span class=\"mat-h2\">LemonMart</span></a>\n  ...\n</mat-toolbar>\n```", "```ts\nsrc/app/manager/manager.component.ts\n<mat-toolbar color=\"accent\" fxLayoutGap=\"8px\">\n  ...\n  <span class=\"flex-spacer\"></span>\n  <button mat-mini-fab routerLink=\"/inventory\" matTooltip=\"Inventory\" aria-label=\"Inventory\"><mat-icon>list</mat-icon></button>\n  <button mat-mini-fab routerLink=\"/pos\" matTooltip=\"POS\" aria-label=\"POS\"><mat-icon>shopping_cart</mat-icon></button>\n</mat-toolbar>\n```", "```ts\nsrc/app/app.module.ts\nimport { FlexLayoutModule } from '@angular/flex-layout'\nimport { BrowserModule } from '@angular/platform-browser'\nimport { NgModule } from '@angular/core'\n\nimport { AppRoutingModule } from './app-routing.module'\nimport { AppComponent } from './app.component'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { MaterialModule } from './material.module'\nimport { HomeComponent } from './home/home.component'\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component'\nimport { HttpClientModule } from '@angular/common/http'\n\n@NgModule({\n  declarations: [AppComponent, HomeComponent, PageNotFoundComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule,\n    FlexLayoutModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n```", "```ts\nsrc/app/common/common.testing.ts\nimport { HttpClientTestingModule } from '@angular/common/http/testing'\nimport { MediaChange } from '@angular/flex-layout'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { SafeResourceUrl, SafeValue } from '@angular/platform-browser'\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations'\n// tslint:disable-next-line:max-line-length\nimport { SecurityContext } from '@angular/platform-browser/src/security/dom_sanitization_service'\nimport { RouterTestingModule } from '@angular/router/testing'\nimport { Observable, Subscription, of } from 'rxjs'\nimport { MaterialModule } from '../material.module'\n\nconst FAKE_SVGS = {\n  lemon: '<svg><path id=\"lemon\" name=\"lemon\"></path></svg>',\n}\n\nexport class ObservableMediaFake {\n  isActive(query: string): boolean {\n    return false\n  }\n\n  asObservable(): Observable<MediaChange> {\n    return of({} as MediaChange)\n  }\n\n  subscribe(\n    next?: (value: MediaChange) => void,\n    error?: (error: any) => void,\n    complete?: () => void\n  ): Subscription {\n    return new Subscription()\n  }\n}\n\nexport class MatIconRegistryFake {\n  _document = document\n  addSvgIcon(iconName: string, url: SafeResourceUrl): this {\n    // this.addSvgIcon('lemon', 'lemon.svg')\n    return this\n  }\n\n  getNamedSvgIcon(name: string, namespace: string = ''): Observable<SVGElement> {\n    return of(this._svgElementFromString(FAKE_SVGS.lemon))\n  }\n\n  private _svgElementFromString(str: string): SVGElement {\n    if (this._document || typeof document !== 'undefined') {\n      const div = (this._document || document).createElement('DIV')\n      div.innerHTML = str\n      const svg = div.querySelector('svg') as SVGElement\n      if (!svg) {\n        throw Error('<svg> tag not found')\n      }\n      return svg\n    }\n  }\n}\n\nexport class DomSanitizerFake {\n  bypassSecurityTrustResourceUrl(url: string): SafeResourceUrl {\n    return {} as SafeResourceUrl\n  }\n  sanitize(context: SecurityContext, value: SafeValue | string | null): string | null {\n    return value ? value.toString() : null\n  }\n}\n\nexport const commonTestingProviders: any[] = [\n  // intentionally left blank\n]\n\nexport const commonTestingModules: any[] = [\n  FormsModule,\n  ReactiveFormsModule,\n  MaterialModule,\n  NoopAnimationsModule,\n  HttpClientTestingModule,\n  RouterTestingModule,\n]\n\n```", "```ts\nsrc/app/app.component.spec.ts import { commonTestingModules,\n commonTestingProviders,\n MatIconRegistryFake,\n DomSanitizerFake,\n ObservableMediaFake,\n} from './common/common.testing'\nimport { ObservableMedia } from '@angular/flex-layout'\nimport { MatIconRegistry } from '@angular/material'\nimport { DomSanitizer } from '@angular/platform-browser'\n\n...\nTestBed.configureTestingModule({\n      imports: commonTestingModules,\n      providers: commonTestingProviders.concat([\n        { provide: ObservableMedia, useClass: ObservableMediaFake },\n        { provide: MatIconRegistry, useClass: MatIconRegistryFake },\n        { provide: DomSanitizer, useClass: DomSanitizerFake },\n      ]),\n      declarations: [AppComponent],\n...\n```"]