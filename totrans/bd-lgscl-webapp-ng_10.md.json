["```ts\nsrc/app/current-weather/current-weather.component.ts\nconstructor(private weatherService: WeatherService) {\n  this.current = {\n    city: '',\n    country: '',\n    date: 0,\n    image: '',\n    temperature: 0,\n    description: '',\n  }\n}\n```", "```ts\nsrc/app/current-weather/current-weather.component.html\n<div>\n  <div>\n    <span>{{current?.city}}, {{current?.country}}</span>\n    <span>{{current?.date | date:'fullDate'}}</span>\n  </div>\n  <div>\n    <img [src]='current?.image'>\n    <span>{{current?.temperature}}℉</span>\n  </div>\n  <div>\n    {{current?.description}}\n  </div>\n</div>\n```", "```ts\nsrc/app/current-weather/current-weather.component.html <div *ngIf=\"current\">\n  ...\n</div>\n```", "```ts\nDockerfile\nFROM duluca/minimal-node-web-server:8.11.1\nWORKDIR /usr/src/app\nCOPY dist public\n```", "```ts\nENV ENFORCE_HTTPS=xProto\n```", "```ts\nPS> choco install docker docker-for-windows -y\n\n```", "```ts\n$ brew install docker\n```", "```ts\npackage.json\n  ...\n  \"config\": {\n    \"imageRepo\": \"[namespace]/[repository]\",\n    \"imageName\": \"custom_app_name\",\n    \"imagePort\": \"0000\"\n  },\n ...\n```", "```ts\npackage.json\n...\n  \"scripts\": {\n    ...\n    \"predocker:build\": \"npm run build\",\n    \"docker:build\": \"cross-conf-env docker image build . -t $npm_package_config_imageRepo:$npm_package_version\",\n    \"postdocker:build\": \"npm run docker:tag\",\n    ...\n```", "```ts\npackage.json\n    ...\n    \"docker:tag\": \" cross-conf-env docker image tag $npm_package_config_imageRepo:$npm_package_version $npm_package_config_imageRepo:latest\",\n    ...\n```", "```ts\npackage.json\n    ...\n    \"docker:run\": \"run-s -c docker:clean docker:runHelper\",\n    \"docker:runHelper\": \"cross-conf-env docker run -e NODE_ENV=local --name $npm_package_config_imageName -d -p $npm_package_config_imagePort:3000 $npm_package_config_imageRepo\",\n    ...\n```", "```ts\npackage.json\n    ...\n    \"predocker:publish\": \"echo Attention! Ensure `docker login` is correct.\",\n    \"docker:publish\": \"cross-conf-env docker image push $npm_package_config_imageRepo:$npm_package_version\",\n    \"postdocker:publish\": \"cross-conf-env docker image push $npm_package_config_imageRepo:latest\",\n    ...\n```", "```ts\npackage.json\n    ...\n    \"docker:clean\": \"cross-conf-env docker rm -f $npm_package_config_imageName\",\n    ...\n```", "```ts\npackage.json\n    ...\n    \"docker:taillogs\": \"cross-conf-env docker logs -f $npm_package_config_imageName\",\n    ...\n```", "```ts\npackage.json\n    ...\n    \"docker:open:win\": \"echo Trying to launch on Windows && timeout 2 && start http://localhost:%npm_package_config_imagePort%\",\n    \"docker:open:mac\": \"echo Trying to launch on MacOS && sleep 2 && URL=http://localhost:$npm_package_config_imagePort && open $URL\",\n    ...\n```", "```ts\npackage.json\n    ...\n    \"predocker:debug\": \"run-s docker:build docker:run\",\n    \"docker:debug\": \"run-s -cs docker:open:win docker:open:mac docker:taillogs\"\n  },\n...\n```", "```ts\n$ npm i -D cross-conf-env npm-run-all\n```", "```ts\npackage.json\n\"predocker:build\": \"npm run build -- --prod --output-path dist && npm test -- --watch=false && npm run e2e\",\n```", "```ts\nexport const environment = {\n  production: true,\n  appId: '01ffxxxxxxxxxxxxxxxxxxxxxxxxxxxx',\n  baseUrl: 'https://',\n}\n```", "```ts\nDockerfile\nFROM duluca/minimal-node-web-server:8.11.1\nWORKDIR /usr/src/app\nCOPY dist public\n```", "```ts\n$ npm run docker:debug\n```", "```ts\nCurrent Environment: local.\nServer listening on port 3000 inside the container\nAttenion: To access server, use http://localhost:EXTERNAL_PORT\nEXTERNAL_PORT is specified with 'docker run -p EXTERNAL_PORT:3000'. See 'package.json->imagePort' for th\ne default port.\nGET / 304 12.402 ms - -\nGET /styles.d41d8cd98f00b204e980.bundle.css 304 1.280 ms - -\nGET /inline.202587da3544bd761c81.bundle.js 304 11.117 ms - -\nGET /polyfills.67d068662b88f84493d2.bundle.js 304 9.269 ms - -\nGET /vendor.c0dc0caeb147ad273979.bundle.js 304 2.588 ms - -\nGET /main.9e7f6c5fdb72bb69bb94.bundle.js 304 3.712 ms - -\n```", "```ts\n$ npm run docker:publish\n```", "```ts\nThe push refers to a repository [docker.io/duluca/localcast-weather]\n60f66aaaaa50: Pushed\n...\nlatest: digest: sha256:b680970d76769cf12cc48f37391d8a542fe226b66d9a6f8a7ac81ad77be4f58b size: 2827\n```", "```ts\nnow/Dockerfile\nFROM duluca/localcast-weather:6.0.1\n```", "```ts\n$ now\n> No existing credentials found. Please log in:\n> We sent an email to xxxxxxxx@gmail.com. Please follow the steps provided\n inside it and make sure the security code matches XXX XXXXX.\n√ Email confirmed\n√ Fetched your personal details\n> Ready! Authentication token and personal details saved in \"~\\.now\"\n```", "```ts\n$ now --docker --public\n```", "```ts\n> Deploying C:\\dev\\local-weather-app\\web-app\\now under duluca\n> Ready! https://xxxxxxxxxxxxx.now.sh [3s]\n> Initializing...\n> Building\n> ▲ docker build\nSending build context to Docker daemon 2.048 kBkB\n> Step 1 : FROM duluca/localcast-weather\n> latest: Pulling from duluca/localcast-weather\n...\n> Deployment complete!\n```"]