["```ts\n// Code: 5.1\n//./src/app/app.component.ts\n\nimport { Component, OnInit } from  '@angular/core';\n```", "```ts\n// Code: 5.1 //./src/app/app.component.ts\n\n@Component({  selector: 'app-root',  templateUrl: './app.component.html',  styleUrls: ['./app.component.css']  })  export class AppComponent implements OnInit {  title: string = 'Items in Bag';  items: Array<string> = [];  loading: boolean = false;  \n ngOnInit () {  this.loading = true;  \n setTimeout(() => {  this.items = [  'Pen',  'Note',  'Mug',  'Charger',  'Passport',  'Keys'  ]  this.loading = false;  }, 3000)  }  }\n```", "```ts\n<!-- Code: 5.1 -->\n<!-- ./src/app/app.component.html --> \n<div style=\"text-align:center\">  \n <h1>  {{title}}!!  </h1>  \n <h4 *ngIf=\"loading\">Please wait...</h4>  \n</div>  \n<ul>  \n <li *ngFor=\"let item of items\">{{item}}</li>  \n</ul>\n```", "```ts\nng g component tab\n```", "```ts\n<ul>   <li *ngFor=\"let item of items\">{{item}}</li>  \n</ul>  \n\n<!--Add tab component to app-->\n<app-tab></app-tab>\n```", "```ts\n<!--./src/app/tab/tab.component.css-->\n<div class=\"tab\">  \n <button class=\"tablink\" (click)=\"openTab($event, 'London')\">London</button> <button class=\"tablink\" (click)=\"openTab($event, 'Paris')\">Paris</button> <button class=\"tablink\" (click)=\"openTab($event, 'Tokyo')\">Tokyo</button> </div>  <div id=\"London\" class=\"tabcontent\">  <h3>London</h3>  <p>London is the capital city of England.</p> </div> <div id=\"Paris\" class=\"tabcontent\">   <h3>Paris</h3>   <p>Paris is the capital of France.</p>  </div> <div id=\"Tokyo\" class=\"tabcontent\">   <h3>Tokyo</h3>   <p>Tokyo is the capital of Japan.</p> </div>\n```", "```ts\n// based on styles from the base sample\n\n/* ./src/app/tab/tab.component.css */\ndiv.tab {\n  overflow: hidden;\n  border: 1px solid #ccc;\n  background-color: #f1f1f1;\n  }  div.tab button {\n  background-color: inherit;\n  float: left;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  padding: 14px 16px;\n  transition: 0.3s;\n  } div.tab button:hover {\n  background-color: #ddd;\n  }   div.tab button.active {\n  background-color: #ccc;\n  }   .tabcontent {   padding: 6px 12px;\n  border: 1px solid #ccc;\n border-top: none; }\n```", "```ts\n.tabcontent {  \n display: none;   }\n```", "```ts\nimport { Component, ElementRef, OnInit, AfterContentInit } from '@angular/core';  @Component({\n  selector: 'app-tab',\n  templateUrl: './tab.component.html',\n  styleUrls: ['./tab.component.css']\n  })  export class TabComponent implements OnInit, AfterContentInit {  tabContents: Array<HTMLElement>;\n tabLinks: Array<HTMLElement>;  \n constructor(\n  private el: ElementRef\n  ) { }\n\n  ngOnInit() {}\n\n  ngAfterContentInit() {\n // Grab the DOM\n  this.tabContents = this.el.nativeElement.querySelectorAll('.tabcontent');\n  this.tabLinks = this.el.nativeElement.querySelectorAll('.tablink');\n   }   }  \n```", "```ts\nexport class TabComponent implements OnInit, AfterContentInit {\n  tabContents: Array<HTMLElement>;\n  tabLinks: Array<HTMLElement>;\n  constructor(\n  private el: ElementRef\n  ) { }\n  ngOnInit() {}\n  ngAfterContentInit() {\n  this.tabContents = this.el.nativeElement.querySelectorAll('.tabcontent');\n  this.tabLinks = this.el.nativeElement.querySelectorAll('.tablink');\n\n // Activate first tab\n\n this.tabContents[0].style.display = \"block\";\n this.tabLinks[0].className = \" active\";\n }  }  \n```", "```ts\n<button class=\"tablink\" (click)=\"open($event, 'London')\">London</button> <button class=\"tablink\" (click)=\"open($event, 'Paris')\">Paris</button> <button class=\"tablink\" (click)=\"open($event, 'Tokyo')\">Tokyo</button>\n```", "```ts\nexport class TabComponent implements OnInit, AfterContentInit {\n  tabContents: Array<HTMLElement>;\n  tabLinks: Array<HTMLElement>;\n  constructor(\n  private el: ElementRef\n  ) { }\n\n // ...\n\n open(evt, cityName) {\n  for (let i = 0; i < this.tabContents.length; i++) {\n  this.tabContents[i].style.display = \"none\";\n  }\n  for (let i = 0; i < this.tabLinks.length; i++) {\n  this.tabLinks[i].className = this.tabLinks[i].className.replace(\" active\", \"\");\n  }\n  this.el.nativeElement.querySelector(`#${cityName}`).style.display = \"block\"; \n evt.currentTarget.className += \" active\"; \n } }  \n```", "```ts\nng g component child\n```", "```ts\n// Code 5.2\n<!-- ./src/app/app.component.html -->\n\n<div style=\"text-align:center\">   <h1>  This is parent component  </h1>   <app-child></app-child>  </div>  \n```", "```ts\n// Code 5.2\n<!-- ./src/app/child/child.component.html -->\n\n<h3>This is child component  </h3>  \n```", "```ts\nh3 {  color: palevioletred  }\n```", "```ts\nh3 {\n color: palevioletred }\n```", "```ts\nh3 {\n color: blueviolet }\n```", "```ts\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core'; @Component({\n selector: 'app-child',\n</span>  templateUrl: './child.component.html',\n  styleUrls: ['./child.component.css'],\n // Encapsulation: Emulated\n encapsulation: ViewEncapsulation.Emulated })  export class ChildComponent implements OnInit {   constructor() { }\n   ngOnInit() { } } \n```", "```ts\n@Component({\n  selector: 'app-child',\n  templateUrl: './child.component.html',\n  styleUrls: ['./child.component.css'],\n // Encapsulation: Native\n encapsulation: ViewEncapsulation.Native })\n```", "```ts\n@Component({\n  selector: 'app-child',\n  templateUrl: './child.component.html',\n  styleUrls: ['./child.component.css'],\n // Encapsulation: Native\n encapsulation: ViewEncapsulation.None })\n```", "```ts\n// child component style\nh1 {\n color: blueviolet }\n```"]