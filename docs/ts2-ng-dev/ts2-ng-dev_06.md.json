["```ts\nimport { Component } from '@angular/core';    @Component({  selector: 'app-root',  templateUrl: './app.component.html',  styleUrls: ['./app.component.css']  })  export class AppComponent {  title = 'app';  comments = [  {  author: 'Jay Kay',  content: 'TypeScript makes Angular awesome'  },  {  author: 'William',  content: 'Yeah, right!'  },  {  author: 'Raphael',  content: 'Got stuck passing data around'  }  ]  }  \n```", "```ts\nng g component comment-list\n```", "```ts\nimport { Component, OnInit, Input } from '@angular/core';    @Component({  selector: 'app-comment-list',  templateUrl: './comment-list.component.html',  styleUrls: ['./comment-list.component.css']  })  export class CommentListComponent implements OnInit {  // Received via Imputs @Input() comments;   constructor() { }   \n ngOnInit() {}    }   \n```", "```ts\n<div>  <h2>Comments</h2>  <app-comment-list [comments]=\"comments\"></app-comment-list>  </div>  \n```", "```ts\n<div class=\"comment-box\" *ngFor=\"let comment of comments\">  <h3>{{comment.author}}</h3>  <p>{{comment.content}}</p>  </div>  \n```", "```ts\nng g component comment-item\n```", "```ts\nimport { Component, OnInit, Input } from '@angular/core';    @Component({  selector: 'app-comment-item',  templateUrl: './comment-item.component.html',  styleUrls: ['./comment-item.component.css']  })  export class CommentItemComponent implements OnInit {  // Decorated comment \n @Input() comment;   constructor() { }    ngOnInit() {}    }   \n```", "```ts\n<app-comment-item \n *ngFor=\"let comment of comments\" [comment]=\"comment\">  </app-comment-item>  \n```", "```ts\n<h3>{{comment.author}}</h3>  <p>{{comment.content}}</p>  \n```", "```ts\nimport { Component, OnInit, Input } from '@angular/core';    @Component({  selector: 'app-comment-item',  templateUrl: './comment-item.component.html',  styleUrls: ['./comment-item.component.css']  })  export class CommentItemComponent implements OnInit {   \n private _comment;  constructor() { }    ngOnInit() {}    @Input()  set comment(comment) {  this._comment = Object.assign(comment, {\n author: comment.author.toUpperCase()\n });  }    get comment() {  return this._comment  }    }   \n```", "```ts\n<app-comment-item \n *ngFor=\"let comment of comments\" \n [comment]=\"comment\" \n (dblclick)=\"showComment(comment)\">  </app-comment-item>  \n```", "```ts\nimport { \n Component, \n OnInit, \n Input, \n EventEmitter, \n Output } from '@angular/core';    @Component({  selector: 'app-comment-list',  templateUrl: './comment-list.component.html',  styleUrls: ['./comment-list.component.css']  })  export class CommentListComponent implements OnInit {    @Input() comments;  @Output() onShowComment = new EventEmitter();    constructor() { }   ngOnInit() {}    showComment(comment) {  this.onShowComment.emit(comment);  }    }   \n```", "```ts\n<div>  <h2>Comments</h2>  <app-comment-list \n [comments]=\"comments\" \n (onShowComment)=\"onShowComment($event)\">\n </app-comment-list>  </div>  \n```", "```ts\nimport { Component } from '@angular/core';    @Component({  selector: 'app-root',  templateUrl: './app.component.html',  styleUrls: ['./app.component.css']  })  export class AppComponent {  title = 'app';  comments = [  {  author: 'Jay Kay',  content: 'TypeScript makes Angular awesome'  },  // ...  ]    onShowComment(comment) {  alert(comment.content);  }  }   \n```", "```ts\nng g component counter\n```", "```ts\n//counter.component.html\n<h5>  {{counter}}  </h5> //counter.component.ts import { Component, OnInit } from '@angular/core';    @Component({  selector: 'app-counter',  templateUrl: './counter.component.html',  styleUrls: ['./counter.component.css']  })  export class CounterComponent implements OnInit {   \n counter: number = 0;    increment() {  this.counter++  }    decrement() {  this.counter--  }    }   \n```", "```ts\n<div>  <h2>Comments</h2>  <app-comment-list [comments]=\"comments\" (onShowComment)=\"onShowComment($event)\"></app-comment-list>  ...\n\n  <h2>Counter</h2>  <app-counter #counter></app-counter>    </div>  \n```", "```ts\n<div>\n  <h2>Comments</h2>\n  <app-comment-list [comments]=\"comments\" (onShowComment)=\"onShowComment($event)\"></app-comment-list>\n\n ... <h2>Counter</h2>\n  <app-counter #counter></app-counter>\n  <button (click)=\"counter.increment()\">++</button>\n  <button (click)=\"counter.decrement()\">--</button>\n</div>\n```", "```ts\n//app.component.ts\nimport { Component, ViewChild } from '@angular/core';  import { CounterComponent } from './counter/counter.component'    @Component({  selector: 'app-root',  templateUrl: './app.component.html',  styleUrls: ['./app.component.css']  })  export class AppComponent {\n  @ViewChild(CounterComponent)  counterComponent: CounterComponent   comments = [  {</span&gt;  author: 'Jay Kay',  content: 'TypeScript makes Angular awesome'  },  // ...  ]    onShowComment(comment) {  alert(comment.content);  }    } \n```", "```ts\n<app-counter></app-counter>  <button (click)=\"counterComponent.increment()\">++</button>  <button (click)=\"counterComponent.decrement()\">--</button>  \n```"]