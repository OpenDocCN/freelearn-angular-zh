["```ts\n    npm install --save @angular/cdk@12.0.0\n    ```", "```ts\n    ...\n    import { LoaderComponent } from './components/loader/loader.component';\n    import { ScrollingModule } from '@angular/cdk/scrolling';\n    @NgModule({\n    \u00a0\u00a0declarations: [...],\n    \u00a0\u00a0imports: [\n    \u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0HttpClientModule,\n    \u00a0\u00a0\u00a0\u00a0ScrollingModule\n    \u00a0\u00a0],\n    \u00a0\u00a0providers: [],\n    \u00a0\u00a0bootstrap: [AppComponent]\n    })\n    export class AppModule { }\n    ```", "```ts\n    <h4 class=\"heading\">Our trusted customers</h4>\n    <cdk-virtual-scroll-viewport\n    \u00a0\u00a0class=\"list list-group\"\n    \u00a0\u00a0[itemSize]=\"110\">\n    \u00a0\u00a0<div\n    \u00a0\u00a0\u00a0\u00a0class=\"list__item list-group-item\"\n    \u00a0\u00a0\u00a0\u00a0*cdkVirtualFor=\"let item of listItems\">\n    \u00a0\u00a0\u00a0\u00a0<div class=\"list__item__primary\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0\u00a0\u00a0<div class=\"list__item__secondary\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0</div>\n    </cdk-virtual-scroll-viewport>\n    ```", "```ts\n    ng g c components/the-amazing-list-item\n    ```", "```ts\n    \u00a0\u00a0<div class=\"list__item__primary\">\n    \u00a0\u00a0\u00a0\u00a0<div class=\"list__item__primary__info\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{{ item.name }}\n    \u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0\u00a0\u00a0<div class=\"list__item__primary__info\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{{ item.phone }}\n    \u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0</div>\n    \u00a0\u00a0<div class=\"list__item__secondary\">\n    \u00a0\u00a0\u00a0\u00a0<div class=\"list__item__secondary__info\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<img src=\"{{ item.picture }}\" />\n    \u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0\u00a0\u00a0<div class=\"list__item__secondary__info\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{{ item.email }}\n    \u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0</div>\n    ```", "```ts\n    import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n    import { AppUserCard } from 'src/interfaces/app-user-card.interface';\n    @Component({\n    \u00a0\u00a0selector: 'app-the-amazing-list-item',\n    \u00a0\u00a0templateUrl: './the-amazing-list-item.component.html',\n    \u00a0\u00a0styleUrls: ['./the-amazing-list-item.component.scss'],\n    \u00a0\u00a0encapsulation: ViewEncapsulation.None\n    })\n    export class TheAmazingListItemComponent implements OnInit {\n    \u00a0\u00a0@Input() item: Partial<AppUserCard>;\n    \u00a0\u00a0constructor() { }\n    \u00a0\u00a0ngOnInit(): void {\n    \u00a0\u00a0}\n    }\n    ```", "```ts\n    .list__item {\n    \u00a0\u00a0transition: all ease 1s;\n    \u00a0\u00a0cursor: pointer;\n    \u00a0\u00a0&:hover, &:focus {\n    \u00a0\u00a0\u00a0\u00a0background-color: #ececec; transform: scale(1.02);\n    \u00a0\u00a0}\n    \u00a0\u00a0&__primary,\n    \u00a0\u00a0&__secondary {\n    \u00a0\u00a0\u00a0\u00a0display: flex;\n    \u00a0\u00a0\u00a0\u00a0justify-content: space-between;\n    \u00a0\u00a0\u00a0\u00a0align-items: center;\n    \u00a0\u00a0\u00a0\u00a0&__info { font-size: small; }\n    \u00a0\u00a0}\n    \u00a0\u00a0&__primary {\n    \u00a0\u00a0\u00a0\u00a0&__info {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&:nth-child(1) { font-weight: bold; font-size: \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0larger; }\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0}\n    \u00a0\u00a0img { border-radius: 50%; width: 60px; height: 60px; }\n    }\n    ```", "```ts\n    .heading {\n    \u00a0\u00a0text-align: center;\n    \u00a0\u00a0margin-bottom: 10px;\n    }\n    .list {\n    \u00a0\u00a0box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n    \u00a0\u00a0height: 500px;\n    \u00a0\u00a0overflow: scroll;\n    \u00a0\u00a0min-width: 400px;\n    \u00a0\u00a0max-width: 960px;\n    \u00a0\u00a0width: 100%;\n    }\n    ```", "```ts\n    <h4 class=\"heading\">Our trusted customers</h4>\n    <cdk-virtual-scroll-viewport\n    \u00a0\u00a0class=\"list list-group\"\n    \u00a0\u00a0[itemSize]=\"110\">\n    \u00a0\u00a0<app-the-amazing-list-item\n    \u00a0\u00a0\u00a0\u00a0class=\"list__item list-group-item\"\n    \u00a0\u00a0\u00a0\u00a0*cdkVirtualFor=\"let item of listItems\"\n    \u00a0\u00a0\u00a0\u00a0[item]=\"item\">\n    \u00a0\u00a0</app-the-amazing-list-item>\n    </cdk-virtual-scroll-viewport>\n    ```", "```ts\n    import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n    import { AppUserCard } from 'src/interfaces/app-user-card.interface';\n    import { FocusableOption } from '@angular/cdk/a11y';\n    @Component({\n    \u00a0\u00a0selector: 'app-the-amazing-list-item',\n    \u00a0\u00a0templateUrl: './the-amazing-list-item.component.html',\n    \u00a0\u00a0styleUrls: ['./the-amazing-list-item.component.scss'],\n    \u00a0\u00a0encapsulation: ViewEncapsulation.None,\n    \u00a0\u00a0host: {\n    \u00a0\u00a0\u00a0\u00a0tabindex: '-1',\n    \u00a0\u00a0\u00a0\u00a0role: 'list-item',\n    \u00a0\u00a0},\n    })\n    export class TheAmazingListItemComponent implements OnInit, FocusableOption {\n    \u00a0\u00a0@Input() item: Partial<AppUserCard>;\n    \u00a0\u00a0constructor() { }\n    \u00a0\u00a0focus() { }\n    \u00a0\u00a0ngOnInit(): void {\n    \u00a0\u00a0}\n    }\n    ```", "```ts\n    import { Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n    import { AppUserCard } from 'src/interfaces/app-user-card.interface';\n    import { FocusableOption } from '@angular/cdk/a11y';\n    @Component({...})\n    export class TheAmazingListItemComponent implements OnInit, FocusableOption {\n    \u00a0\u00a0@Input() item: Partial<AppUserCard>;\n    \u00a0\u00a0constructor(private el: ElementRef) { }\n    \u00a0\u00a0focus() {\n    \u00a0\u00a0\u00a0\u00a0this.el.nativeElement.focus();\n    \u00a0\u00a0}\n    \u00a0\u00a0...\n    }\n    ```", "```ts\n    import { FocusKeyManager } from '@angular/cdk/a11y';\n    import { AfterViewInit, Component, Input, OnInit, QueryList, ViewChildren } from '@angular/core';\n    import { AppUserCard } from 'src/interfaces/app-user-card.interface';\n    import { TheAmazingListItemComponent } from '../the-amazing-list-item/the-amazing-list-item.component';\n    @Component({\n    \u00a0\u00a0...\n    \u00a0\u00a0styleUrls: ['./the-amazing-list.component.scss'],\n    \u00a0\u00a0host: { role: 'list' }\n    })\n    export class TheAmazingListComponent implements OnInit, AfterViewInit {\n    \u00a0\u00a0@Input() listItems: Partial<AppUserCard>[] = [];\n    \u00a0\u00a0@ViewChildren(TheAmazingListItemComponent) \u00a0\u00a0listItemsElements: QueryList \u00a0\u00a0<TheAmazingListItemComponent>;\n    \u00a0\u00a0private listKeyManager: \u00a0\u00a0FocusKeyManager<TheAmazingListItemComponent>;\n    \u00a0\u00a0constructor() { }\n    \u00a0\u00a0...\n    \u00a0\u00a0ngAfterViewInit() {\n    \u00a0\u00a0\u00a0\u00a0this.listKeyManager = new FocusKeyManager(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.listItemsElements\n    \u00a0\u00a0\u00a0\u00a0);\n    \u00a0\u00a0}\n    }\n    ```", "```ts\n    import { FocusKeyManager } from '@angular/cdk/a11y';\n    import { AfterViewInit, Component, HostListener, Input, OnInit, QueryList, ViewChildren } from '@angular/core';\n    ...\n    @Component({...})\n    export class TheAmazingListComponent implements OnInit, AfterViewInit {\n    \u00a0\u00a0...\n    \u00a0\u00a0@HostListener('window:keydown', ['$event'])\n    \u00a0\u00a0onKeydown(event) {\n    \u00a0\u00a0\u00a0\u00a0this.listKeyManager.onKeydown(event);\n    \u00a0\u00a0}\n    \u00a0\u00a0constructor() { }\n    \u00a0\u00a0...\n    }\n    ```", "```ts\n    ...\n    import { TheAmazingListItemComponent } from './components/the-amazing-list-item/the-amazing-list-item.component';\n    import { OverlayModule } from '@angular/cdk/overlay';\n\n    @NgModule({\n    \u00a0\u00a0declarations: [...],\n    \u00a0\u00a0imports: [\n    \u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0ScrollingModule,\n    \u00a0\u00a0\u00a0\u00a0OverlayModule\n    \u00a0\u00a0],\n    \u00a0\u00a0providers: [],\n    \u00a0\u00a0bootstrap: [AppComponent]\n    })\n    export class AppModule { }\n    ```", "```ts\n    import { FocusKeyManager } from '@angular/cdk/a11y';\n    import { CdkOverlayOrigin } from '@angular/cdk/overlay';\n    ...\n    @Component({...})\n    export class TheAmazingListComponent implements OnInit, AfterViewInit {\n    \u00a0\u00a0@Input() listItems: Partial<AppUserCard>[] = [];\n    \u00a0\u00a0@ViewChildren(TheAmazingListItemComponent) \u00a0\u00a0listItemsElements: QueryList \u00a0\u00a0<TheAmazingListItemComponent>;\n    \u00a0\u00a0popoverMenuTrigger: CdkOverlayOrigin;\n    \u00a0\u00a0menuPositions = [\n    \u00a0\u00a0\u00a0\u00a0{ offsetY: 4, originX: 'end', originY: 'bottom', \u00a0\u00a0\u00a0\u00a0overlayX: 'end', overlayY: 'top' },\n    \u00a0\u00a0\u00a0\u00a0{ offsetY: -4, originX: 'end', originY: 'top', \u00a0\u00a0\u00a0\u00a0overlayX: 'end', overlayY: 'bottom' },\n    \u00a0\u00a0];\n    \u00a0\u00a0private listKeyManager: FocusKeyManager \u00a0\u00a0<TheAmazingListItemComponent>;\n    \u00a0\u00a0...\n    }\n    ```", "```ts\n    <h4 class=\"heading\">Our trusted customers</h4>\n    <cdk-virtual-scroll-viewport\n    \u00a0\u00a0class=\"list list-group\"\n    \u00a0\u00a0[itemSize]=\"110\">\n    \u00a0\u00a0<app-the-amazing-list-item\n    \u00a0\u00a0\u00a0\u00a0cdkOverlayOrigin #itemTrigger=\"cdkOverlayOrigin\"\n    \u00a0\u00a0\u00a0\u00a0class=\"list__item list-group-item\"\n    \u00a0\u00a0\u00a0\u00a0*cdkVirtualFor=\"let item of listItems\"\n    \u00a0\u00a0\u00a0\u00a0[item]=\"item\">\n    \u00a0\u00a0</app-the-amazing-list-item>\n    </cdk-virtual-scroll-viewport>\n    ```", "```ts\n    ...\n    @Component({...})\n    export class TheAmazingListComponent implements OnInit, AfterViewInit {\n    \u00a0\u00a0...\n    \u00a0\u00a0ngOnInit(): void {\n    \u00a0\u00a0}\n    \u00a0\u00a0openMenu($event, itemTrigger) {\n    \u00a0\u00a0\u00a0\u00a0if ($event) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$event.stopImmediatePropagation();\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0this.popoverMenuTrigger = itemTrigger;\n    \u00a0\u00a0}\n    \u00a0\u00a0...\n    }\n    ```", "```ts\n    ...\n    @Component({...})\n    export class TheAmazingListComponent implements OnInit, AfterViewInit {\n    \u00a0\u00a0...\n    \u00a0\u00a0popoverMenuTrigger: CdkOverlayOrigin;\n    \u00a0\u00a0menuShown = false;\n    \u00a0\u00a0...\n    \u00a0\u00a0openMenu($event, itemTrigger) {\n    \u00a0\u00a0\u00a0\u00a0if ($event) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$event.stopImmediatePropagation();\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0this.popoverMenuTrigger = itemTrigger;\n    \u00a0\u00a0\u00a0\u00a0this.menuShown = true;\n    \u00a0\u00a0}\n    \u00a0\u00a0...\n    }\n    ```", "```ts\n    <h4 class=\"heading\">Our trusted customers</h4>\n    <cdk-virtual-scroll-viewport>\n    \u00a0\u00a0...\n    </cdk-virtual-scroll-viewport>\n    <ng-template cdkConnectedOverlay [cdkConnectedOverlayOrigin]=\"popoverMenuTrigger\"\n    \u00a0\u00a0[cdkConnectedOverlayOpen]=\"menuShown\" \u00a0\u00a0[cdkConnectedOverlayHasBackdrop]=\"true\"\n    \u00a0\u00a0(backdropClick)=\"menuShown = false\"\n    \u00a0\u00a0[cdkConnectedOverlayPositions]=\"menuPositions\"\n    \u00a0\u00a0cdkConnectedOverlayPanelClass=\"menu-popover\"\n    \u00a0\u00a0>\n    \u00a0\u00a0<div class=\"menu-popover__list\">\n    \u00a0\u00a0\u00a0\u00a0<div class=\"menu-popover__list__item\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Duplicate\n    \u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0\u00a0\u00a0<div class=\"menu-popover__list__item\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Edit\n    \u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0\u00a0\u00a0<div class=\"menu-popover__list__item\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Delete\n    \u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0</div>\n    </ng-template>\n    ```", "```ts\n    <h4 class=\"heading\">Our trusted customers</h4>\n    <cdk-virtual-scroll-viewport\n    \u00a0\u00a0class=\"list list-group\"\n    \u00a0\u00a0[itemSize]=\"110\">\n    \u00a0\u00a0<app-the-amazing-list-item\n    \u00a0\u00a0\u00a0\u00a0class=\"list__item list-group-item\"\n    \u00a0\u00a0\u00a0\u00a0*cdkVirtualFor=\"let item of listItems\"\n    \u00a0\u00a0\u00a0\u00a0(click)=\"openMenu($event, itemTrigger)\"\n    \u00a0\u00a0\u00a0\u00a0cdkOverlayOrigin #itemTrigger=\"cdkOverlayOrigin\"\n    \u00a0\u00a0\u00a0\u00a0[item]=\"item\">\n    \u00a0\u00a0</app-the-amazing-list-item>\n    </cdk-virtual-scroll-viewport>\n    <ng-template>\n    \u00a0\u00a0...\n    </ng-template>\n    ```", "```ts\n    ...\n    .menu-popover {\n    \u00a0\u00a0min-width: 150px;\n    \u00a0\u00a0height: auto;\n    \u00a0\u00a0border: 1px solid white;\n    \u00a0\u00a0border-radius: 8px;\n    \u00a0\u00a0&::before {\n    \u00a0\u00a0\u00a0\u00a0top: -10px;\n    \u00a0\u00a0\u00a0\u00a0border-width: 0px 10px 10px 10px;\n    \u00a0\u00a0\u00a0\u00a0border-color: transparent transparent white \u00a0\u00a0\u00a0\u00a0transparent;\n    \u00a0\u00a0\u00a0\u00a0position: absolute;\n    \u00a0\u00a0\u00a0\u00a0content: '';\n    \u00a0\u00a0\u00a0\u00a0right: 5%;\n    \u00a0\u00a0\u00a0\u00a0border-style: solid;\n    \u00a0\u00a0}\n    \u00a0\u00a0&__list {...}\n    }\n    ```", "```ts\n    ng g directive directives/popover-positional-class\n    ```", "```ts\n    ...\n    <ng-template cdkConnectedOverlay [cdkConnectedOverlayOrigin]=\"popoverMenuTrigger\"\n    \u00a0\u00a0[cdkConnectedOverlayOpen]=\"menuShown\" \u00a0\u00a0[cdkConnectedOverlayHasBackdrop]=\"true\"\n    \u00a0\u00a0(backdropClick)=\"menuShown = false\" \u00a0\u00a0[cdkConnectedOverlayPositions]=\"menuPositions\"\n    \u00a0\u00a0appPopoverPositionalClass targetSelector=\u00a0\u00a0\".menu-popover\" inverseClass=\"menu-popover--up\"\n    \u00a0\u00a0[originY]=\"menuPopoverOrigin.originY\" \u00a0\u00a0(positionChange)=\"popoverPositionChanged($event, \u00a0\u00a0menuPopoverOrigin)\"\n    \u00a0\u00a0cdkConnectedOverlayPanelClass=\"menu-popover\"\n    \u00a0\u00a0>\n    \u00a0\u00a0<div class=\"menu-popover__list\">\n    \u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0</div>\n    </ng-template>\n    ```", "```ts\n    ...\n    import { AfterViewInit, ChangeDetectorRef, Component, HostListener, Input, OnInit, QueryList, ViewChildren } from '@angular/core';\n    ...\n    @Component({...})\n    export class TheAmazingListComponent implements OnInit, AfterViewInit {\n    \u00a0\u00a0...\n    \u00a0\u00a0menuPositions = [...];\n    \u00a0\u00a0menuPopoverOrigin = {\n    \u00a0\u00a0\u00a0\u00a0originY: null\n    \u00a0\u00a0}\n    \u00a0\u00a0...\n    \u00a0\u00a0constructor(private cdRef: ChangeDetectorRef) { }\n    \u00a0\u00a0popoverPositionChanged($event, popover) {\n    \u00a0\u00a0\u00a0\u00a0if (popover.originY !== $event.connectionPair.\u00a0\u00a0\u00a0\u00a0originY) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0popover.originY = $event.connectionPair.originY;\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0this.cdRef.detectChanges();\n    \u00a0\u00a0}\n    \u00a0\u00a0...\n    }\n    ```", "```ts\n    ...\n    .menu-popover {\n    \u00a0\u00a0...\n    \u00a0\u00a0&::before {...}\n    \u00a0\u00a0&--up {\n    \u00a0\u00a0\u00a0\u00a0transform: translateY(-20px);\n    \u00a0\u00a0\u00a0\u00a0&::before {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0top: unset !important;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0transform: rotate(180deg);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0bottom: -10px;\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0}\n    \u00a0\u00a0&__list {...}\n    }\n    ```", "```ts\nopenMenu($event, itemTrigger) {\n\u00a0\u00a0\u00a0\u00a0if ($event) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$event.stopImmediatePropagation();\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0this.popoverMenuTrigger = itemTrigger;\n\u00a0\u00a0\u00a0\u00a0this.menuShown = true;\n\u00a0\u00a0}\n```", "```ts\n<ng-template cdkConnectedOverlay [cdkConnectedOverlayOrigin]=\"popoverMenuTrigger\"\n\u00a0\u00a0[cdkConnectedOverlayOpen]=\"menuShown\" \u00a0\u00a0[cdkConnectedOverlayHasBackdrop]=\"true\"\n\u00a0\u00a0(backdropClick)=\"menuShown = false\" \u00a0\u00a0[cdkConnectedOverlayPositions]=\"menuPositions\"\n\u00a0\u00a0appPopoverPositionalClass targetSelector=\".menu-popover\" \u00a0\u00a0inverseClass=\"menu-popover--up\"\n\u00a0\u00a0[originY]=\"menuPopoverOrigin.originY\" \u00a0\u00a0(positionChange)=\"popoverPositionChanged($event, menuPopoverOrigin)\"\n\u00a0\u00a0cdkConnectedOverlayPanelClass=\"menu-popover\"\n\u00a0\u00a0>\n\u00a0\u00a0...\n</ng-template>\n```", "```ts\n.menu-popover {\n\u00a0\u00a0...\n\u00a0\u00a0&::before {\n\u00a0\u00a0\u00a0\u00a0top: -10px;\n\u00a0\u00a0\u00a0\u00a0border-width: 0px 10px 10px 10px;\n\u00a0\u00a0\u00a0\u00a0border-color: transparent transparent white\u00a0\u00a0transparent;\n\u00a0\u00a0\u00a0\u00a0position: absolute;\n\u00a0\u00a0\u00a0\u00a0content: '';\n\u00a0\u00a0\u00a0\u00a0right: 5%;\n\u00a0\u00a0\u00a0\u00a0border-style: solid;\n\u00a0\u00a0}\n\u00a0\u00a0&--up {...}\n\u00a0\u00a0&__list {...}\n}\n```", "```ts\n.menu-popover {\n\u00a0\u00a0...\n\u00a0\u00a0&::before {...}\n\u00a0\u00a0&--up {\n\u00a0\u00a0\u00a0\u00a0transform: translateY(-20px);\n\u00a0\u00a0\u00a0\u00a0&::before {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0top: unset !important;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0transform: rotate(180deg);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0bottom: -10px;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0}\n\u00a0\u00a0&__list {...}\n}\n```", "```ts\n    ...\n    import { ClipboardModule } from '@angular/cdk/clipboard';\n    @NgModule({\n    \u00a0\u00a0declarations: [...],\n    \u00a0\u00a0imports: [\n    \u00a0\u00a0\u00a0\u00a0BrowserModule,\n    \u00a0\u00a0\u00a0\u00a0AppRoutingModule,\n    \u00a0\u00a0\u00a0\u00a0ClipboardModule\n    \u00a0\u00a0],\n    \u00a0\u00a0...\n    })\n    export class AppModule { }\n    ```", "```ts\n    ...\n    <div class=\"content\" role=\"main\">\n    \u00a0\u00a0<div class=\"content__container\">\n    \u00a0\u00a0\u00a0\u00a0<div class=\"content__container__copy-from\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<h3>Copy From</h3>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div class=\"mb-3 content__container__copy-from__\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0input-group\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<input\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0#linkInput\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[cdkCopyToClipboard]=\"linkInput.value\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(click)=\"copyContent($event, contentTypes.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Link)\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0class=\"form-control\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0type=\"text\" readonly=\"true\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0value=\"...\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div class=\"hint\">...</div>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0</div>\n    </div>\n    ```", "```ts\n    ...\n    <div class=\"content\" role=\"main\">\n    \u00a0\u00a0<div class=\"content__container\">\n    \u00a0\u00a0\u00a0\u00a0<div class=\"content__container__copy-from\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<h3>Copy From</h3>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div class=\"mb-3 content__container__copy-from__\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0input-group\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<textarea\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0#textInput\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0class=\"form-control\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0rows=\"5\">{{loremIpsumText}}</textarea>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<button\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[cdkCopyToClipboard]=\"textInput.value\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(click)=\"copyContent($event, contentTypes.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Text)\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0class=\"btn btn-dark\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{{ contentCopied === contentTypes.Text ? \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'Text copied' : 'Copy text to clipboard'}}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</button>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0</div>\n    </div>\n    ```", "```ts\n    ...\n    <div class=\"content\" role=\"main\">\n    \u00a0\u00a0<div class=\"content__container\">\n    \u00a0\u00a0\u00a0\u00a0<div class=\"content__container__copy-from\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<h3>Copy From</h3>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div class=\"mb-3 content__container__copy-from__\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0input-group\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<img src=\"assets/landscape.jpg\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<button\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(click)=\"copyImageUrl(imageUrl); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0copyContent($event, contentTypes.Image)\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0class=\"btn btn-dark\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</button>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0</div>\n    </div>\n    ```", "```ts\n    import { Clipboard } from '@angular/cdk/clipboard';\n    import { Component, HostListener, OnInit } from '@angular/core';\n    ...\n    @Component({...})\n    export class AppComponent implements OnInit {\n    \u00a0\u00a0...\n    \u00a0\u00a0constructor(private clipboard: Clipboard) {\n    \u00a0\u00a0\u00a0\u00a0this.resetCopiedHash();\n    \u00a0\u00a0}\n    \u00a0\u00a0async copyImageUrl(srcImageUrl) {\n    \u00a0\u00a0\u00a0\u00a0const data = await fetch(srcImageUrl);\n    \u00a0\u00a0\u00a0\u00a0const blob = await data.blob();\n    \u00a0\u00a0\u00a0\u00a0this.clipboard.copy(URL.createObjectURL(blob));\n    \u00a0\u00a0}\n    \u00a0\u00a0...\n    }\n    ```", "```ts\n    ...\n    import {DragDropModule} from '@angular/cdk/drag-drop';\n    @NgModule({\n    \u00a0\u00a0declarations: [...],\n    \u00a0\u00a0imports: [\n    \u00a0\u00a0\u00a0\u00a0BrowserModule,\n    \u00a0\u00a0\u00a0\u00a0AppRoutingModule,\n    \u00a0\u00a0\u00a0\u00a0FontAwesomeModule,\n    \u00a0\u00a0\u00a0\u00a0DragDropModule\n    \u00a0\u00a0],\n    \u00a0\u00a0...\n    })\n    export class AppModule { }\n    ```", "```ts\n    <div class=\"folders\">\n    \u00a0\u00a0...\n    \u00a0\u00a0<div class=\"folders__list\">\n    \u00a0\u00a0\u00a0\u00a0<app-folder\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cdkDropList\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[folder]=\"folder\"\n    \u00a0\u00a0\u00a0\u00a0>\n    \u00a0\u00a0\u00a0\u00a0</app-folder>\n    \u00a0\u00a0</div>\n    \u00a0\u00a0<div class=\"folders__selected-folder-files\" \u00a0\u00a0*ngIf=\"selectedFolder\">\n    \u00a0\u00a0\u00a0\u00a0<div>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<app-file\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cdkDrag\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0*ngFor=\"let file of selectedFolder.files\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[file]=\"file\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0></app-file>\n    \u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0</div>\n    </div>\n    ```", "```ts\n    <div class=\"folders\">\n    \u00a0\u00a0...\n    \u00a0\u00a0<div class=\"folders__selected-folder-files\" \u00a0\u00a0*ngIf=\"selectedFolder\">\n    \u00a0\u00a0\u00a0\u00a0<div cdkDropList>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<app-file ...></app-file>\n    \u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0</div>\n    </div>\n    ```", "```ts\n    <div class=\"folders\">\n    \u00a0\u00a0...\n    \u00a0\u00a0<div class=\"folders__list\">\n    \u00a0\u00a0\u00a0\u00a0<app-folder\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cdkDropList\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[cdkDropListData]=\"folder.files\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0>\n    \u00a0\u00a0\u00a0\u00a0</app-folder>\n    \u00a0\u00a0</div>\n    \u00a0\u00a0<div class=\"folders__selected-folder-files\" \u00a0\u00a0*ngIf=\"selectedFolder\">\n    \u00a0\u00a0\u00a0\u00a0<div\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cdkDropList\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[cdkDropListData]=\"selectedFolder.files\"\n    \u00a0\u00a0\u00a0\u00a0>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<app-file\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cdkDrag\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[cdkDragData]=\"file\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0></app-file>\n    \u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0</div>\n    </div>\n    ```", "```ts\n    <div class=\"folders\">\n    \u00a0\u00a0...\n    \u00a0\u00a0<div class=\"folders__list\">\n    \u00a0\u00a0\u00a0\u00a0<app-folder\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cdkDropList\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[cdkDropListData]=\"folder.files\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(cdkDropListDropped)=\"onFileDrop($event)\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0>\n    \u00a0\u00a0\u00a0\u00a0</app-folder>\n    \u00a0\u00a0</div>\n    \u00a0\u00a0<div class=\"folders__selected-folder-files\" \u00a0\u00a0*ngIf=\"selectedFolder\">\n    \u00a0\u00a0\u00a0\u00a0<div\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cdkDropList\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[cdkDropListData]=\"selectedFolder.files\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(cdkDropListDropped)=\"onFileDrop($event)\"\n    \u00a0\u00a0\u00a0\u00a0>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0</div>\n    </div>\n    ```", "```ts\n    ...\n    import {\n    \u00a0\u00a0CdkDragDrop, moveItemInArray, transferArrayItem,\n    } from '@angular/cdk/drag-drop';\n    @Component({...})\n    export class FoldersListComponent implements OnInit {\n    \u00a0\u00a0...\n    \u00a0\u00a0onFileDrop(event: CdkDragDrop<string[]>) {\n    \u00a0\u00a0\u00a0\u00a0if (event.previousContainer === event.container) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0moveItemInArray(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0event.container.data, event.previousIndex,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0event.currentIndex\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0);\n    \u00a0\u00a0\u00a0\u00a0} else {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0transferArrayItem(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0event.previousContainer.data, event.container.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0data,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0event.previousIndex, event.currentIndex\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0);\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0}\n    }\n    ```", "```ts\n    <div class=\"folders\" cdkDropListGroup>\n    ...\n    </div>\n    ```", "```ts\n    <div class=\"folders\" cdkDropListGroup>\n    \u00a0\u00a0...\n    \u00a0\u00a0<div class=\"folders__selected-folder-files\" \u00a0\u00a0*ngIf=\"selectedFolder\">\n    \u00a0\u00a0\u00a0\u00a0<div\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cdkDropList\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<app-file\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cdkDrag\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<fa-icon\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0class=\"file-drag-preview\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0*cdkDragPreview\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[icon]=\"file.icon\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0></fa-icon>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</app-file>\n    \u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0</div>\n    </div>\n    ```", "```ts\n    $folder-bg: #f5f5f5;\n    $file-preview-transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n    .folders {...}\n    .file-drag-preview {\n    \u00a0\u00a0padding: 10px 20px;\n    \u00a0\u00a0background: transparent;\n    \u00a0\u00a0font-size: 32px;\n    }\n    .file-drop-placeholder {\n    \u00a0\u00a0min-height: 60px;\n    \u00a0\u00a0transition: $file-preview-transition;\n    \u00a0\u00a0display: flex;\n    \u00a0\u00a0align-items: center;\n    \u00a0\u00a0justify-content: center;\n    \u00a0\u00a0font-size: 32px;\n    }\n    ```", "```ts\n    ...\n    * {\n    \u00a0\u00a0user-select: none;\n    }\n    /* Animate items as they're being sorted. */\n    .cdk-drop-list-dragging .cdk-drag {\n    \u00a0\u00a0transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n    }\n    /* Animate an item that has been dropped. */\n    .cdk-drag-animating {\n    \u00a0\u00a0transition: transform 300ms cubic-bezier(0, 0, 0.2, 1);\n    }\n    ```", "```ts\n    <div class=\"folders\" cdkDropListGroup>\n    \u00a0\u00a0...\n    \u00a0\u00a0<div class=\"folders__selected-folder-files\" *ngIf=\"selectedFolder\">\n    \u00a0\u00a0\u00a0\u00a0<div cdkDropList ...>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<app-file cdkDrag ...>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<fa-icon class=\"file-drag-preview\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0*cdkDragPreview ... ></fa-icon>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div class=\"file-drop-placeholder\" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0*cdkDragPlaceholder>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<fa-icon [icon]=\"upArrow\"></fa-icon>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</app-file>\n    \u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0</div>\n    </div>\n    ```", "```ts\n    import { Component, OnInit } from '@angular/core';\n    import { APP_DATA } from '../constants/data';\n    import { IFolder } from '../interfaces';\n    import { faArrowAltCircleUp } from '@fortawesome/free-regular-svg-icons';\n    import {\n    \u00a0\u00a0CdkDragDrop,\n    \u00a0\u00a0moveItemInArray,\n    \u00a0\u00a0transferArrayItem,\n    } from '@angular/cdk/drag-drop';\n    import { FileIconService } from '../core/services/file-icon.service';\n    @Component({...})\n    export class FoldersListComponent implements OnInit {\n    \u00a0\u00a0folders = APP_DATA;\n    \u00a0\u00a0selectedFolder: IFolder = null;\n    \u00a0\u00a0upArrow = faArrowAltCircleUp;\n    \u00a0\u00a0constructor(private fileIconService: FileIconService) \u00a0\u00a0{...}\n    \u00a0\u00a0...\n    }\n    ```", "```ts\n    npm install --save @angular/cdk@12.0.0\n    ```", "```ts\n    ...\n    import { LeaderBoardComponent } from './components/leader-board/leader-board.component';\n    import { CdkStepperModule } from '@angular/cdk/stepper';\n    ...\n    @NgModule({\n    \u00a0\u00a0declarations: [...],\n    \u00a0\u00a0imports: [BrowserModule, AppRoutingModule, \u00a0\u00a0ReactiveFormsModule, CdkStepperModule],\n    \u00a0\u00a0providers: [],\n    \u00a0\u00a0bootstrap: [AppComponent],\n    })\n    export class AppModule {}\n    ```", "```ts\n    ng g c components/game-stepper\n    ```", "```ts\n    import { Component } from '@angular/core';\n    import { CdkStepper } from '@angular/cdk/stepper';\n    @Component({\n    \u00a0\u00a0selector: 'app-game-stepper',\n    \u00a0\u00a0templateUrl: './game-stepper.component.html',\n    \u00a0\u00a0styleUrls: ['./game-stepper.component.scss'],\n    \u00a0\u00a0providers: [{ provide: CdkStepper, useExisting: \u00a0\u00a0GameStepperComponent }],\n    })\n    export class GameStepperComponent extends CdkStepper {\n    }\n    ```", "```ts\n    <section class=\"game-stepper\">\n    \u00a0\u00a0<header>\n    \u00a0\u00a0\u00a0\u00a0<h3>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<ng-container\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0*ngIf=\"selected.stepLabel; else showLabelText\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[ngTemplateOutlet]=\"\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0selected.stepLabel.template\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</ng-container>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<ng-template #showLabelText>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{{ selected.label }}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</ng-template>\n    \u00a0\u00a0\u00a0\u00a0</h3>\n    \u00a0\u00a0</header>\n    </section>\n    ```", "```ts\n    <section class=\"game-stepper\">\n    \u00a0\u00a0<header>\n    \u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0</header>\n    \u00a0\u00a0<section class=\"game-stepper__content\">\n    \u00a0\u00a0\u00a0\u00a0<div [ngTemplateOutlet]=\"selected ? selected.content \u00a0\u00a0\u00a0\u00a0: null\"></div>\n    \u00a0\u00a0</section>\n    \u00a0\u00a0...\n    </section>\n    ```", "```ts\n    <section class=\"game-stepper\">\n    \u00a0\u00a0...\n    \u00a0\u00a0<section class=\"game-stepper__content\">\n    \u00a0\u00a0\u00a0\u00a0<div [ngTemplateOutlet]=\"selected ? selected.content \u00a0\u00a0\u00a0\u00a0: null\"></div>\n    \u00a0\u00a0</section>\n    \u00a0\u00a0<footer class=\"game-stepper__navigation\">\n    \u00a0\u00a0\u00a0\u00a0<button\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0class=\"game-stepper__navigation__button btn \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0btn-primary\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cdkStepperPrevious\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[style.visibility]=\"steps.get(selectedIndex - 1) ? \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'visible' : 'hidden'\"\n    \u00a0\u00a0\u00a0\u00a0>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&larr;\n    \u00a0\u00a0\u00a0\u00a0</button>\n    \u00a0\u00a0\u00a0\u00a0<button\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0class=\"game-stepper__navigation__button btn \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0btn-primary\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cdkStepperNext\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[style.visibility]=\"steps.get(selectedIndex + 1) ? \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'visible' : 'hidden'\"\n    \u00a0\u00a0\u00a0\u00a0>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&rarr;\n    \u00a0\u00a0\u00a0\u00a0</button>\n    \u00a0\u00a0</footer>\n    </section>\n    ```", "```ts\n    .game-stepper {\n    \u00a0\u00a0display: flex;\n    \u00a0\u00a0flex-direction: column;\n    \u00a0\u00a0align-items: center;\n    \u00a0\u00a0&__navigation {\n    \u00a0\u00a0\u00a0\u00a0width: 100%;\n    \u00a0\u00a0\u00a0\u00a0display: flex;\n    \u00a0\u00a0\u00a0\u00a0align-items: center;\n    \u00a0\u00a0\u00a0\u00a0justify-content: space-between;\n    \u00a0\u00a0\u00a0\u00a0> button {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0margin: 0 8px;\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0}\n\n    \u00a0\u00a0&__content {\n    \u00a0\u00a0\u00a0\u00a0min-height: 350px;\n    \u00a0\u00a0\u00a0\u00a0display: flex;\n    \u00a0\u00a0\u00a0\u00a0justify-content: center;\n    \u00a0\u00a0\u00a0\u00a0align-items: center;\n    \u00a0\u00a0\u00a0\u00a0flex-direction: column;\n    \u00a0\u00a0}\n    \u00a0\u00a0header,\n    \u00a0\u00a0footer {\n    \u00a0\u00a0\u00a0\u00a0margin: 10px auto;\n    \u00a0\u00a0}\n    }\n    ```", "```ts\n    <app-game-stepper>\n    \u00a0\u00a0<form (ngSubmit)=\"submitName()\" [formGroup]=\"nameForm\">\n    \u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0</form>\n    \u00a0\u00a0<app-value-guesser></app-value-guesser>\n    \u00a0\u00a0<app-dice></app-dice>\n    \u00a0\u00a0<app-leader-board></app-leader-board>\n    </app-game-stepper>\n    ```", "```ts\n    <app-game-stepper>\n    \u00a0\u00a0<cdk-step>\n    \u00a0\u00a0\u00a0\u00a0<form (ngSubmit)=\"submitName()\" \u00a0\u00a0\u00a0\u00a0[formGroup]=\"nameForm\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0</form>\n    \u00a0\u00a0</cdk-step>\n    \u00a0\u00a0<cdk-step>\n    \u00a0\u00a0\u00a0\u00a0<app-value-guesser></app-value-guesser>\n    \u00a0\u00a0\u00a0\u00a0<app-dice></app-dice>\n    \u00a0\u00a0</cdk-step>\n    \u00a0\u00a0<cdk-step>\n    \u00a0\u00a0\u00a0\u00a0<app-leader-board></app-leader-board>\n    \u00a0\u00a0</cdk-step>\n    </app-game-stepper>\n    ```", "```ts\n    <app-game-stepper>\n    \u00a0\u00a0<cdk-step>\n    \u00a0\u00a0\u00a0\u00a0<ng-template cdkStepLabel>Enter your \u00a0\u00a0\u00a0\u00a0name</ng-template>\n    \u00a0\u00a0\u00a0\u00a0<form (ngSubmit)=\"submitName()\" \u00a0\u00a0\u00a0\u00a0[formGroup]=\"nameForm\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0</form>\n    \u00a0\u00a0</cdk-step>\n    \u00a0\u00a0<cdk-step>\n    \u00a0\u00a0\u00a0\u00a0<ng-template cdkStepLabel>Guess what the value \u00a0\u00a0\u00a0\u00a0will be when the die is rolled</ng-template>\n    \u00a0\u00a0\u00a0\u00a0<app-value-guesser></app-value-guesser>\n    \u00a0\u00a0\u00a0\u00a0<app-dice></app-dice>\n    \u00a0\u00a0</cdk-step>\n    \u00a0\u00a0<cdk-step>\n    \u00a0\u00a0\u00a0\u00a0<ng-template cdkStepLabel> Results</ng-template>\n    \u00a0\u00a0\u00a0\u00a0<app-leader-board></app-leader-board>\n    \u00a0\u00a0</cdk-step>\n    </app-game-stepper>\n    ```", "```ts\n    <app-game-stepper [linear]=\"true\">\n    \u00a0\u00a0<cdk-step [completed]=\"!!nameForm.get('name').value\">\n    \u00a0\u00a0\u00a0\u00a0<ng-template cdkStepLabel> Enter your \u00a0\u00a0\u00a0\u00a0name</ng-template>\n    \u00a0\u00a0\u00a0\u00a0<form (ngSubmit)=\"submitName()\" \u00a0\u00a0\u00a0\u00a0[formGroup]=\"nameForm\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div class=\"mb-3\" *ngIf=\"nameForm.get('name') \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0as nameControl\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<button \u2190 REMOVE THIS\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0type=\"submit\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[disabled]=\"!nameForm.valid\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0class=\"btn btn-primary\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Submit\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</button>\n    \u00a0\u00a0</form>\n    \u00a0\u00a0</cdk-step>\n    \u00a0\u00a0...\n    </app-game-stepper>\n    ```", "```ts\n    <section class=\"game-stepper\">\n    \u00a0\u00a0...\n    \u00a0\u00a0<footer class=\"game-stepper__navigation\">\n    \u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0<button\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0class=\"game-stepper__navigation__button btn \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0btn-primary\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cdkStepperNext\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[disabled]=\"!selected.completed\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[style.visibility]=\"steps.get(selectedIndex + 1) ? \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'visible' : 'hidden'\"\n    \u00a0\u00a0\u00a0\u00a0>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&rarr;\n    \u00a0\u00a0\u00a0\u00a0</button>\n    \u00a0\u00a0</footer>\n    </section>\n    ```", "```ts\n    import { CdkStepper } from '@angular/cdk/stepper';\n    import { Component, OnInit, ViewChild } from '@angular/core';\n    import { FormControl, FormGroup, Validators } from '@angular/forms';\n    @Component({...})\n    export class GameComponent implements OnInit {\n    \u00a0\u00a0@ViewChild(CdkStepper) stepper: CdkStepper;\n    \u00a0\u00a0nameForm = new FormGroup({\n    \u00a0\u00a0\u00a0\u00a0name: new FormControl('', Validators.required),\n    \u00a0\u00a0});\n     ...\n    \u00a0\u00a0submitName() {\n    \u00a0\u00a0\u00a0\u00a0this.stepper.next();\n    \u00a0\u00a0}\n    }\n    ```", "```ts\n    ...\n    import { DiceComponent } from '../components/dice/dice.component';\n    import { ValueGuesserComponent } from '../components/value-guesser/value-guesser.component';\n    import { IDiceSide } from '../interfaces/dice.interface';\n    @Component({...})\n    export class GameComponent implements OnInit {\n    \u00a0\u00a0@ViewChild(CdkStepper) stepper: CdkStepper;\n    \u00a0\u00a0@ViewChild(DiceComponent) diceComponent: DiceComponent;\n    \u00a0\u00a0@ViewChild(ValueGuesserComponent)\n    \u00a0\u00a0valueGuesserComponent: ValueGuesserComponent;\n    \u00a0\u00a0guessedValue = null;\n    \u00a0\u00a0isCorrectGuess = null;\n    \u00a0\u00a0...\n    \u00a0\u00a0submitName() {...}\n    \u00a0\u00a0rollTheDice(guessedValue) {\n    \u00a0\u00a0\u00a0\u00a0this.isCorrectGuess = null;\n    \u00a0\u00a0\u00a0\u00a0this.guessedValue = guessedValue;\n    \u00a0\u00a0\u00a0\u00a0this.diceComponent.rollDice();\n    \u00a0\u00a0}\n    \u00a0\u00a0showResult(diceSide: IDiceSide) {\n    \u00a0\u00a0\u00a0\u00a0this.isCorrectGuess = this.guessedValue === diceSide.value;\n    \u00a0\u00a0}\n    }\n    ```", "```ts\n    <app-game-stepper [linear]=\"true\">\n    \u00a0\u00a0<cdk-step [completed]=\"!!nameForm.get('name').value\">\n    \u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0</cdk-step>\n    \u00a0\u00a0<cdk-step [completed]=\"isCorrectGuess !== null\">\n    \u00a0\u00a0\u00a0\u00a0<ng-template cdkStepLabel\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0>Guess what the value will be when the die is \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0rolled</ng-template\n    \u00a0\u00a0\u00a0\u00a0>\n    \u00a0\u00a0\u00a0\u00a0<app-value-guesser (valueGuessed)=\"rollTheDice \u00a0\u00a0\u00a0\u00a0($event)\"></app-value-guesser>\n    \u00a0\u00a0\u00a0\u00a0<app-dice (diceRolled)=\"showResult($event)\">\u00a0\u00a0\u00a0\u00a0</app-dice>\n    \u00a0\u00a0\u00a0\u00a0<ng-container [ngSwitch]=\"isCorrectGuess\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div class=\"alert alert-success\" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0*ngSwitchCase=\"true\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0You rock {{ nameForm.get('name').value }}! \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0You got 50 points\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div class=\"alert alert-danger\" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0*ngSwitchCase=\"false\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Oops! Try again!\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0\u00a0\u00a0</ng-container>\n    \u00a0\u00a0</cdk-step>\n    \u00a0\u00a0<cdk-step>...</cdk-step>\n    </app-game-stepper>\n    ```", "```ts\n    ...\n    import { LeaderboardService } from '../core/services/leaderboard.service';\n    import { IDiceSide } from '../interfaces/dice.interface';\n    import { IScore } from '../interfaces/score.interface';\n    @Component({...})\n    export class GameComponent implements OnInit {\n    \u00a0\u00a0...\n    \u00a0\u00a0scores: IScore[] = [];\n    \u00a0\u00a0constructor(private leaderboardService: \u00a0\u00a0LeaderboardService) {}\n    \u00a0\u00a0ngOnInit(): void {\n    \u00a0\u00a0\u00a0\u00a0this.scores = this.leaderboardService.getScores();\n    \u00a0\u00a0}\n    \u00a0\u00a0...\n    \u00a0\u00a0showResult(diceSide: IDiceSide) {\n    \u00a0\u00a0\u00a0\u00a0this.isCorrectGuess = this.guessedValue === \u00a0\u00a0\u00a0\u00a0diceSide.value;\n    \u00a0\u00a0\u00a0\u00a0if (!this.isCorrectGuess) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return;\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0this.scores = this.leaderboardService.setScores({\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: this.nameForm.get('name').value,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0score: 50,\n    \u00a0\u00a0\u00a0\u00a0});\n    \u00a0\u00a0}\n    }\n    ```", "```ts\n    <app-game-stepper [linear]=\"true\">\n    \u00a0\u00a0<cdk-step [completed]=\"!!nameForm.get('name').value\">\n    \u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0</cdk-step>\n    \u00a0\u00a0<cdk-step [completed]=\"isCorrectGuess !== null\">\n    \u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0</cdk-step>\n    \u00a0\u00a0<cdk-step>\n    \u00a0\u00a0\u00a0\u00a0<ng-template cdkStepLabel>Results</ng-template>\n    \u00a0\u00a0\u00a0\u00a0<app-leader-board [scores]=\"scores\"></app-leader-\u00a0\u00a0\u00a0\u00a0board>\n    \u00a0\u00a0</cdk-step>\n    </app-game-stepper>\n    ```", "```ts\n    npm install --save @angular/cdk@12.0.0\n    ```", "```ts\n    ...\n    import { TextFieldModule } from '@angular/cdk/text-field';\n    @NgModule({\n    \u00a0\u00a0declarations: [...],\n    \u00a0\u00a0imports: [\n    \u00a0\u00a0\u00a0\u00a0BrowserModule,\n    \u00a0\u00a0\u00a0\u00a0AppRoutingModule,\n    \u00a0\u00a0\u00a0\u00a0TextFieldModule\n    \u00a0\u00a0],\n    \u00a0\u00a0...\n    })\n    export class AppModule { }\n    ```", "```ts\n    <div class=\"write-box-container\">\n    \u00a0\u00a0<div class=\"write-box\">\n    \u00a0\u00a0\u00a0\u00a0<textarea\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cdkTextareaAutosize\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0placeholder=\"Enter your message here\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0class=\"chat-input\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[(ngModel)]=\"chatInput\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0rows=\"1\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(keyup.enter)=\"sendMessage()\"\n    \u00a0\u00a0\u00a0\u00a0></textarea>\n    \u00a0\u00a0</div>\n    \u00a0\u00a0<div class=\"send-button\">\n    \u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0</div>\n    </div>\n    ```", "```ts\n    import { CdkTextareaAutosize } from '@angular/cdk/text-field';\n    import {\n    \u00a0\u00a0...\n    \u00a0\u00a0EventEmitter,\n    \u00a0\u00a0ViewChild,\n    } from '@angular/core';\n    ...\n    @Component({...})\n    export class WriteMessageComponent implements OnInit {\n    \u00a0\u00a0@Output() public onMessageSent = new \u00a0\u00a0EventEmitter<any>();\n    \u00a0\u00a0@ViewChild(CdkTextareaAutosize) newMessageInput: \u00a0\u00a0CdkTextareaAutosize;\n    \u00a0\u00a0public chatInput = '';\n    \u00a0\u00a0...\n    \u00a0\u00a0/**\n    \u00a0\u00a0\u00a0* @author Ahsan Ayaz\n    \u00a0\u00a0\u00a0* Creates a new message and emits to parent component\n    \u00a0\u00a0\u00a0*/\n    \u00a0\u00a0sendMessage() {\n    \u00a0\u00a0\u00a0\u00a0if (this.chatInput.trim().length) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.chatInput = '';\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.newMessageInput.reset();\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0}\n    }\n    ```"]