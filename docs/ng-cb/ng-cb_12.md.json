["```ts\n    ...\n    @Component({...})\n    export class UserCardComponent implements OnInit {\n    \u00a0\u00a0...\n    \u00a0\u00a0constructor(private router: Router) {}\n    \u00a0\u00a0ngOnInit(): void {\n    \u00a0\u00a0\u00a0\u00a0if (!window['appLogs']) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0window['appLogs'] = {};\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0if (!window['appLogs'][this.user.email]) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0window['appLogs'][this.user.email] = 0;\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0}\n    \u00a0\u00a0...\n    \u00a0\u00a0idUsingFactorial(num, length = 1) {\n    \u00a0\u00a0\u00a0\u00a0window['appLogs'][this.user.email]++;\n    \u00a0\u00a0\u00a0\u00a0if (num === 1) {...} else {...}\n    \u00a0\u00a0}\n    }\n    ```", "```ts\n    import {\n    \u00a0\u00a0ChangeDetectionStrategy,\n    \u00a0\u00a0Component,\n    \u00a0\u00a0...\n    } from '@angular/core';\n    ...\n    @Component({\n    \u00a0\u00a0selector: 'app-user-card',\n    \u00a0\u00a0templateUrl: './user-card.component.html',\n    \u00a0\u00a0styleUrls: ['./user-card.component.scss'],\n    \u00a0\u00a0changeDetection: ChangeDetectionStrategy.OnPush,\n    })\n    export class UserCardComponent implements OnInit {\n    \u00a0\u00a0...\n    }\n    ```", "```ts\n    import { ChangeDetectorRef, Component, OnInit} from '@angular/core';\n    ...\n    @Component({...})\n    export class UsersComponent implements OnInit {\n    \u00a0\u00a0users: IUser[];\n    \u00a0\u00a0constructor(\n    \u00a0\u00a0\u00a0\u00a0private userService: UserService,\n    \u00a0\u00a0private cdRef: ChangeDetectorRef\n    \u00a0\u00a0) {}\n    \u00a0\u00a0ngOnInit() {\n    \u00a0\u00a0\u00a0\u00a0this.cdRef.detach();\n    \u00a0\u00a0\u00a0\u00a0this.searchUsers();\n    \u00a0\u00a0}\n    }\n    ```", "```ts\n    ...\n    @Component({...})\n    export class UsersComponent implements OnInit {\n    \u00a0\u00a0...\n    \u00a0\u00a0searchUsers(searchQuery = '') {\n    \u00a0\u00a0\u00a0\u00a0this.userService.searchUsers(\n    searchQuery).subscribe((users) => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.users = users;\n    \u00a0\u00a0this.cdRef.detectChanges();\n    \u00a0\u00a0\u00a0\u00a0});\n    \u00a0\u00a0}\n    \u00a0\u00a0...\n    }\n    ```", "```ts\n    ...\n    @Component({...})\n    export class WatchBoxComponent implements OnInit {\n    \u00a0\u00a0...\n    \u00a0\u00a0ngOnInit(): void {\n    \u00a0\u00a0\u00a0\u00a0this.intervalTimer = setInterval(() => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.timer();\n    \u00a0\u00a0\u00a0\u00a0}, 1);\n    \u00a0\u00a0\u00a0\u00a0setTimeout(() => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0clearInterval(this.intervalTimer);\n    \u00a0\u00a0\u00a0\u00a0}, 4000);\n    \u00a0\u00a0}\n    \u00a0\u00a0...\n    }\n    ```", "```ts\n    ...\n    @Component({...})\n    export class WatchComponent implements OnInit {\n    \u00a0\u00a0...\n    \u00a0\u00a0ngOnInit(): void {\n    \u00a0\u00a0\u00a0\u00a0this.intervalTimer = setInterval(() => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.animate();\n    \u00a0\u00a0\u00a0\u00a0}, 30);\n    \u00a0\u00a0\u00a0\u00a0setTimeout(() => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0clearInterval(this.intervalTimer);\n    \u00a0\u00a0\u00a0\u00a0}, 4000);\n    \u00a0\u00a0}\n    \u00a0\u00a0...\n    }\n    ```", "```ts\n    ...\n    @Component({...})\n    export class WatchBoxComponent implements OnInit {\n    \u00a0\u00a0...\n    \u00a0\u00a0ngOnInit(): void {\n    \u00a0\u00a0\u00a0\u00a0// this.intervalTimer = setInterval(() => {\n    \u00a0\u00a0\u00a0\u00a0//\u00a0\u00a0\u00a0this.timer();\n    \u00a0\u00a0\u00a0\u00a0// }, 1);\n    \u00a0\u00a0\u00a0\u00a0// setTimeout(() => {\n    \u00a0\u00a0\u00a0\u00a0//\u00a0\u00a0\u00a0clearInterval(this.intervalTimer);\n    \u00a0\u00a0\u00a0\u00a0// }, 4000);\n    \u00a0\u00a0}\n    }\n    ```", "```ts\n    import {\n    \u00a0\u00a0...\n    \u00a0\u00a0ViewChild,\n    \u00a0\u00a0NgZone,\n    } from '@angular/core';\n    @Component({...})\n    export class WatchComponent implements OnInit {\n    \u00a0\u00a0...\n    \u00a0\u00a0constructor(private zone: NgZone) {\n    \u00a0\u00a0\u00a0...\n    \u00a0\u00a0}\n    \u00a0\u00a0ngOnInit(): void {\n    \u00a0\u00a0\u00a0\u00a0this.zone.runOutsideAngular(() => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.intervalTimer = setInterval(() => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.animate();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}, 30);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0setTimeout(() => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0clearInterval(this.intervalTimer);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}, 2500);\n    \u00a0\u00a0\u00a0\u00a0});\n    \u00a0\u00a0}\n    \u00a0\u00a0...\n    }\n    ```", "```ts\n    ...\n    @Component({...})\n    export class WatchComponent implements OnInit {\n    \u00a0\u00a0...\n    \u00a0\u00a0ngOnInit(): void {\n    \u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0this.ngZone.runOutsideAngular(() => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.intervalTimer = setInterval(() => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.animate();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}, 30);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0setTimeout(() => { // \u2190 Remove this block\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0clearInterval(this.intervalTimer);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}, 4000);\n    \u00a0\u00a0\u00a0\u00a0});\n    \u00a0\u00a0}\n    \u00a0\u00a0...\n    }\n    ```", "```ts\n    import { Component, OnInit } from '@angular/core';\n    @Component({\n    \u00a0\u00a0selector: 'app-watch-box',\n    \u00a0\u00a0templateUrl: './watch-box.component.html',\n    \u00a0\u00a0styleUrls: ['./watch-box.component.scss'],\n    })\n    export class WatchBoxComponent implements OnInit {\n    \u00a0\u00a0name = '';\n    \u00a0\u00a0time = {\n    \u00a0\u00a0\u00a0\u00a0hours: 0,\n    \u00a0\u00a0\u00a0\u00a0minutes: 0,\n    \u00a0\u00a0\u00a0\u00a0seconds: 0,\n    \u00a0\u00a0\u00a0\u00a0milliseconds: 0,\n    \u00a0\u00a0};\n    \u00a0\u00a0intervalTimer;\n    \u00a0\u00a0constructor() {}\n    \u00a0\u00a0ngOnInit(): void {\n    \u00a0\u00a0\u00a0\u00a0this.intervalTimer = setInterval(() => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.timer();\n    \u00a0\u00a0\u00a0\u00a0}, 1);\n    \u00a0\u00a0\u00a0\u00a0setTimeout(() => { // \u2190 Remove this\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0clearInterval(this.intervalTimer);\n    \u00a0\u00a0\u00a0\u00a0}, 4000);\n    \u00a0\u00a0}\n    \u00a0\u00a0...\n    }\n    ```", "```ts\n    ng serve --prod\n    ```", "```ts\nel.style.setProperty('--x', `${this.xCoordinate}px`);\nel.style.setProperty('--y', `${this.yCoordinate}px`);\n```", "```ts\n    ...\n    @Component({...})\n    export class TheAmazingListComponent implements OnInit {\n    \u00a0\u00a0...\n    \u00a0\u00a0ngOnInit(): void {}\n    \u00a0\u00a0trackByFn(_, user: AppUserCard) {\n    \u00a0\u00a0\u00a0\u00a0return user.email;\n    \u00a0\u00a0}\n    }\n    ```", "```ts\n    <h4 class=\"heading\">Our trusted customers</h4>\n    <div class=\"list list-group\">\n    \u00a0\u00a0<app-list-item\n    \u00a0\u00a0\u00a0\u00a0*ngFor=\"let item of listItems; trackBy: trackByFn\"\n    \u00a0\u00a0\u00a0\u00a0[item]=\"item\"\n    \u00a0\u00a0\u00a0\u00a0(itemClicked)=\"itemClicked.emit(item)\"\n    \u00a0\u00a0\u00a0\u00a0(itemDeleted)=\"itemDeleted.emit(item)\"\n    \u00a0\u00a0>\n    \u00a0\u00a0</app-list-item>\n    </div>\n    ```", "```ts\nupdateUser(updatedUser: AppUserCard) {\n\u00a0\u00a0\u00a0\u00a0this.users = this.users.map((user) => {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (user.email === updatedUser.email) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...updatedUser,\n\u00a0\u00a0\u00a0};\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// this tells angular that every object has now \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0a different reference\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return { ...user };\n\u00a0\u00a0\u00a0\u00a0});\n\u00a0\u00a0}\n```", "```ts\n    ng g pipe core/pipes/unique-id\n    ```", "```ts\n    ...\n    @Pipe({...})\n    export class UniqueIdPipe implements PipeTransform {\n    \u00a0\u00a0characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdef \u00a0\u00a0ghijklmnopqrstuvwxyz0123456789';\n    \u00a0\u00a0createUniqueId(length) {\n    \u00a0\u00a0\u00a0\u00a0var result = '';\n    \u00a0\u00a0\u00a0\u00a0const charactersLength = this.characters.length;\n    \u00a0\u00a0\u00a0\u00a0for (let i = 0; i < length; i++) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0result += this.characters.charAt(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Math.floor(Math.random() * charactersLength)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0);\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0return result;\n    \u00a0\u00a0}\n    \u00a0\u00a0...\n    \u00a0\u00a0transform(index: unknown, ...args: unknown[]): unknown {\n    \u00a0\u00a0\u00a0\u00a0return null;\n    \u00a0\u00a0}\n    }\n    ```", "```ts\n    import { Pipe, PipeTransform } from '@angular/core';\n    @Pipe({\n    \u00a0\u00a0name: 'uniqueId',\n    })\n    export class UniqueIdPipe implements PipeTransform {\n    \u00a0\u00a0...\n    \u00a0\u00a0idUsingFactorial(num, length = 1) {\n    \u00a0\u00a0\u00a0\u00a0if (num === 1) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return this.createUniqueId(length);\n    \u00a0\u00a0\u00a0\u00a0} else {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const fact = length * (num - 1);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return this.idUsingFactorial(num - 1, fact);\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0}\n    \u00a0\u00a0transform(index: number): string {\n    \u00a0\u00a0\u00a0\u00a0return this.idUsingFactorial(index);\n    \u00a0\u00a0}\n    }\n    ```", "```ts\n    <div class=\"user-card\">\n    \u00a0\u00a0<div class=\"card\" *ngIf=\"user\" (click)=\"cardClicked()\">\n    \u00a0\u00a0\u00a0\u00a0<img [src]=\"user.picture.large\" class=\"card-img-top\" \u00a0\u00a0\u00a0\u00a0alt=\"...\" />\n    \u00a0\u00a0\u00a0\u00a0<div class=\"card-body\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<h5 class=\"card-title\">{{ user.name.first }} \u00a0\u00a0\u00a0\u00a0\u00a0{{ user.name.last }}</h5>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<p class=\"card-text\">{{ user.email }}</p>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<p class=\"card-text unique-id\" title=\"{{ index | \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0uniqueId }}\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{{ index | uniqueId }}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</p>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<a href=\"tel: {{ user.phone }}\" class=\"btn \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0btn-primary\">{{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0user.phone\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}}</a>\n    \u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0</div>\n    </div>\n    ```", "```ts\n    ng generate web-worker core/workers/idGenerator\n    ```", "```ts\n    /// <reference lib=\"webworker\" />\n    import createUniqueId from '../constants/create-unique-id';\n    addEventListener('message', ({ data }) => {\n    \u00a0\u00a0console.log('message received IN worker', data);\n    \u00a0\u00a0const { index, email } = data;\n    \u00a0\u00a0let uniqueId;\n    \u00a0\u00a0for (let i = 0, len = (index + 1) * 100000; i < len; \u00a0\u00a0++i) {\n    \u00a0\u00a0\u00a0\u00a0uniqueId = createUniqueId(50);\n    \u00a0\u00a0}\n    \u00a0\u00a0postMessage({ uniqueId, email });\n    });\n    ```", "```ts\n    let UNIQUE_ID_WORKER: Worker = null;\n    const getUniqueIdWorker = (): Worker => {\n    \u00a0\u00a0if (typeof Worker !== 'undefined' && UNIQUE_ID_WORKER \u00a0\u00a0=== null) {\n    \u00a0\u00a0\u00a0\u00a0UNIQUE_ID_WORKER = new Worker('../workers/\u00a0\u00a0\u00a0\u00a0id-generator.worker', {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0type: 'module',\n    \u00a0\u00a0\u00a0\u00a0});\n    \u00a0\u00a0}\n    \u00a0\u00a0return UNIQUE_ID_WORKER;\n    };\n    export default getUniqueIdWorker;\n    ```", "```ts\n    ...\n    import getUniqueIdWorker from '../constants/get-unique-id-worker';\n    @Injectable({...})\n    export class UserService {\n    \u00a0\u00a0...\n    \u00a0\u00a0worker: Worker = getUniqueIdWorker();\n    \u00a0\u00a0constructor(private http: HttpClient) {\n    \u00a0\u00a0this.worker.onmessage = ({ data: { uniqueId, email } \u00a0\u00a0}) => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log('received message from worker', \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0uniqueId, email);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const user = this.usersCache.find((user) => user.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0email === email);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0localStorage.setItem(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0`ng_user__${user.email}`,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0JSON.stringify({\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...user,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0uniqueId,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0})\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0);\n    \u00a0\u00a0\u00a0\u00a0};\n    \u00a0\u00a0}\n    \u00a0\u00a0...\n    }\n    ```", "```ts\n    ...\n    @Injectable({...})\n    export class UserService {\n    \u00a0\u00a0...\n    \u00a0\u00a0saveUserUniqueIdsToStorage(user: IUser, index) {\n    \u00a0\u00a0\u00a0\u00a0let uniqueId;\n    \u00a0\u00a0\u00a0\u00a0const worker: Worker = getUniqueIdWorker();\n    \u00a0\u00a0\u00a0\u00a0if (worker !== null) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0worker.postMessage({ index, email: user.email });\n    \u00a0\u00a0\u00a0\u00a0} else {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// fallback\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for(let i = 0, len = (index + 1) * 100000; i<len; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0++i) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0uniqueId = createUniqueId(50);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0localStorage.setItem(...);\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0}\n    \u00a0\u00a0...\n    }\n    ```", "```ts\n/* To learn more about this file see: https://angular.io/config/tsconfig. */\n{\n\u00a0\u00a0\"extends\": \"./tsconfig.json\",\n\u00a0\u00a0\"compilerOptions\": {\n\u00a0\u00a0\u00a0\u00a0\"outDir\": \"./out-tsc/worker\",\n\u00a0\u00a0\u00a0\u00a0\"lib\": [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"es2018\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"webworker\"\n\u00a0\u00a0\u00a0\u00a0],\n\u00a0\u00a0\u00a0\u00a0\"types\": []\n\u00a0\u00a0},\n\u00a0\u00a0\"include\": [\n\u00a0\u00a0\u00a0\u00a0\"src/**/*.worker.ts\"\n\u00a0\u00a0]\n}\n```", "```ts\n    ...\n    import * as moment from '../lib/moment';\n    import * as THREE from 'three';\n    @Component({...})\n    export class AppComponent {\n    \u00a0\u00a0...\n    \u00a0\u00a0constructor(private auth: AuthService, private router: \u00a0\u00a0Router) {\n    \u00a0\u00a0\u00a0\u00a0const scene = new THREE.Scene();\n    \u00a0\u00a0\u00a0\u00a0console.log(moment().format('MMM Do YYYY'));\n    \u00a0\u00a0}\n    \u00a0\u00a0...\n    }\n    ```", "```ts\n    ...\n    {\n    \u00a0\u00a0\"budgets\": [\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"type\": \"initial\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"maximumWarning\": \"800kb\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"maximumError\": \"1mb\"\n    \u00a0\u00a0\u00a0\u00a0},\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"type\": \"anyComponentStyle\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"maximumWarning\": \"6kb\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"maximumError\": \"10kb\"\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0]\n    }\n    ...\n    ```", "```ts\n    npm install --save date-fns\n    ```", "```ts\n    import { Component } from '@angular/core';\n    import { Router } from '@angular/router';\n    import { AuthService } from './services/auth.service';\n    import { format } from 'date-fns';\n    import { Scene } from 'three';\n    @Component({...})\n    export class AppComponent {\n    \u00a0\u00a0...\n    \u00a0\u00a0constructor(private auth: AuthService, private router: \u00a0\u00a0Router) {\n    \u00a0\u00a0\u00a0\u00a0console.log(format(new Date(), 'LLL do yyyy'));\n    \u00a0\u00a0\u00a0\u00a0const scene = new Scene();\n    \u00a0\u00a0}\n    \u00a0\u00a0...\n    }\n    ```", "```ts\n    npm install --save-dev webpack-bundle-analyzer\n    ```", "```ts\n    {\n    \u00a0\u00a0...\n    \u00a0\u00a0\"scripts\": {\n    \u00a0\u00a0\u00a0\u00a0\"ng\": \"ng\",\n    \u00a0\u00a0\u00a0\u00a0\"start\": \"ng serve\",\n    \u00a0\u00a0\u00a0\u00a0\"build\": \"ng build\",\n    \u00a0\u00a0\u00a0\u00a0\"test\": \"ng test\",\n    \u00a0\u00a0\u00a0\u00a0\"lint\": \"ng lint\",\n    \u00a0\u00a0\u00a0\u00a0\"e2e\": \"ng e2e\",\n    \u00a0\u00a0\u00a0\u00a0\"analyze-bundle\": \"webpack-bundle-analyzer \u00a0\u00a0\u00a0\u00a0dist/using-webpack-bundle-analyzer/stats.json\"\n    \u00a0\u00a0},\n    \u00a0\u00a0\"private\": true,\n    \u00a0\u00a0\"dependencies\": {... },\n    \u00a0\u00a0\"devDependencies\": {...}\n    }\n    ```", "```ts\n    ng build --configuration production --stats-json\n    ```", "```ts\n    npm run analyze-bundle\n    ```", "```ts\n    npm install --save date-fns\n    ```", "```ts\n    import { Component } from '@angular/core';\n    import { Router } from '@angular/router';\n    import { AuthService } from './services/auth.service';\n    import { format } from 'date-fns';\n    import { Scene } from 'three';\n    @Component({...})\n    export class AppComponent {\n    \u00a0\u00a0...\n    \u00a0\u00a0constructor(private auth: AuthService, private router: \u00a0\u00a0Router) {\n    \u00a0\u00a0\u00a0\u00a0const scene = new Scene();\n    \u00a0\u00a0\u00a0\u00a0console.log(format(new Date(), 'LLL do yyyy'));\n    \u00a0\u00a0}\n    \u00a0\u00a0...\n    }\n    ```"]