["```ts\n    npm install -d cypress concurrently\n    ```", "```ts\n    {\n    \u00a0\u00a0\"name\": \"angular-cypress-starter\",\n    \u00a0\u00a0\"version\": \"0.0.0\",\n    \u00a0\u00a0\"scripts\": {\n    \u00a0\u00a0\u00a0\u00a0... \n    \u00a0\u00a0\u00a0\u00a0\"e2e\": \"ng e2e\",\n    \u00a0\u00a0\u00a0\u00a0\"start:cypress\": \"cypress open\",\n    \u00a0\u00a0\"cypress:test\": \"concurrently 'npm run start' 'npm run \u00a0\u00a0start:cypress'\"\n    \u00a0\u00a0},\n    \u00a0\u00a0...\n    }\n    ```", "```ts\n    npm run cypress:test\n    ```", "```ts\n    {\n    \u00a0\u00a0\"baseUrl\": \"http://localhost:4200\",\n    \u00a0\u00a0\"ignoreTestFiles\": \"**/examples/*\",\n    \u00a0\u00a0\"viewportHeight\": 760,\n    \u00a0\u00a0\"viewportWidth\": 1080\n    }\n    ```", "```ts\n    /// <reference types=\"cypress\" />\n    context('App', () => {\n    \u00a0\u00a0beforeEach(() => {\n    \u00a0\u00a0\u00a0\u00a0cy.visit('/');\n    \u00a0\u00a0});\n    \u00a0\u00a0it('should have the title \"Writing your first Cypress \u00a0\u00a0test \"', () => {\n    \u00a0\u00a0\u00a0\u00a0// https://on.cypress.io/title\n    \u00a0\u00a0\u00a0\u00a0cy.title().should('eq', 'Writing your first Cypress \u00a0\u00a0\u00a0\u00a0test');\n    \u00a0\u00a0});\n    });\n    ```", "```ts\n    ...\n    context('App', () => {\n    \u00a0\u00a0...\n    \u00a0\u00a0it('should show the counter component when the \"Toggle \u00a0\u00a0Counter Visibility\" button is clicked', () => {\n    \u00a0\u00a0\u00a0\u00a0cy.get('.counter__heading').should('have.length', 0);\n    \u00a0\u00a0\u00a0\u00a0cy.get('.counter').should('have.length', 0);\n    \u00a0\u00a0\u00a0\u00a0cy.contains('Toggle Counter Visibility').click();\n    \u00a0\u00a0\u00a0\u00a0cy.get('.counter__heading').should('be.visible');\n    \u00a0\u00a0\u00a0\u00a0cy.get('.counter').should('be.visible');\n    \u00a0\u00a0});\n    });\n    ```", "```ts\n    ...\n    context('App', () => {\n    \u00a0\u00a0...\n    \u00a0\u00a0it('should show the action buttons on hovering the \u00a0\u00a0counter card', () => {\n    \u00a0\u00a0\u00a0\u00a0cy.contains('Toggle Counter Visibility').click();\n    \u00a0\u00a0\u00a0\u00a0cy.get('.counter').trigger('mouseover');\n    \u00a0\u00a0\u00a0\u00a0cy.get('.counter__actions__action').\u00a0\u00a0\u00a0\u00a0should('have.length', 3);\n    \u00a0\u00a0\u00a0\u00a0cy.contains('Increment').should('be.visible');\n    \u00a0\u00a0\u00a0\u00a0cy.contains('Decrement').should('be.visible');\n    \u00a0\u00a0\u00a0\u00a0cy.contains('Reset').should('be.visible');\n    \u00a0\u00a0});\n    });\n    ```", "```ts\n    npm install --save-dev cypress-real-events\n    ```", "```ts\n    ...\n    // Import commands.js using ES2015 syntax:\n    import './commands';\n    import 'cypress-real-events/support';\n    ...\n    ```", "```ts\n    /// <reference types=\"cypress\" />\n    /// <reference types=\"cypress-real-events\" />\n    context('App', () => {\n    \u00a0\u00a0...\n    \u00a0\u00a0it('should show the action buttons on hovering the \u00a0\u00a0counter card', () => {\n    \u00a0\u00a0\u00a0\u00a0cy.contains('Toggle Counter Visibility').click();\n    \u00a0\u00a0\u00a0\u00a0cy.get('.counter').realHover();\n    \u00a0\u00a0\u00a0\u00a0cy.get('.counter__actions__action').\u00a0\u00a0\u00a0\u00a0should('have.length', 3);\n    \u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0});\n    });\n    ```", "```ts\n    /// <reference types=\"cypress\" />\n    context('Login', () => {\n    \u00a0\u00a0beforeEach(() => {\n    \u00a0\u00a0\u00a0\u00a0cy.visit('/');\n    \u00a0\u00a0});\n    \u00a0\u00a0it('should have the button disabled if the form inputs \u00a0\u00a0are not valid', () => {\n    \u00a0\u00a0\u00a0\u00a0// https://on.cypress.io/title\n    \u00a0\u00a0\u00a0\u00a0// No input values\n    \u00a0\u00a0\u00a0\u00a0cy.contains('Submit').should('be.disabled');\n    \u00a0\u00a0\u00a0\u00a0cy.get('#passwordInput').type('password123');\n    \u00a0\u00a0\u00a0\u00a0cy.contains('Submit').should('be.disabled');\n    \u00a0\u00a0\u00a0\u00a0cy.get('#emailInput').type('ahsanayaz@gmail.com');\n    \u00a0\u00a0\u00a0\u00a0cy.get('#passwordInput').clear();\n    \u00a0\u00a0\u00a0\u00a0cy.contains('Submit').should('be.disabled');\n    \u00a0\u00a0});\n    });\n    ```", "```ts\n    ...\n    context('Login', () => {\n    \u00a0\u00a0...\n    \u00a0\u00a0it('should submit the form with the correct values and \u00a0\u00a0show the success alert', () => {\n    \u00a0\u00a0\u00a0\u00a0cy.get('#emailInput')\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.type('ahsan.ayaz@domain.com')\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.get('#passwordInput')\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.type('password123');\n    \u00a0\u00a0\u00a0\u00a0cy.contains('Submit').click();\n    \u00a0\u00a0\u00a0\u00a0cy.get('.alert.alert-success').should('be.visible');\n    \u00a0\u00a0});\n    });\n    ```", "```ts\n    ...\n    context('Login', () => {\n    \u00a0\u00a0...\n    \u00a0\u00a0it('should submit the form with the correct values and \u00a0\u00a0show the success alert', () => {\n    \u00a0\u00a0\u00a0\u00a0successfulLogin();\n    \u00a0\u00a0\u00a0\u00a0cy.get('.alert.alert-success').should('be.visible');\n    \u00a0\u00a0});\n    \u00a0\u00a0it('should hide the success alert on clicking close \u00a0\u00a0button', () => {\n    \u00a0\u00a0\u00a0\u00a0successfulLogin();\n    \u00a0\u00a0\u00a0\u00a0cy.get('.alert.alert-success').find('.btn-close').\u00a0\u00a0\u00a0\u00a0click();\n    \u00a0\u00a0\u00a0\u00a0cy.get('.alert.alert-success').should((domList) => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0expect(domList.length).to.equal(0);\n    \u00a0\u00a0\u00a0\u00a0});\n    \u00a0\u00a0});\n    });\n    function successfulLogin() {\n    \u00a0\u00a0cy.get('#emailInput')\n    \u00a0\u00a0\u00a0\u00a0.type('ahsan.ayaz@domain.com')\n    \u00a0\u00a0\u00a0\u00a0.get('#passwordInput')\n    \u00a0\u00a0\u00a0\u00a0.type('password123');\n    \u00a0\u00a0cy.contains('Submit').click();\n    }\n    ```", "```ts\n    ...\n    context('Login', () => {\n    \u00a0\u00a0...\n    \u00a0\u00a0it('should hide the success alert on changing the \u00a0\u00a0input', () => {\n    \u00a0\u00a0\u00a0\u00a0successfulLogin();\n    \u00a0\u00a0\u00a0\u00a0cy.get('#emailInput').clear().\u00a0\u00a0\u00a0\u00a0type('mohsin.ayaz@domain.com');\n    \u00a0\u00a0\u00a0\u00a0cy.get('.alert.alert-success').should((domList) => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0expect(domList.length).to.equal(0);\n    \u00a0\u00a0\u00a0\u00a0});\n    \u00a0\u00a0});\n    });\n    ```", "```ts\n    ...\n    context('Login', () => {\n     ...\n    \u00a0\u00a0it('should show the (required) input errors on invalid \u00a0\u00a0inputs', () => {\n    \u00a0\u00a0\u00a0\u00a0['#emailHelp', '#passwordHelp'].map((selector) => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cy.get(selector).should((domList) => \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0expect(domList.length).to.equal(0));\n    \u00a0\u00a0\u00a0\u00a0});\n    \u00a0\u00a0\u00a0\u00a0cy.get('#emailInput').type(\u00a0\u00a0\u00a0\u00a0'mohsin.ayaz@domain.com').clear().blur();\n    \u00a0\u00a0\u00a0\u00a0cy.get('#emailHelp').should('be.visible');\n    \u00a0\u00a0\u00a0\u00a0cy.get('#passwordInput').type(\u00a0\u00a0\u00a0\u00a0'password123').clear().blur();\n    \u00a0\u00a0\u00a0\u00a0cy.get('#passwordHelp').should('be.visible');\n    \u00a0\u00a0});\n    });\n    ```", "```ts\ncy.contains('Submit').should('be.disabled');\n```", "```ts\ncy.get('#emailInput')\n\u00a0\u00a0\u00a0\u00a0.type('ahsan.ayaz@domain.com')\n\u00a0\u00a0\u00a0\u00a0.get('#passwordInput')\n\u00a0\u00a0\u00a0\u00a0.type('password123');\n\u00a0\u00a0cy.contains('Submit').click();\n```", "```ts\ncy.get('.alert.alert-success').should((domList) => {\n\u00a0\u00a0\u00a0\u00a0expect(domList.length).to.equal(0);\n});\n```", "```ts\ncy.get('#emailInput').type('mohsin.ayaz@domain.com').clear().blur();\ncy.get('#emailHelp').should('be.visible');\ncy.get('#passwordInput').type('password123').clear().blur();\ncy.get('#passwordHelp').should('be.visible');\n```", "```ts\n    ...\n    import { debounceTime, takeWhile } from 'rxjs/operators';\n    @Component({...})\n    export class UsersComponent implements OnInit {\n    \u00a0\u00a0...\n    \u00a0\u00a0ngOnInit() {\n    \u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0this.searchForm\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.get('username')\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.valueChanges.pipe(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0takeWhile(() => !!this.componentAlive),\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0debounceTime(5000)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.subscribe(() => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.searchUsers();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0});\n    \u00a0\u00a0}\n    \u00a0\u00a0...\n    }\n    ```", "```ts\n    ...\n    context('Users', () => {\n    \u00a0\u00a0...\n    \u00a0\u00a0it('should get the users list on searching', () => {\n    \u00a0\u00a0\u00a0\u00a0cy.intercept('https://api.randomuser.me/*')\u00a0\u00a0\u00a0\u00a0.as('searchUsers');\n    \u00a0\u00a0\u00a0\u00a0cy.get('#searchInput').type('irin');\n    \u00a0\u00a0\u00a0\u00a0cy.get('app-user-card').should((domList) => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0expect(domList.length).equal(1);\n    \u00a0\u00a0\u00a0\u00a0});\n    \u00a0\u00a0});\n    });\n    ```", "```ts\n    ...\n    context('Users', () => {\n    \u00a0\u00a0...\n    \u00a0\u00a0it('should get the users list on searching', () => {\n    \u00a0\u00a0\u00a0\u00a0cy.intercept('https://api.randomuser.me/*')\u00a0\u00a0\u00a0\u00a0.as('searchUsers');\n    \u00a0\u00a0\u00a0\u00a0cy.get('#searchInput').type('irin');\n    \u00a0\u00a0\u00a0\u00a0cy.wait('@searchUsers');\n    \u00a0\u00a0\u00a0\u00a0cy.get('app-user-card').should((domList) => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0expect(domList.length).equal(1);\n    \u00a0\u00a0\u00a0\u00a0});\n    \u00a0\u00a0});\n    });\n    ```", "```ts\n    ...\n    context('Users', () => {\n    \u00a0\u00a0...\n    \u00a0\u00a0it('should have the search button disabled when there \u00a0\u00a0is no input', () => {\n    \u00a0\u00a0\u00a0\u00a0const submitButton = Cypress.$('#userSearchSubmit');\n    \u00a0\u00a0\u00a0\u00a0console.log(submitButton);\n    \u00a0\u00a0});\n    });\n    ```", "```ts\n    ...\n    context('Users', () => {\n    \u00a0\u00a0...\n    \u00a0\u00a0it('should have the search button disabled when there \u00a0\u00a0is no input', () => {\n    \u00a0\u00a0\u00a0\u00a0const submitButton = Cypress.$('#userSearchSubmit');\n    \u00a0\u00a0\u00a0\u00a0console.log(submitButton);\n    \u00a0\u00a0const appUserCards = Cypress.$('app-user-card');\n    \u00a0\u00a0console.log(appUserCards);\n    \u00a0\u00a0});\n    });\n    ```", "```ts\n    ...\n    context('Users', () => {\n    \u00a0\u00a0...\n    \u00a0\u00a0it('should have the search button disabled when there \u00a0\u00a0is no input', () => {\n    \u00a0\u00a0\u00a0\u00a0const submitButton = Cypress.$('#userSearchSubmit');\n    \u00a0\u00a0\u00a0\u00a0cy.wrap(submitButton).should('have.attr', \u00a0\u00a0\u00a0\u00a0'disabled');\n    \u00a0\u00a0\u00a0\u00a0cy.get('#searchInput').type('irin');\n    \u00a0\u00a0\u00a0\u00a0cy.wait(5000);\n    \u00a0\u00a0\u00a0\u00a0const appUserCards = Cypress.$('app-user-card');\n    \u00a0\u00a0\u00a0\u00a0console.log(appUserCards);\n    \u00a0\u00a0\u00a0\u00a0cy.wrap(submitButton).should('not.have.attr', \u00a0\u00a0\u00a0\u00a0'disabled');\n    \u00a0\u00a0});\n    });\n    ```", "```ts\n    ...\n    context('Users', () => {\n    \u00a0\u00a0...\n    \u00a0\u00a0it('should have the search button disabled when there \u00a0\u00a0is no input', () => {\n    \u00a0\u00a0\u00a0\u00a0const submitButton = Cypress.$('#userSearchSubmit');\n    \u00a0\u00a0\u00a0\u00a0cy.wrap(submitButton).should('have.attr', 'disabled');\n    \u00a0\u00a0\u00a0\u00a0cy.get('#searchInput').type('irin');\n    \u00a0\u00a0\u00a0\u00a0cy.wrap(submitButton).should('not.have.attr', \u00a0\u00a0\u00a0\u00a0'disabled');\n    \u00a0\u00a0});\n    });\n    ```", "```ts\n    ...\n    import API_USERS from '../constants/API_USERS';\n    context('Users', () => {\n    \u00a0\u00a0...\n    \u00a0\u00a0it('should return the same users as the seed data \u00a0\u00a0every time', async () => {\n    \u00a0\u00a0\u00a0\u00a0const { _ } = Cypress;\n    \u00a0\u00a0\u00a0\u00a0const response = await cy.request(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'https://api.randomuser.me/?\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0results=10&seed=packt'\n    \u00a0\u00a0\u00a0\u00a0);\n    \u00a0\u00a0\u00a0\u00a0const propsToCompare = ['name.first', 'name.last', \u00a0\u00a0\u00a0\u00a0'email'];\n    \u00a0\u00a0\u00a0\u00a0const results = _.get(response, 'body.results');\n    \u00a0\u00a0\u00a0\u00a0_.each(results, (user, index) => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const apiUser = API_USERS[index];\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_.each(propsToCompare, (prop) => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const userPropVal = _.get(user, prop);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const apiUserPropVal = _.get(apiUser, prop);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return expect(userPropVal).\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0to.equal(apiUserPropVal);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0});\n    \u00a0\u00a0\u00a0\u00a0});\n    \u00a0\u00a0});\n    });\n    ```", "```ts\n    ...\n    context('Users', () => {\n    \u00a0\u00a0...\n    \u00a0\u00a0it('should show the formatted date of birth on the \u00a0\u00a0user card', () => {\n    \u00a0\u00a0\u00a0\u00a0const { _, moment } = Cypress;\n    \u00a0\u00a0\u00a0\u00a0const apiUserDate = _.get(API_USERS[0], 'dob.date');\n    \u00a0\u00a0\u00a0\u00a0const apiUserDateFormatted = moment(apiUserDate).\u00a0\u00a0\u00a0\u00a0format(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'dddd, MMMM D, YYYY'\n    \u00a0\u00a0\u00a0\u00a0);\n    \u00a0\u00a0\u00a0\u00a0cy.get('app-user-card')\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.eq(0)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.find('#userCardDOB')\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.should((el) => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0expect(el.text().trim()).\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0to.equal(apiUserDateFormatted);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0});\n    \u00a0\u00a0});\n    });\n    ```", "```ts\n    ...\n    context('Users', () => {\n    \u00a0\u00a0...\n    \u00a0\u00a0it('should go to the user details page with the user \u00a0\u00a0uuid', () => {\n    \u00a0\u00a0\u00a0\u00a0const { minimatch } = Cypress;\n    \u00a0\u00a0\u00a0\u00a0cy.get('app-user-card').eq(0).click();\n    \u00a0\u00a0\u00a0\u00a0const expectedURL = `http://localhost:4200/\u00a0\u00a0\u00a0\u00a0users/${API_USERS[0].login.uuid}`;\n    \u00a0\u00a0\u00a0\u00a0cy.url().should((url) => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const urlMatches = minimatch(url, \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0`${expectedURL}*`);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0expect(urlMatches).to.equal(true);\n    \u00a0\u00a0\u00a0\u00a0});\n    \u00a0\u00a0});\n    });\n    ```", "```ts\n    {\n    \u00a0\u00a0\"fixture_version\": \"1\",\n    \u00a0\u00a0\"results\": [\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"gender\": \"male\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"name\": { \"title\": \"Mr\", \"first\": \"Irineu\", \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"last\": \"da Rocha\" },\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0},\n    \u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"gender\": \"male\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"name\": { \"title\": \"Mr\", \"first\": \"Justin\", \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"last\": \"Grewal\" },\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0]\n    }\n    ```", "```ts\n    ...\n    context('Users', () => {\n    \u00a0\u00a0beforeEach(() => {\n    \u00a0\u00a0\u00a0\u00a0cy.fixture('users.json')\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.then((response) => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cy.intercept('GET', 'https://api.randomuser.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0me/*', response).as(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'searchUsers'\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0})\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.visit('/users');\n    \u00a0\u00a0});\n    \u00a0\u00a0...\n    \u00a0\u00a0it('should get the users list on searching', () => {\n    \u00a0\u00a0\u00a0\u00a0cy.intercept('\n    https://api.randomuser.me/*').as('searchUsers'); \u2190 // REMOVE THIS\n    \u00a0\u00a0\u00a0\u00a0cy.get('#searchInput').type('irin');\n    \u00a0\u00a0\u00a0\u00a0cy.wait('@searchUsers');\n    \u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0});\n    \u00a0\u00a0\u00a0...\n    });\n    ```", "```ts\n    ...\n    import API_USERS from '../constants/API_USERS'; \u2190 // REMOVE THIS\n    context('Users', () => {\n    \u00a0\u00a0let API_USERS;\n    \u00a0\u00a0beforeEach(() => {\n    \u00a0\u00a0\u00a0\u00a0cy.fixture('users.json')\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.then((response) => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0API_USERS = response.results;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cy.intercept('GET', 'https://api.randomuser.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0me/*', response).as(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'searchUsers'\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0})\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.visit('/users');\n    \u00a0\u00a0\u00a0\u00a0});\n    \u00a0\u00a0});\n    \u00a0\u00a0...\n    });\n    ```", "```ts\n    ...\n    context('Users', () => {\n    \u00a0\u00a0let API_USERS;\n    \u00a0\u00a0beforeEach(() => {\n    \u00a0\u00a0\u00a0\u00a0cy.fixture('users.json')\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.then((response) => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0API_USERS = response.results;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0API_USERS.forEach((user) => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const url = user.picture.large;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const imageName = url.substr(url.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0lastIndexOf('/') + 1);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cy.intercept(url, { fixture: \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0`images/${imageName}` });\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0});\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.visit('/users');\n    \u00a0\u00a0});\n    \u00a0\u00a0...\n    });\n    ```", "```ts\ncy.fixture(filePath)\ncy.fixture(filePath, encoding)\ncy.fixture(filePath, options)\ncy.fixture(filePath, encoding, options)\n```"]