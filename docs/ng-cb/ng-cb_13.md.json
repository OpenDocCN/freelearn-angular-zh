["```ts\n    ng add @angular/pwa\n    ```", "```ts\n...\nimport { ServiceWorkerModule } from '@angular/service-worker';\n...\n@NgModule({\n\u00a0\u00a0declarations: [AppComponent, CounterComponent],\n\u00a0\u00a0imports: [\n\u00a0\u00a0\u00a0\u00a0...\n\u00a0\u00a0\u00a0\u00a0ServiceWorkerModule.register('ngsw-worker.js', {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0enabled: environment.production,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Register the ServiceWorker as soon as the app is \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0stable\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// or after 30 seconds (whichever comes first).\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0registrationStrategy: 'registerWhenStable:30000',\n\u00a0\u00a0\u00a0\u00a0}),\n\u00a0\u00a0],\n\u00a0\u00a0...\n})\nexport class AppModule {}\n```", "```ts\n    {\n    \u00a0\u00a0\"name\": \"pwa-custom-theme-color\",\n    \u00a0\u00a0\"short_name\": \"pwa-custom-theme-color\",\n    \u00a0\u00a0\"theme_color\": \"#8711fc\",\n    \u00a0\u00a0\"background_color\": \"#fafafa\",\n    \u00a0\u00a0\"display\": \"standalone\",\n    \u00a0\u00a0\"scope\": \"./\",\n    \u00a0\u00a0\"start_url\": \"./\",\n    \u00a0\u00a0\"icons\": [...]\n    }\n    ```", "```ts\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    \u00a0\u00a0<head>\n    \u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0<link rel=\"manifest\" href=\"manifest.webmanifest\" />\n    \u00a0\u00a0<meta name=\"theme-color\" content=\"#8711fc\" />\n    \u00a0\u00a0</head>\n    \u00a0\u00a0<body>\n    \u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0</body>\n    </html>\n    ```", "```ts\n    http-server dist/pwa-custom-theme-color -p 5300\n    ```", "```ts\n    /* You can add global styles to this file, and also import other style files */\n    :root {...}\n    html,\n    body {...}\n    @media (prefers-color-scheme: dark) {\n    \u00a0\u00a0:root {\n    \u00a0\u00a0\u00a0\u00a0--main-bg: #333;\n    \u00a0\u00a0\u00a0\u00a0--text-color: #fff;\n    \u00a0\u00a0\u00a0\u00a0--card-bg: #000;\n    \u00a0\u00a0\u00a0\u00a0--primary-btn-color: #fff;\n    \u00a0\u00a0\u00a0\u00a0--primary-btn-text-color: #333;\n    \u00a0\u00a0}\n    }\n    ```", "```ts\n    http-server dist/pwa-dark-mode -p 6100\n    ```", "```ts\n    ng g service core/services/installable-prompt\n    ```", "```ts\n    import { Injectable } from '@angular/core';\n    @Injectable({\n    \u00a0\u00a0providedIn: 'root',\n    })\n    export class InstallablePromptService {\n    \u00a0\u00a0installablePrompt;\n    \u00a0\u00a0constructor() {\n    \u00a0\u00a0\u00a0\u00a0this.init();\n    \u00a0\u00a0}\n    \u00a0\u00a0init() {\n    \u00a0\u00a0\u00a0\u00a0window.addEventListener(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'beforeinstallprompt',\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.handleInstallPrompt.bind(this)\n    \u00a0\u00a0\u00a0\u00a0);\n    \u00a0\u00a0}\n    \u00a0\u00a0handleInstallPrompt(e) {\n    \u00a0\u00a0\u00a0\u00a0e.preventDefault();\n    \u00a0\u00a0\u00a0\u00a0// Stash the event so it can be triggered later.\n    \u00a0\u00a0\u00a0\u00a0this.installablePrompt = e;\n    \u00a0\u00a0\u00a0\u00a0console.log('installable prompt event fired');\n    \u00a0\u00a0\u00a0\u00a0window.removeEventListener('beforeinstallprompt', \u00a0\u00a0\u00a0\u00a0this.handleInstallPrompt);\n    \u00a0\u00a0}\n    }\n    ```", "```ts\n    ...\n    import { MatDialogModule } from '@angular/material/dialog';\n    import { MatButtonModule } from '@angular/material/button';\n    @NgModule({\n    \u00a0\u00a0declarations: [... ],\n    \u00a0\u00a0imports: [\n    \u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0BrowserAnimationsModule,\n    \u00a0\u00a0\u00a0\u00a0MatDialogModule,\n    \u00a0\u00a0\u00a0\u00a0MatButtonModule,\n    \u00a0\u00a0],\n    \u00a0\u00a0providers: [],\n    \u00a0\u00a0bootstrap: [AppComponent],\n    })\n    export class AppModule {}\n    ```", "```ts\n    ng g component core/components/installable-prompt\n    ```", "```ts\n    ...\n    import { MatDialog } from '@angular/material/dialog';\n    import { InstallablePromptComponent } from '../components/installable-prompt/installable-prompt.component';\n    @Injectable({...})\n    export class InstallablePromptService {\n    \u00a0\u00a0installablePrompt;\n    \u00a0\u00a0constructor(private dialog: MatDialog) {...}\n    ...\n    \u00a0\u00a0async showPrompt() {\n    \u00a0\u00a0\u00a0\u00a0if (!this.installablePrompt) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return;\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0const dialogRef = this.dialog.\u00a0\u00a0\u00a0\u00a0open(InstallablePromptComponent, {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0width: '300px',\n    \u00a0\u00a0\u00a0\u00a0});\n    \u00a0\u00a0}\n    }\n    ```", "```ts\n    ...\n    export class InstallablePromptService {\n    \u00a0\u00a0...\n    \u00a0\u00a0async showPrompt() {\n\n    \u00a0\u00a0\u00a0\u00a0\u2026\n    \u00a0\u00a0\u00a0\u00a0const dialogRef = this.dialog.\u00a0\u00a0\u00a0\u00a0open(InstallablePromptComponent, {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0width: '300px',\n    \u00a0\u00a0\u00a0\u00a0});\n    \u00a0\u00a0\u00a0\u00a0dialogRef.afterClosed().subscribe(async (result) => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (!result) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.installablePrompt = null;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.installablePrompt.prompt();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const { outcome } = await this.installablePrompt.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0userChoice;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log(`User response to the install prompt: \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0${outcome}`);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.installablePrompt = null;\n    \u00a0\u00a0\u00a0\u00a0});\n    \u00a0\u00a0}\n    }\n    ```", "```ts\n    <h1 mat-dialog-title>Add to Home</h1>\n    <div mat-dialog-content>\n    \u00a0\u00a0<p>Enjoying the game? Would you like to install the app \u00a0\u00a0on your device?</p>\n    </div>\n    <div mat-dialog-actions>\n    \u00a0\u00a0<button mat-button [mat-dialog-close]=\"false\">No \u00a0\u00a0Thanks</button>\n    \u00a0\u00a0<button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Sure</button>\n    </div>\n    ```", "```ts\n    ...\n    import { InstallablePromptService } from '../core/services/installable-prompt.service';\n    ...\n    @Component({...})\n    export class GameComponent implements OnInit {\n    \u00a0\u00a0...\n    \u00a0\u00a0constructor(\n    \u00a0\u00a0\u00a0\u00a0private leaderboardService: LeaderboardService,\n    \u00a0\u00a0\u00a0\u00a0private instPrompt: InstallablePromptService\n    \u00a0\u00a0) {}\n    \u00a0\u00a0...\n    \u00a0\u00a0showResult(diceSide: IDiceSide) {\n    \u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0this.scores = this.leaderboardService.setScores({\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: this.nameForm.get('name').value,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0score: 50,\n    \u00a0\u00a0\u00a0\u00a0});\n    \u00a0\u00a0\u00a0\u00a0this.instPrompt.showPrompt();\n    \u00a0\u00a0}\n    }\n    ```", "```ts\n    ng build --configuration production\n    http-server dist/pwa-custom-install-prompt -p 7200\n    ```", "```ts\n    {\n    \u00a0\u00a0\"$schema\": \"./node_modules/@angular/service-worker/\u00a0\u00a0config/schema.json\",\n    \u00a0\u00a0\"index\": \"/index.html\",\n    \u00a0\u00a0\"assetGroups\": [...],\n    \u00a0\u00a0\"dataGroups\": [\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"name\": \"api_randomuser.me\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"urls\": [\"https://api.randomuser.me/?results*\"],\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"cacheConfig\": {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"strategy\": \"freshness\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"maxSize\": 100,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"maxAge\": \"2d\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0]\n    };\n    ```", "```ts\n    ng build --configuration production\n    http-server dist/precaching-requests -p 8300\n    ```", "```ts\n\"dataGroups\": [\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"name\": \"api_randomuser.me\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"urls\": [\"https://api.randomuser.me/?results*\"],\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"cacheConfig\": {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"strategy\": \"freshness\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"maxSize\": 100,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"maxAge\": \"2d\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0]\n```", "```ts\n    ng generate app-shell\n    ```", "```ts\n    ...\n    @NgModule({\n    \u00a0\u00a0declarations: [...],\n    \u00a0\u00a0imports: [... ],\n    \u00a0\u00a0providers: [],\n    \u00a0\u00a0exports: [\n    \u00a0\u00a0\u00a0\u00a0UsersComponent,\n    \u00a0\u00a0\u00a0\u00a0UserCardComponent,\n    \u00a0\u00a0\u00a0\u00a0UserDetailComponent,\n    \u00a0\u00a0\u00a0\u00a0AppFooterComponent,\n    \u00a0\u00a0\u00a0\u00a0LoaderComponent,\n    \u00a0\u00a0],\n    \u00a0\u00a0bootstrap: [AppComponent],\n    })\n    export class AppModule {}\n    ```", "```ts\n    <app-users></app-users>\n    ```", "```ts\n    ng run pwa-app-shell:app-shell\n    ```", "```ts\n    http-server dist/pwa-app-shell/browser -p 4200\n    ```", "```ts\n    ng run pwa-app-shell:app-shell:production\n    http-server dist/pwa-app-shell/browser -p 1020\n    ```"]