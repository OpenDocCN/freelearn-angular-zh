["```ts\n{\n \"person\": { \"age\": 11, \"name\": \"Charlie\", \"address\": \"First Street, Little Town\" },\n \"orders\": { \"someKeyHash\": { \"orderDate\": \"2010-01-01\", \"total\": 114 },\n \"someOtherKeyHash\": { \"orderDate\": \"2010-02-28\" }\n}\n```", "```ts\n{\n 212sdsd: 'item 1',\n 565hghh: 'item 2'\n // etc\n}\n```", "```ts\nnpm install angularfire2 firebase --save\n```", "```ts\nlet config =  { apiKey:  \"<your api key>\", authDomain:  \"<your auth domain>\", databaseURL:  \"<your database url>\", projectId:  \"<your project id>\", storageBucket:  \"<your storage bucket>\", messagingSenderId:  \"<your messaging senderid>\"  };\n```", "```ts\nexport  const  environment  = {\n firebase: { apiKey:  \"<your api key>\", authDomain:  \"<your auth domain>\", databaseURL:  \"<your database url>\", projectId:  \"<your project id>\", storageBucket:  \"<your storage bucket>\", messagingSenderId:  \"<your messaging sender id>\"  } }\n```", "```ts\nimport { AngularFireModule } from  'angularfire2'; import { AngularFireDatabaseModule } from  'angularfire2/database'; @NgModule({\n imports: [\n AngularFireModule.initializeApp(environment.firebase),\n AngularFireDatabaseModule\n ]\n})\n```", "```ts\n@Component({\n template : `to be defined`\n})\nexport class AppComponent {\n constructor(private angularFireDatabase: AngularFireDatabase) {\n this.angularFireDatabase\n .object('/book')\n .valueChanges()\n .subscribe(data => {\n console.log('our book', data);\n });\n }\n}\n```", "```ts\nfoo {\n bar: {\n child: 'value'\n }\n}\n```", "```ts\nrules: {\n \"foo\": {\n \"bar\": {\n \".read\": true,\n \".write\": false,\n \"child\": {} \n }\n }\n}\n```", "```ts\n// deny\nthis.angularFireDatabase.object('/foo');\n// read allowed, write not allowed\nthis.angularFireDatabase.object('/foo/bar'); \n// read allowed, write not allowed\nthis.angularFireDatabase.object('/foo/bar/child');\n```", "```ts\n{\n \"rules\": {\n \"order\": {\n \"name\": {},\n \"quantity\"\n }\n }\n}\n```", "```ts\n// will fail as 'quantity' is a must have field\nangularFireDatabase.object('/order').set({ name : 'some name' });\n```", "```ts\n{\n \"rules\": {\n \"order\": {\n \"quantity\": {\n \".validate\": \"newData.isNumber() && newData.val() >=0 \n && newData.val() <= 100\" \n }\n }\n }\n}\n```", "```ts\n// fails validation\nangularFireDatabase.object('order').set({ quantity : 101 })\n```", "```ts\nthis.angularFireDatabase.object(path).<operation>\nthis.angularFireDatabase.list(path).<operation>\n```", "```ts\n{\n id1: { value : 1 },\n id2: { value : 2 }\n}\n```", "```ts\n[{\n $key: id1,\n value : 1\n},\n{\n $key: id2,\n value : 2\n}]\n```", "```ts\n{\n id1: { value : 1 },\n id2: { value : 2 }\n}\n```", "```ts\nlet stream$ = this.angulatFireDatabase.object('/book').valueChanges();\n```", "```ts\n@Component({\n template: ` <div  *ngIf=\"$book | async; let book;\">\n {{ ( book | async )?.title }}\n </div>\n `\n})\nexport  class  Component { book$:  Observable<Book>; constructor(private  angularFireDatabase:  AngularFireDatabase) { this.book$  =  this.angularFireDatabase\n .object('/book')\n .valueChanges()\n .map(this.mapBook); }\n private  mapBook(obj):  Book { return  new  Book(obj); }\n}\n\nclass  Book { constructor(title:  string) { } }\n```", "```ts\nthis.book = this.angularFireDatabase\n .object('/book')\n .map(this.mapBook);\n```", "```ts\n<div *ngIf=\"book$ | async; let book\">\n {{ book.title }}\n</div>\n```", "```ts\n@Component({\n template: `\n <div>\n {{ book.title }}\n </div>\n `\n})\nexport class BookComponent \n{\n book:Book;\n\n constructor(private angularFireDatabase: AngularFireDatabase) {\n this.angularFireDatabase.object('/book')\n .map(mapBook).subscribe( data => this.book = data );\n }\n\n mapBook(obj): Book {\n return new Book(obj);\n }\n}\n\nclass Book {\n constructor(title:string) {} \n}\n```", "```ts\nthis.angularFireDatabase.object('/book').set({ title : 'Moby Dick' })\n```", "```ts\n{\n title: 'The grapes of wrath',\n description: 'bla bla'\n}\n```", "```ts\n{\n title: 'Moby Dick'\n}\n```", "```ts\nthis.angularFireDatabase.object('/book').update({ publishingYear : 1931 })\n```", "```ts\n{\n title: 'Grapes of wrath',\n description: 'Tom Joad and his family are forced from the farm'\n} \n```", "```ts\n{\n title : 'Grapes of wrath',\n description : 'Tom Joad and his family are forced from the farm...',\n publishingYear : 1931\n}\n```", "```ts\nthis.angularFireDatabase.list('/books').remove();\n```", "```ts\nbooks {\n 0 : 'tomato',\n 1: 'cucumber' \n}\n```", "```ts\nthis.angularFireDatabase.list('/books').remove(<key>)\n```", "```ts\nthis.angularFireDatabase\n .list('/books')\n .snapshotChanges()\n .subscribe( list => {\n console.log('list',list);\n })\n```", "```ts\nexport class Book {\n title: string;\n  key: string;\n constructor(json) {\n    this.title = json.payload.val();\n this.key = json.key; \n }\n}\n```", "```ts\n@Component({})\nexport class BookComponent {\n books$:Observable<Book[]>\n\n constructor(private angularFireDatabase:AngularFireDatabase){\n this.books$ = this.angularFireDatabase\n .list('/books')\n .snapshotChanges()\n .map(this.mapBooks);\n }\n\n private mapBooks(data): Book[] {\n return data.map(json => new Book(json));\n }\n\n remove(key) {\n this,books$.remove(key);\n }\n```", "```ts\n<div *ngFor=\"let book of books | async\">\n {{ book.title }}\n <button (click)=\"remove(book.key)\">Remove</button>\n</div>\n```", "```ts\nthis.angularFireDatabase\n .list('/tickets')\n .valueChanges()\n .subscribe(tickets => {\n // this is our new ticket list\n });\n```", "```ts\n{\n \"rules\": {\n \".read\": \"auth != null\",\n \".write\": \"auth != null\"\n }\n}\n```", "```ts\n\".read\": \"auth != null\"\n```", "```ts\nimport { AngularFireAuthModule, \n AngularFireAuth } from  'angularfire2/auth'; @NgModule({\n imports: [\n AngularFireAuthModule\n ],\n providers: [AngularFireAuth]\n})\n```", "```ts\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { AngularFireAuth } from 'anguarfire2/auth';\n\n@Component({\n template : `\n <div *ngFor=\"let b of books$ | async\">\n {{ b.title }} {{ b.author }}\n </div>\n <div *ngIf=\"book$ | async; let book\">\n {{ book.title }} {{ book.author }}\n </div>\n `\n})\nexport class BookComponent {\n user;\n book$: Observable<Book>;\n books$: Observable<Book[]>;\n\n constructor(\n private authService: AngularFireAuth,\n private angularFireDatabase: AngularFireDatabase\n ) {\n this.user  = this.authService.authState;\n this.authService.auth\n .signInWithEmailAndPassword('a@b.com','abc123'**)**\n .then(success  => { this.book  =  this.angularFireDatabase .object('/book')\n .valueChanges().map(this.mapBook); this.books  =  this.angularFireDatabase\n .list('/books')\n .valueChanges()\n .map(this.mapBooks); }, \n err  => console.log(err)\n );\n }\n}\n```", "```ts\n<div *ngIf=\"user | async; let user\">\n User : {{ user.uid }} {{ user.email }}\n</div>\n```", "```ts\nauthService\n.auth .signInWithEmailAndPassword('a@b.com','abc123')\n.then(success  => { this.book  = this.angularFireDatabase.object('/book')\n .map(this.mapBook); this.books$  = this.angularFireDatabase.list('/books')\n .map(this.mapBooks);\n }, \n err  =>  console.log(err)\n)\n```"]