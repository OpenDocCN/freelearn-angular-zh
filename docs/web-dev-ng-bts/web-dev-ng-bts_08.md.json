["```ts\n{\n  \"name\": \"listcaro\",\n  \"version\": \"0.0.0\",\n  \"license\": \"MIT\",\n  \"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve -o\",\n    \"build\": \"ng build --prod\",\n    \"test\": \"ng test\",\n    \"lint\": \"ng lint\",\n    \"e2e\": \"ng e2e\"\n  },\n  \"private\": true,\n  \"dependencies\": {\n    \"@angular/animations\": \"^6.0.4\",\n    \"@angular/cdk\": \"^6.2.1\",\n    \"@angular/common\": \"^6.0.4\",\n    \"@angular/compiler\": \"^6.0.4\",\n    \"@angular/core\": \"^6.0.4\",\n    \"@angular/flex-layout\": \"^6.0.0-beta.16\",\n    \"@angular/forms\": \"^6.0.4\",\n    \"@angular/http\": \"^6.0.4\",\n    \"@angular/platform-browser\": \"^6.0.4\",\n    \"@angular/platform-browser-dynamic\": \"^6.0.4\",\n    \"@angular/router\": \"^6.0.4\",\n    \"@angular/material\": \"^6.2.1\",\n    \"@ng-bootstrap/ng-bootstrap\": \"^2.1.0\",\n    \"bootstrap\": \"^4.0.0\",\n    \"core-js\": \"^2.4.1\",\n    \"jquery\": \"^3.3.1\",\n    \"npm\": \"^6.1.0\",\n    \"popper\": \"^1.0.1\",\n    \"popper.js\": \"^1.14.3\",\n    \"rxjs\": \"^6.0.0\",\n    \"save\": \"^2.3.2\",\n    \"zone.js\": \"^0.8.26\"\n  },\n  \"devDependencies\": {\n    \"typescript\": \"2.7.2\",\n    \"@angular/cli\": \"~1.7.4\",\n    \"@angular/compiler-cli\": \"^6.0.4\",\n    \"@angular/language-service\": \"^5.2.0\",\n    \"@types/jasmine\": \"~2.8.3\",\n    \"@types/jasminewd2\": \"~2.0.2\",\n    \"@types/node\": \"~6.0.60\",\n    \"codelyzer\": \"^4.0.1\",\n    \"jasmine-core\": \"~2.8.0\",\n    \"jasmine-spec-reporter\": \"~4.2.1\",\n    \"karma\": \"~2.0.0\",\n    \"karma-chrome-launcher\": \"~2.2.0\",\n    \"karma-coverage-istanbul-reporter\": \"^1.2.1\",\n    \"karma-jasmine\": \"~1.1.0\",\n    \"karma-jasmine-html-reporter\": \"^0.2.2\",\n    \"protractor\": \"~5.1.2\",\n    \"ts-node\": \"~4.1.0\",\n    \"tslint\": \"~5.9.1\"\n  }\n}\n```", "```ts\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'playground',\n    templateUrl: './playground.component.html',\n    styleUrls: ['./playground.component.css']\n})\nexport class PlaygroundComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit() { }\n\n    pageTitle: string = \"Playground\";\n\n}\n```", "```ts\n<h3> \n{{ pageTitle }} </h3> <hr>  \n```", "```ts\n/* Nothing here yet. This is a placeholder file that we may use later. */\n```", "```ts\n<li routerLinkActive=\"active\" class=\"nav-item\"> \n  <a routerLink=\"playground\" class=\"nav-link\">Playground</a> \n</li>\n```", "```ts\n<h3> \n  {{ pageTitle }} \n</h3> \n<hr> \n\n<ngb-collapse></ngb-collapse>\n\n<br />\n\nThis is our page's main content\n```", "```ts\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngb-collapse',\n  templateUrl: './ngb-collapse.component.html'\n})\nexport class NgbCollapseComponent {\n  public isCollapsed = true;\n}\n```", "```ts\n<p> \n    <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"isCollapsed = !isCollapsed\"> \n        {{ isCollapsed ? 'Show' : 'Hide' }} Instructions \n    </button> \n</p> \n<div id=\"collapseExample\" [ngbCollapse]=\"isCollapsed\"> \n    <div class=\"card\">\n        <div class=\"card-body\">\n            These are the hypothetical instructions for something.\n        </div>\n    </div>\n</div>\n```", "```ts\n(click)=\"isCollapsed = !isCollapsed\"  \n```", "```ts\n{{ isCollapsed ? 'Show' : 'Hide' }} Instructions\n```", "```ts\nimport { NgbCollapseComponent } from './ngb-collapse/ngb-collapse.component';\n```", "```ts\nimport {Component} from '@angular/core';\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'ngb-test-modal',\n  templateUrl: './ngb-modal.component.html'\n})\nexport class NgbModalComponent {\n  closeResult: string;\n\n  constructor(private modalService: NgbModal) {}\n\n  open(content) {\n    this.modalService.open(content).result.then((result) => {\n    this.closeResult = `Closed with: ${result}`;\n  }, (reason) => {\n    this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n  });\n}\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  } \n} \n```", "```ts\n<ng-template #content let-c=\"close\" let-d=\"dismiss\">\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\">Log In</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\n    <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <form>\n      <div class=\"form-group\">\n        <input id=\"username\" class=\"form-control\" placeholder=\"username\" >\n        <br>\n        <input id=\"password\" type=\"password\" class=\"form-control\" placeholder=\"password\" >\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c('Save click')\">submit</button>\n  </div>\n</ng-template>\n\n<button class=\"btn btn-lg btn-outline-primary\" (click)=\"open(content)\">Launch test modal</button>\n```", "```ts\nimport { NgbModalComponent } from './ngb-modal/ngb-modal.component';\n```", "```ts\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'ngb-test-carousel', \n  templateUrl: './ngb-carousel.component.html',\n  styles: [`\n    .carousel {\n      width: 500px;\n    }\n `]\n})\nexport class NgbCarouselComponent implements OnInit {\n  images: Array<string>;\n\n  constructor(private _http: HttpClient) {}\n\n  ngOnInit() {\n    this._http.get('https://picsum.photos/list')\n    .pipe(map((images: Array<{id: number}>) => this._randomImageUrls(images)))\n    .subscribe(images => this.images = images);\n  }\n\n  private _randomImageUrls(images: Array<{id: number}>): Array<string> {\n    return [1, 2, 3].map(() => {\n      const randomId = images[Math.floor(Math.random() * images.length)].id;\n      return `https://picsum.photos/900/500?image=${randomId}`;\n    });\n  }\n}\n```", "```ts\n<ngb-carousel *ngIf=\"images\" class=\"carousel\">\n  <ng-template ngbSlide>\n    <img [src]=\"images[0]\" alt=\"Random first slide\">\n    <div class=\"carousel-caption\">\n      <h3>First slide label</h3>\n      <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n    </div>\n  </ng-template>\n  <ng-template ngbSlide>\n    <img [src]=\"images[1]\" alt=\"Random second slide\">\n    <div class=\"carousel-caption\">\n      <h3>Second slide label</h3>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  </ng-template>\n  <ng-template ngbSlide>\n    <img [src]=\"images[2]\" alt=\"Random third slide\">\n    <div class=\"carousel-caption\">\n      <h3>Third slide label</h3>\n      <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n    </div>\n  </ng-template>\n</ngb-carousel>\n```", "```ts\n<p>\n {{pageTitle}} </p> <app-ngb-collapse></app-ngb-collapse> <app-ngb-modal></app-ngb-modal> <app-ngb-carousel></app-ngb-carousel>\n```"]