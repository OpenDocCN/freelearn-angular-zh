["```ts\n<div [hidden]=\"usertype != 'admin'\">\n  This element, and its contents, will be hidden for all users that are not Admins. \n</div>\n```", "```ts\n<ul>\n <li *ngFor='let car of [{\"make\":\"Porsche\", \"model\":\"Carrera\"}, {\"make\":\"Ferrari\", \"model\":\"488 Spider\"}]'>\n   {{ car.make }}: {{ car.model }}\n </li>\n</ul>\n```", "```ts\nPorsche: Carrera\nFerrari: 488 Spider\n```", "```ts\n<ul> \n  <li *ngFor=\"let car of cars; let i = index\">\n    Car #{{ i + 1 }}: {{ car.model }}\n  </li>\n</ul>\n```", "```ts\n<ul *ngFor=\"let car of cars\">\n  <li *ngIf=\"car.horsepower > 350\">\n    The {{ car.make }} {{ car.model }} is over 350 HP. \n  </li>\n</ul>\n```", "```ts\n@Component({\n  selector: 'car-hp',\n  template: `\n    <h3>Cars styled by their HP range</h3>\n    <ul *ngFor=\"let car of cars\" [ngSwitch]=\"car.horsepower\"> \n      <li *ngSwitchCase=\"car.horsepower >= 375\" class=\"super-car\">\n        {{ car.make }} {{ car.model }} \n      </li>\n      <li *ngSwitchCase=\"car.horsepower >= 200 && car.horsepower \n          < 375\" class=\"sports-car\">\n        {{ car.make }} {{ car.model }}\n      </li>\n      <li *ngSwitchDefault class=\"grandma-car\">\n        {{ car.make }} {{ car.model }}\n      </li>\n    </ul>\n  `,\n  styles: [`\n    .super-car {\n      color:#fff;\n      background-color:#ff0000;\n    },\n    .sports-car {\n      color:#000;\n      background-color:#ffa500; \n    },\n    .grandma-car {\n      color:#000;\n      background-color:#ffff00; \n    } \n  `],\n  encapsulation: ViewEncapsulation.Native \n})\nclass CarHorsepowerComponent {\n  cars: any[] = [\n    {\n      \"make\": \"Ferrari\",\n      \"model\": \"Testerosa\",\n      \"horsepower\": 390\n    },\n    {\n      \"make\": \"Buick\",\n      \"model\": \"Regal\",\n      \"horsepower\": 182 \n    }, \n    {\n      \"make\": \"Porsche\",\n      \"model\": \"Boxter\",\n      \"horsepower\": 320\n    }, \n    {\n      \"make\": \"Lamborghini\",\n      \"model\": \"Diablo\",\n      \"horsepower\": 485\n    }\n  ];\n}\n```", "```ts\n@Component({\n  selector: 'car-hp',\n  template: `\n    <h3>Cars styled by their HP range</h3>\n    <ul *ngFor=\"let car of cars\"> \n      <li [ngStyle]=\"{ getCarTextStyle(car.horsepower) }\" >\n        {{ car.make }} {{ car.model }}\n      </li> \n    </ul>\n  `,\n  encapsulation: ViewEncapsulation.Native \n})\nclass CarHorsepowerComponent {\n  getCarTextStyle(horsepower) {\n    switch (horsepower) {\n      case (horsepower >= 375):\n        return 'color:#fff; background-color:#ff0000;';\n      case (horsepower >= 200 && horsepower < 375):\n        return 'color:#000; background-color:#ffa500;';\n      default:\n        return 'color:#000; background-color:#ffff00;';\n    }\n  }\n  cars: any[] = [\n    {\n      \"make\": \"Ferrari\",\n      \"model\": \"Testerosa\",\n      \"horsepower\": 390\n    },\n    {\n      \"make\": \"Buick\",\n      \"model\": \"Regal\",\n      \"horsepower\": 182 \n    }, \n    {\n      \"make\": \"Porsche\",\n      \"model\": \"Boxter\",\n      \"horsepower\": 320\n    }, \n    {\n      \"make\": \"Lamborghini\",\n      \"model\": \"Diablo\",\n      \"horsepower\": 485\n    }\n  ];\n}\n```", "```ts\n@Component({\n  selector: 'car-hp',\n  template: `\n    <h3>Cars styled by their HP range</h3>\n    <ul *ngFor=\"let car of cars\"> \n      <li [ngClass]=\" getCarTextStyle(car.horsepower) \" >\n        {{ car.make }} {{ car.model }}\n      </li> \n    </ul>\n  `,\n  styles: [`\n    .super-car {\n      color:#fff;\n      background-color:#ff0000;\n    },\n    .sports-car {\n      color:#000;\n      background-color:#ffa500; \n    },\n    .grandmas-car {\n      color:#000;\n      background-color:#ffff00; \n    } \n `], \n encapsulation: ViewEncapsulation.Native \n})\nclass CarHorsepowerComponent {\n  getCarTextStyle() {\n    switch (horsepower) {\n      case (horsepower >= 375):\n        return 'super-car';\n      case (horsepower >= 200 && horsepower < 375):\n        return 'sports-car';\n      default:\n        return 'grandmas-car';\n    }\n  }\n  cars: any[] = [\n    {\n      \"make\": \"Ferrari\",\n      \"model\": \"Testerosa\",\n      \"horsepower\": 390\n    },\n    {\n      \"make\": \"Buick\",\n      \"model\": \"Regal\",\n      \"horsepower\": 182 \n    }, \n    {\n      \"make\": \"Porsche\",\n      \"model\": \"Boxter\",\n      \"horsepower\": 320\n    }, \n    {\n       \"make\": \"Lamborghini\",\n       \"model\": \"Diablo\",\n       \"horsepower\": 485\n    }\n  ];\n}  \n```", "```ts\n<p>\nTo have Angular perform one-way binding, and render the value of my_value onto the view, we use the    double curly braces symbol like this: <span ngNonBindable>{{ my_value }}</span>\n</p>\n```", "```ts\nimport { FormsModule } from '@angular/forms';\n```", "```ts\n<div [(ngModel)]=\"my_content\"></div>\n```", "```ts\n<span (click)=\"alert('This is an example of event binding in Angular');\"></span>\n```", "```ts\n<p class=\"card-text\" [hidden]=\"true\">This text will not show.</p>\n```", "```ts\nproducts: any[] = [ {  \"code\": \"p100\",\n  \"name\": \"Moto\",\n  \"price\": 390.56\n }, {  \"code\": \"p200\",\n  \"name\": \"Micro\",\n  \"price\": 240.89\n }, {  \"code\": \"p300\",\n  \"name\": \"Mini\",\n  \"price\": 300.43\n } ];\n```", "```ts\n<h4>Learning Angular Pipes</h4> <table>\n  <tr>\n  <td>Product Code</td>\n  <td>Product Name</td>\n  <td>Product Price</td>\n  </tr>\n  <tr  *ngFor=\"let product of products\">\n  <td>{{product.code}}</td>\n  <td>{{product.name}}</td>\n  <td>{{product.price}}</td>\n  </tr>  </table>\n```", "```ts\n{{ data | <pipe name> }}\n```", "```ts\n<td>{{product.name | uppercase }}</td>\n```", "```ts\n<td>{{product.name | lowercase }}</td>\n```", "```ts\n<td>{{product.price | currency }}</td>\n```", "```ts\n{{ data | pipe : <parameter1 : parameter2> }}\n```", "```ts\n<td>{{ product.price | currency: 'INR' }}</td>\n```"]