["```ts\nint age = 10;\n```", "```ts\nexport class Listing {\n id: number;\n userId: number;\n title: string;\n status: string;\n price: number;\n active: boolean;\n}\n```", "```ts\n npm i json-server --save\n```", "```ts\n      {\n        \"listings\": [\n          { \"id\": 1, \"title\": \"Sunset in New York\", \"price\":\"190\", \n             \"status\": \"Active\" },\n          { \"id\": 2, \"title\": \"Dawn at Miami\", \"price\":\"150\", \n              \"status\": \"Active\" },\n          { \"id\": 3, \"title\": \"Evening in California\",\"price\":\"70\", \n             \"status\": \"Inactive\" }\n        ],\n        \"users\": [\n          { \"id\": 1, \"username\": \"andrew\", \n            \"userEmail\": \"andrew@localhost.com\" },\n          { \"id\": 2, \"username\": \"stacy\", \n            \"userEmail\": \"stacy@localhost.com\" },\n          { \"id\": 3, \"username\": \"linda\", \n            \"userEmail\": \"linda@localhost.com\" },\n          { \"id\": 4, \"username\": \"shane\", \n            \"userEmail\": \"shane@localhost.com\" }\n        ],\n        \"cities\": [ \n            { \"id\":1, \"name\": \"New York\" },\n            { \"id\":1, \"name\": \"California\" },\n            { \"id\":1, \"name\": \"Miami\" }\n        ]\n       }\n```", "```ts\n json-server --watch data.json\n```", "```ts\n// Import the module into the component or service\nimport { HttpClient } from '@angular/core/http';\n\n// Inside the constructor method inject the HttpClient and create an instance\nconstructor(private http: HttpClient)\n```", "```ts\ngetAllListings():Observable<any>\n{\n   return this.http.get<Observable>('api/get-listing');\n}\n```", "```ts\naddNewListing(listing) {\n     let httpHeaders  = new HttpHeaders();\n     httpHeaders.set('Content-Type', 'application/json');\n     let options =  { headers: httpHeaders};\n\n    return this.http.post('api/add-listing', listing, options);\n\n}\n```", "```ts\nthis.http.put(url, options);\n```", "```ts\nthis.http.delete(url, options);\n```", "```ts\n//check if the listing status is active\nListingDetails(listing){\nlet promise = new Promise(function(resolve, reject) {\nif(listing.status == 'active') { \n  resolved(\"listing is active\");\n}\nelse {\n  reject(\"listing is not active\");\n}\n\npromise.then((s => { \n//next steps after the promise has returned resolved\n}).catch((err => {\n// what to do when it's error or rejected\n})\n\n}\n```", "```ts\nng generate service db-operations\n```", "```ts\nng generate service crud\n```", "```ts\nng g component createListing\nng g component viewListing\nng g component deleteListing\nng g component updateListing\n```", "```ts\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DbOperationsService {\n\nconstructor(private http: HttpClient) { }\n\ngetListings(){\n    return this.http.get('http://localhost:3000/listings');\n}\nviewListing(id){\n    return this.http.get('http://localhost:3000/listings/'+id);\n}\naddListing(newList){\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http.post('http://localhost:3000/listings', newList);\n}\neditListing(id, newList){\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http.put('http://localhost:3000/listings/'+id, newList);\n}\n    deleteListing(id){\n    return this.http.delete('http://localhost:3000/listings/'+id);\n}\n\n}\n```", "```ts\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {UpdateListingComponent} from './update-listing/update-listing.component';\nimport {CreateListingComponent} from './create-listing/create-listing.component';\nimport {ViewListingComponent} from './view-listing/view-listing.component';\nimport {DeleteListingComponent} from './delete-listing/delete-listing.component';\n\nconst routes: Routes = [\n  {path:'create-listing', component:CreateListingComponent   },\n  { path:'view-listing', component:ViewListingComponent },\n  { path:'delete-listing/:id', component:DeleteListingComponent},\n  {path:'update-listing/:id', component:UpdateListingComponent}\n];\n\n@NgModule({\n imports: [RouterModule.forRoot(routes)],\n exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n```", "```ts\nimport { Component, OnInit } from '@angular/core';\nimport {DbOperationsService} from '../db-operations.service';\nimport { Listing} from '../models/listing';\nimport {Observable} from 'rxjs';\n\n@Component({\n selector: 'app-view-listing',\n templateUrl: './view-listing.component.html',\n styleUrls: ['./view-listing.component.scss']\n})\n\nexport class ViewListingComponent implements OnInit {\n\n listArr: Observable<any[]>;\n viewList:Observable<Listing>;\n isViewPage: boolean = false;\n\n constructor(private dbOps: DbOperationsService ) { }\n\n ngOnInit() {\n this.dbOps.getListings().subscribe((data) =>  {this.listArr = data});\n }\n\n showListing(listing){\n this.isViewPage = true;\n this.dbOps.viewListing(listing.id).subscribe((data) => {this.viewList = data});\n }\n}\n```", "```ts\n<h4>Show All Listings</h4>\n\n<table class=\"table table-bordered\"> \n <tbody>\n <tr>\n <th>Title</th>\n <th>Description</th>\n <th>Price</th>\n <th>Status</th>\n <th>Actions</th>\n </tr>\n <tr *ngFor=\"let listing of listArr;let i = index\">\n <td>{{listing.title}}</td>\n <td>{{listing.description}}</td>\n <td>{{listing.price}}</td>\n <td>{{listing.status}}</td>\n <td><a [routerLink]=\"'/update-listing/'+listing.id\">Edit</a> | \n    <a [routerLink]=\"'/delete-listing/'+listing.id\">Delete</a></td>\n </tr>\n </tbody>\n</table>\n```", "```ts\nimport { Component, OnInit } from '@angular/core';\nimport {DbOperationsService} from '../db-operations.service';\n\n@Component({\n selector: 'app-create-listing',\n templateUrl: './create-listing.component.html',\n styleUrls: ['./create-listing.component.scss']\n})\n\nexport class CreateListingComponent implements OnInit { \n userId = 1;\n newListing;\n successMsg;\n\n constructor(private dbOps: DbOperationsService) { }\n\n ngOnInit() {\n }\n addNewList(listForm)\n {\n  this.newListing = {\n \"userId\":this.userId,\n \"id\": 152,\n \"title\":listForm.title,\n \"price\":listForm.price,\n \"status\":listForm.status,\n };\n\n this.dbOps.addListing(this.newListing).subscribe((data) => {\n this.successMsg = data;\n });\n}\n}\n```", "```ts\n<h4>Add New Listing</h4>\n<p>\n<div class=\"container\">\n\n<div *ngIf=\"successMsg\">List Added Successful</div>\n\n<form #listingForm=\"ngForm\" (ngSubmit)=\"addNewList(listingForm)\">\n <div class=\"form-group\">\n <label for=\"title\">Enter Listing Title</label>\n <input type=\"text\" [ngModel]=\"title\" name=\"title\" class=\"form-control\" \n    placeholder=\"Enter title\">\n </div>\n <div class=\"form-group\">\n <label for=\"price\">Enter Description</label>\n <input type=\"text\" [ngModel]=\"description\" name=\"description\" \n   class=\"form-control\" placeholder=\"Enter Description\">\n </div>\n <div class=\"form-group\">\n <label for=\"price\">Enter Price</label>\n <input type=\"number\" [ngModel]=\"price\" name=\"price\" class=\"form-control\" \n    placeholder=\"Enter price here\">\n </div>\n <div class=\"form-group form-check\">\n <input type=\"checkbox\" [ngModel]=\"status\" name=\"status\" \n    class=\"form-check-input\">\n <label class=\"form-check-label\" for=\"status\">Active?</label>\n </div>\n <button type=\"submit\" class=\"btn btn-primary\">Add New Listing</button>\n</form>\n</div>\n```", "```ts\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from \"@angular/router\";\nimport {DbOperationsService} from '../db-operations.service';\nimport { Listing} from '../models/listing';\nimport {Observable} from 'rxjs';\n\n@Component({\n    selector: 'app-update-listing',\n    templateUrl: './update-listing.component.html',\n    styleUrls: ['./update-listing.component.scss']\n})\nexport class UpdateListingComponent implements OnInit {\n\n listId;\n successMsg = false;\n viewList: Observable<Listing>;\n\n constructor(private route:ActivatedRoute, private \n   dbOps:DbOperationsService) { }\n\nngOnInit() {\n    this.listId = this.route.snapshot.paramMap.get(\"id\");\n    this.dbOps.viewListing(this.listId).subscribe((data) \n     => {this.viewList = data});\n }\neditListing(updatedList){\n    this.dbOps.editListing(updatedList.id, updatedList).subscribe((data) => {\n        this.successMsg = data;\n    });\n  }\n}\n```", "```ts\n<div class=\"container\">\n<div *ngIf=\"successMsg\">List Updated Successful</div>\n<form #editlistingForm=\"ngForm\" (ngSubmit)=\"editListing(editlistingForm)\">\n <div class=\"form-group\">\n <input type=\"hidden\" class=\"form-control\" name=\"id\" \n    [(ngModel)]=\"viewList.id\" ngModel #id>\n </div>\n <div class=\"form-group\">\n <input type=\"hidden\" class=\"form-control\" name=\"userId\" \n    [(ngModel)]=\"viewList.userId\" ngModel #userId>\n </div>\n <div class=\"form-group\">\n <label for=\"title\">Enter Listing Title</label>\n <input type=\"text\" class=\"form-control\" name=\"title\" \n    [(ngModel)]=\"viewList.title\" ngModel #title required>\n </div>\n <div class=\"form-group\">\n <label for=\"price\">Enter Description</label>\n <input type=\"text\" name=\"description\" [(ngModel)]=\"viewList.description\" \n    ngModel #description class=\"form-control\" required>\n </div>\n <div class=\"form-group\">\n <label for=\"price\">Enter Price</label>\n <input type=\"number\" [(ngModel)]=\"viewList.price\" name=\"price\" \n    class=\"form-control\" ngModel #price required>\n </div>\n <div class=\"form-group form-check\">\n <input type=\"checkbox\" [(ngModel)]=\"viewList.status\" \n   checked=\"{{viewList.status}}\" name=\"status\" ngModel \n   #status class=\"form-check-input\" required>\n <label class=\"form-check-label\" for=\"status\">Active?</label>\n </div>\n <button type=\"submit\" [disabled]=\"!editListingForm.valid\" \n   class=\"btn btn-primary\">Update Listing</button>\n</form>\n</div>\n```", "```ts\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from \"@angular/router\";\nimport {DbOperationsService} from '../db-operations.service';\nimport { Listing} from '../models/listing';\nimport {Observable} from 'rxjs';\n\n@Component({\n selector: 'app-delete-listing',\n templateUrl: './delete-listing.component.html',\n styleUrls: ['./delete-listing.component.scss']\n})\nexport class DeleteListingComponent implements OnInit {\nviewList:Observable<Listing>;\nlistId;\nsuccessMsg:Observable<Listing>;\n\nconstructor(private route:ActivatedRoute, private dbOps:DbOperationsService) { }\n\nngOnInit() {\n this.listId = this.route.snapshot.paramMap.get(\"id\");\n this.dbOps.deleteListing(this.listId).subscribe((data) => {\n this.successMsg = data;\n });\n }\n\n}\n```", "```ts\nnpm i @angular/fire \n```", "```ts\nng generate service crudService\n```", "```ts\nng generate component addComments\n\nng generate component viewComments ng generate component editComments ng generate component deleteComments\n```", "```ts\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule} from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CreateListingComponent } from './create-listing/create-listing.component';\nimport { ViewListingComponent } from './view-listing/view-listing.component';\nimport { DeleteListingComponent } from './delete-listing/delete-listing.component';\nimport { UpdateListingComponent } from './update-listing/update-listing.component';\n\nimport {FormsModule} from '@angular/forms';\n\nimport { AngularFireModule} from 'angularfire2';\nimport {AngularFireDatabaseModule} from 'angularfire2/database';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { environment } from './firebase-config';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AddCommentsComponent } from './add-comments/add-comments.component';\nimport { EditCommentsComponent } from './edit-comments/edit-comments.component';\nimport { ViewCommentsComponent } from './view-comments/view-comments.component';\nimport { DeleteCommentsComponent } from './delete-comments/delete-comments.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateListingComponent,\n    ViewListingComponent,\n    DeleteListingComponent,\n    UpdateListingComponent,\n    AddCommentsComponent,\n    EditCommentsComponent,\n    ViewCommentsComponent,\n    DeleteCommentsComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireDatabaseModule,\n    FormsModule\n  ],\n  providers: [AngularFirestore],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n```", "```ts\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {UpdateListingComponent} from './update-listing/update-listing.component';\nimport {CreateListingComponent} from './create-listing/create-listing.component';\nimport {ViewListingComponent} from './view-listing/view-listing.component';\nimport {DeleteListingComponent} from './delete-listing/delete-listing.component';\n\nimport { AddCommentsComponent } from './add-comments/add-comments.component';\nimport { EditCommentsComponent } from './edit-comments/edit-comments.component';\nimport { ViewCommentsComponent } from './view-comments/view-comments.component';\nimport { DeleteCommentsComponent } from './delete-comments/delete-comments.component';\n\nconst routes: Routes = [\n  { path:'create-listing', component:CreateListingComponent },\n  { path:'view-listing', component:ViewListingComponent },\n  { path:'delete-listing/:id', component:DeleteListingComponent},\n  { path:'update-listing/:id', component:UpdateListingComponent},\n  { path:'add-comment', component:AddCommentsComponent },\n  { path:'view-comment', component:ViewCommentsComponent },\n  { path:'delete-comment/:id', component:DeleteCommentsComponent},\n  { path:'update-comment/:id', component:EditCommentsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n```", "```ts\nimport { AngularFirestore } from '@angular/fire/firestore';\n```", "```ts\nconstructor(private afStore : AngularFirestore, private route: Router ) { }\n```", "```ts\nimport { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { environment } from './firebase-config';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CrudServiceService {\n\n  constructor(private afStore : AngularFirestore) { }\n\n  getComments() {\n    return this.afStore.collection('comments');\n  }\n\n  deleteComment(id) {\n    this.afStore.collection('comments').doc(id).delete();\n  }\n\n  addComment(newComment) {\n    this.afStore.collection('comments').add(newComment);\n  }\n\n  updateComment(id, editedComment) {    \n    this.afStore.collection('comments').doc(id).set(editedComment);\n  }\n}\n```"]