["```ts\nPS> mkdir c:\\dev\nPS> cd c:\\dev\n```", "```ts\n$ mkdir ~/dev\n$ cd ~/dev\n```", "```ts\n...  \n  create local-weather-app/src/tsconfig.app.json (211 bytes)\n  create local-weather-app/src/tsconfig.spec.json (283 bytes)\n  create local-weather-app/src/typings.d.ts (104 bytes)\n  create local-weather-app/src/app/app.module.ts (316 bytes)\n  create local-weather-app/src/app/app.component.html (1141 bytes)\n  create local-weather-app/src/app/app.component.spec.ts (986 bytes)\n  create local-weather-app/src/app/app.component.ts (207 bytes)\n  create local-weather-app/src/app/app.component.css (0 bytes)\nadded 1273 packages from 1238 contributors in 60.594s\nProject 'local-weather-app' successfully created.\n```", "```ts\nlocal-weather-app\n\u251c\u2500\u2500 angular.json\n\u251c\u2500\u2500 .editorconfig\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 .gitkeep\n\u251c\u2500\u2500 e2e\n\u251c\u2500\u2500 karma.conf.js\n\u251c\u2500\u2500 node_modules\n\u251c\u2500\u2500 package-lock.json\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 protractor.conf.js\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 src\n\u251c\u2500\u2500 tsconfig.json\n\u2514\u2500\u2500 tslint.json\n```", "```ts\npackage.json\n{\n  \"name\": \"local-weather-app\",\n  \"version\": \"0.0.0\",\n  \"license\": \"MIT\",\n  **...**\n```", "```ts\npackage.json\n  ...\n \"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve\",\n    \"build\": \"ng build\",\n    \"test\": \"ng test\",\n    \"lint\": \"ng lint\",\n    \"e2e\": \"ng e2e\"\n  },\n  ...\n```", "```ts\npackage.json\n  ... \"start\": \"ng serve --port 5000\",\n  ...\n```", "```ts\npackage.json\n  ... \"dependencies\": {\n    \"@angular/animations\": \"^6.0.0\",\n    \"@angular/common\": \"^6.0.0\",\n    \"@angular/compiler\": \"^6.0.0\",\n    \"@angular/core\": \"^6.0.0\",\n    \"@angular/forms\": \"^6.0.0\",\n    \"@angular/http\": \"^6.0.0\",\n    \"@angular/platform-browser\": \"^6.0.0\",\n    \"@angular/platform-browser-dynamic\": \"^6.0.0\",\n    \"@angular/router\": \"^6.0.0\",\n    \"core-js\": \"^2.5.4\",\n    \"rxjs\": \"^6.0.0\",\n    \"zone.js\": \"^0.8.26\"\n  },\n  ...\n```", "```ts\npackage.json\n  ... \"devDependencies\": {\n    \"@angular/compiler-cli\": \"^6.0.0\",\n    \"@angular-devkit/build-angular\": \"~0.6.1\",\n    \"typescript\": \"~2.7.2\",\n    \"@angular/cli\": \"~6.0.1\",\n    \"@angular/language-service\": \"^6.0.0\",\n    \"@types/jasmine\": \"~2.8.6\",\n    \"@types/jasminewd2\": \"~2.0.3\",\n    \"@types/node\": \"~8.9.4\",\n    \"codelyzer\": \"~4.2.1\",\n    \"jasmine-core\": \"~2.99.1\",\n    \"jasmine-spec-reporter\": \"~4.2.1\",\n    \"karma\": \"~1.7.1\",\n    \"karma-chrome-launcher\": \"~2.2.0\",\n    \"karma-coverage-istanbul-reporter\": \"~1.4.2\", \n```", "```ts\n \"karma-jasmine\": \"~1.1.1\",\n    \"karma-jasmine-html-reporter\": \"^0.2.2\",\n    \"protractor\": \"~5.3.0\", \"ts-node\": \"~5.0.1\",\n    \"tslint\": \"~5.9.1\"\n  }\n  ...\n```", "```ts\n.vscode/settings.json\n{\n  \"editor.tabSize\": 2,\n  \"editor.rulers\": [90, 140],\n  \"files.trimTrailingWhitespace\": true,\n  \"files.autoSave\": \"onFocusChange\",\n  \"editor.cursorBlinking\": \"solid\",\n  \"workbench.iconTheme\": \"material-icon-theme\", // Following setting \n                                               requires Material Icon \n                                                   Theme Extension\n  \"git.enableSmartCommit\": true,\n  \"editor.autoIndent\": true,\n  \"debug.openExplorerOnEnd\": true,\n  \"auto-close-tag.SublimeText3Mode\": true,      // Following setting \n                                               requires Auto Close Tag \n                                                      Extension\n  \"explorer.openEditors.visible\": 0,\n  \"editor.minimap.enabled\": false,\n  \"html.autoClosingTags\": false,\n  \"git.confirmSync\": false,\n  \"editor.formatOnType\": true,\n  \"editor.formatOnPaste\": true,\n  \"editor.formatOnSave\": true,\n  \"prettier.printWidth\": 90,                 // Following setting requires\n                                                    Prettier Extension\n  \"prettier.semi\": false,\n  \"prettier.singleQuote\": true,\n  \"prettier.trailingComma\": \"es5\",\n  \"typescriptHero.imports.insertSemicolons\": false, // Following setting \n                                                   requires TypeScriptHero \n                                                          Extension\n  \"typescriptHero.imports.multiLineWrapThreshold\": 90,\n}\n```", "```ts\n\"editor.codeActionsOnSave\": {\n  \"source.organizeImports\": true\n},    \n\"npm.enableScriptExplorer\": true\n```", "```ts\n.vscode/extensions.json\n{\n  \"recommendations\": [\n    \"johnpapa.angular-essentials\",\n \"PKief.material-icon-theme\",\n    \"formulahendry.auto-close-tag\",\n    \"PeterJausovec.vscode-docker\",\n    \"eamodio.gitlens\",\n    \"WallabyJs.quokka-vscode\",\n    \"rbbit.typescript-hero\",\n```", "```ts\n    \"DSKWRK.vscode-generate-getter-setter\",\n    \"esbenp.prettier-vscode\"\n  ]\n}\n```", "```ts\nimport { AppComponent } from \"./app.component\";\n```", "```ts\nimport { AppComponent } from './app.component'\n```", "```ts\n**package.json**\n  ... \n  \"scripts\": {\n    ...\n    \"standardize\": \"prettier **/*.ts --write\",\n    \"start\": \"npm run standardize && ng serve --port 5000\",\n    \"build\": \"npm run standardize && ng build\",\n    ...\n  },\n  ...\n \"prettier\": {\n    \"printWidth\": 90,\n    \"semi\": false,\n    \"singleQuote\": true,\n    \"trailingComma\": \"es5\",\n    \"parser\": \"typescript\"\n  } ... \n```", "```ts\ntslint.json\n  ...  \n  \"quotemark\": [\n    true,\n    \"single\"\n  ],\n  ...\n  \"semicolon\": [\n    true,\n    \"never\"\n  ],\n  ...  \"max-line-length\": [\n    true,\n    120\n  ],...\n```", "```ts\nsrc/app/app.component.html\n<div style=\"text-align:center\">\n  <h1>\n  LocalCast Weather\n  </h1>\n  <div>Your city, your forecast, right now!</div>\n  <h2>Current Weather</h2>\n  <div>current weather</div>\n</div>\n```", "```ts\napi.openweathermap.org/data/2.5/weather?q={city name},{country code}\n```", "```ts\nhttp://samples.openweathermap.org/data/2.5/weather?q=London,uk&appid=b1b15e88fa797225412429c1c50c122a1\n{\n  \"coord\": {\n    \"lon\": -0.13,\n    \"lat\": 51.51\n  },\n  \"weather\": [\n    {\n      \"id\": 300,\n      \"main\": \"Drizzle\",\n      \"description\": \"light intensity drizzle\",\n      \"icon\": \"09d\"\n    }\n  ],\n  \"base\": \"stations\",\n  \"main\": {\n    \"temp\": 280.32,\n    \"pressure\": 1012,\n    \"humidity\": 81,\n    \"temp_min\": 279.15,\n    \"temp_max\": 281.15\n  },\n  \"visibility\": 10000,\n  \"wind\": {\n    \"speed\": 4.1,\n    \"deg\": 80\n  },\n  \"clouds\": {\n    \"all\": 90\n  },\n  \"dt\": 1485789600,\n  \"sys\": {\n    \"type\": 1,\n    \"id\": 5091,\n    \"message\": 0.0103,\n    \"country\": \"GB\",\n    \"sunrise\": 1485762037,\n    \"sunset\": 1485794875\n  },\n  \"id\": 2643743,\n  \"name\": \"London\",\n  \"cod\": 200\n}\n```", "```ts\nsrc/app/weather/weather.service.ts\ninterface ICurrentWeatherData {\n  weather: [{\n    description: string,\n    icon: string\n  }],\n  main: {\n    temp: number\n  },\n  sys: {\n    country: string\n  },\n  dt: number,\n  name: string\n}\n```", "```ts\nsrc/app\n\u251c\u2500\u2500 app.component.css\n\u251c\u2500\u2500 app.component.html\n\u251c\u2500\u2500 app.component.spec.ts\n\u251c\u2500\u2500 app.component.ts\n\u251c\u2500\u2500 app.module.ts\n\u251c\u2500\u2500 current-weather\n  \u251c\u2500\u2500 current-weather.component.css\n  \u251c\u2500\u2500 current-weather.component.html\n  \u251c\u2500\u2500 current-weather.component.spec.ts\n  \u2514\u2500\u2500 current-weather.component.ts\n```", "```ts\nsrc/app/current-weather/current-weather.component.ts\nimport { Component, OnInit } from '@angular/core'\n@Component({\n  selector: 'app-current-weather',\n  templateUrl: './current-weather.component.html',\n  styleUrls: ['./current-weather.component.css'],\n})\nexport class CurrentWeatherComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n```", "```ts\nsrc/app/current-weather/current-weather.component.ts import { Component, OnInit } from '@angular/core'\n\n@Component({\n  selector: 'app-current-weather',\n  template: `\n  <p>\n    current-weather works!\n  </p>\n  `,\n  styles: ['']\n})\nexport class CurrentWeatherComponent implements OnInit {\nconstructor() {}\n\nngOnInit() {}\n}\n```", "```ts\nsrc/app/app.module.ts ...\nimport { CurrentWeatherComponent } from './current-weather/current-weather.component'\n...\n@NgModule({\ndeclarations: [AppComponent, CurrentWeatherComponent],\n...\n```", "```ts\nsrc/app/app.component.html\n<div  style=\"text-align:center\"> <h1> LocalCast Weather </h1> <div>Your city, your forecast, right now!</div>\n <h2>Current Weather</h2>\n <app-current-weather></app-current-weather> </div>\n```", "```ts\nsrc/app/icurrent-weather.ts\nexport  interface ICurrentWeather { }\n```", "```ts\nsrc/app/interfaces.ts\nexport interface ICurrentWeather {\n  city: string\n  country: string\n  date: Date\n  image: string\n  temperature: number\n  description: string\n}\n```", "```ts\nsrc/app/current-weather/current-weather.component.ts import { Component, OnInit } from '@angular/core'\nimport { ICurrentWeather } from '../interfaces'\n\n@Component({\n  selector: 'app-current-weather',\n  templateUrl: './current-weather.component.html',\n  styleUrls: ['./current-weather.component.css'],\n})\nexport class CurrentWeatherComponent implements OnInit {\n  current: ICurrentWeather\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n```", "```ts\nsrc/app/current-weather/current-weather.component.ts\n...\nconstructor() {\n this.current = {\n city: 'Bethesda',\n country: 'US',\n date: new Date(),\n image: 'assets/img/sunny.svg',\n temperature: 72,\n description: 'sunny',\n } as ICurrentWeather\n} ...\n```", "```ts\nsrc/app/current-weather/current-weather.component.html <div>\n  <div>\n    <span>{{current.city}}, {{current.country}}</span>\n    <span>{{current.date | date:'fullDate'}}</span>\n  </div>\n  <div>\n    <img [src]='current.image'>\n    <span>{{current.temperature | number:'1.0-0'}}\u2109</span>\n  </div>\n  <div>\n    {{current.description}}\n  </div>\n</div>\n```", "```ts\nsrc/app\n...\n\u2514\u2500\u2500 weather\n   \u251c\u2500\u2500 weather.service.spec.ts\n   \u2514\u2500\u2500 weather.service.ts\n```", "```ts\nsrc/app/app.module.ts\n...\nimport { WeatherService } from './weather/weather.service'\n...\n@NgModule({\n  ...\n  providers: [WeatherService],\n  ...\n```", "```ts\nsrc/app/app.module.ts\n...\nimport { HttpClientModule } from  '@angular/common/http'\n...\n@NgModule({\n  ...\n  imports: [\n    ...\n    HttpClientModule,\n    ...\n```", "```ts\nsrc/app/weather/weather.service.ts\nimport { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\n\n@Injectable()\nexport class WeatherService {\n  constructor(private httpClient: HttpClient) {}\n}\n```", "```ts\nsrc/environments/environment.ts\nexport const environment = {\n  production: false,\n  appId: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',\n  baseUrl: 'http://',\n}\n```", "```ts\nsrc/app/weather/weather.service.ts\nimport { environment } from '../../environments/environment'\n...\nexport class WeatherService {\n  constructor(private httpClient: HttpClient) { }\n\n  getCurrentWeather(city: string, country: string) {\n    return this.httpClient.get<ICurrentWeatherData>(\n        `${environment.baseUrl}api.openweathermap.org/data/2.5/weather?` +\n          `q=${city},${country}&appid=${environment.appId}`\n    )\n  }\n}\n```", "```ts\nsrc/app/current-weather/current-weather.component.ts\nconstructor(private weatherService: WeatherService) { }\n```", "```ts\nsrc/app/current-weather/current-weather.component.ts\nngOnInit() {\n  this.weatherService.getCurrentWeather('Bethesda', 'US')\n    .subscribe((data) => this.current = data)\n}\n```", "```ts\n**src/app/weather/weather.service.ts**\nimport { Observable } from 'rxjs'\nimport { ICurrentWeather } from '../interfaces'\n... \n```", "```ts\nexport class WeatherService {\n  ...\n  getCurrentWeather(city:  string, country:  string): Observable<ICurrentWeather> {\n  }\n  ...\n}\n```", "```ts\nsrc/app/weather/weather.service.ts export class WeatherService {...\n  private transformToICurrentWeather(data: ICurrentWeatherData): ICurrentWeather {\n    return {\n      city: data.name,\n      country: data.sys.country,\n      date: data.dt * 1000,\n      image: `http://openweathermap.org/img/w/${data.weather[0].icon}.png`,\n      temperature: this.convertKelvinToFahrenheit(data.main.temp),\n      description: data.weather[0].description\n    }\n  }\n\n  private convertKelvinToFahrenheit(kelvin: number): number {\n    return kelvin * 9 / 5 - 459.67\n  }\n}\n```", "```ts\nsrc/app/weather/weather.service.ts\nimport { map } from 'rxjs/operators'\n```", "```ts\nsrc/app/weather/weather.service.ts\n...\nreturn this.httpClient\n  .get<ICurrentWeatherData>(\n    `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${environment.appId}`\n  ).pipe(\n    map(data => \n      this.transformToICurrentWeather(data)\n    )\n  )\n...\n```"]