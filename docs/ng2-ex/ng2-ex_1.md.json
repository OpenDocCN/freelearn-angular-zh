["```ts\n**npm install -g live-server**\n\n```", "```ts\n**live-server**\n\n```", "```ts\n<!DOCTYPE html> \n<html> \n  <head> \n    <title>Guess the Number!</title> \n    <link href=\"http://netdna.bootstrapcdn.com/bootstrap/\n                3.1.1/css/bootstrap.min.css\" rel=\"stylesheet\"> \n    <script src=\"https://unpkg.com/core-js/client/shim.min.js\"></script> \n    <script src=\"https://unpkg.com/reflect-metadata@0.1.3\"></script> \n    <script src=\"https://unpkg.com/zone.js@0.6.23?main=browser\"></script> \n    <script src=\"https://unpkg.com/typescript@2.0/lib/typescript.js\">\n    </script> \n    <script src=\"https://unpkg.com/systemjs@0.19.27/dist/system.js\">\n    </script> \n    <script src=\"systemjs.config.js\"></script> \n    <script> \n      System.import('app').catch(function(err){ console.error(err); }); \n    </script> \n  </head> \n  <body> \n    <my-app>Loading...</my-app> \n  </body> \n</html> \n\n```", "```ts\n<my-app>Loading...</my-app> \n\n```", "```ts\nimport { Component }from '@angular/core'; \n\n```", "```ts\n@Component({ \n  selector: 'my-app', \n  template: ` \n    <div class=\"container\"> \n      <h2>Guess the Number !</h2> \n      <p class=\"well lead\">Guess the computer generated random\n         number between 1 and 1000.</p> \n      <label>Your Guess: </label> \n      <input type=\"number\" [value]=\"guess\" (input)=\"guess = \n       $event.target.value\" />\n      <button (click)=\"verifyGuess()\" class=\"btn btn-primary btn-sm\">\n      Verify</button> \n      <button (click)=\"initializeGame()\" class=\"btn btn-warning btn-sm\">\n      Restart</button> \n    <div> \n      <p *ngIf=\"deviation<0\" class=\"alert alert-warning\">\n      Your guess is higher.</p>\n      <p *ngIf=\"deviation>0\" class=\"alert alert-warning\">\n      Your guess is lower.</p>\n      <p *ngIf=\"deviation===0\" class=\"alert alert-success\">\n      Yes! That's it.</p> \n    </div> \n      <p class=\"text-info\">No of guesses : \n        <span class=\"badge\">{{noOfTries}}</span> \n      </p> \n    </div> \n}) \n\n```", "```ts\nexport class GuessTheNumberComponent { \n  deviation: number; \n  noOfTries: number; \n  original: number; \n  guess: number; \n  constructor() { \n    this.initializeGame(); \n  } \n  initializeGame() { \n    this.noOfTries = 0; \n    this.original = Math.floor((Math.random() * 1000) + 1); \n    this.guess = null; \n    this.deviation = null; \n  } \n  verifyGuess() { \n    this.deviation = this.original - this.guess; \n    this.noOfTries = this.noOfTries + 1; \n  } \n} \n\n```", "```ts\nimport { NgModule }      from '@angular/core'; \nimport { BrowserModule } from '@angular/platform-browser'; \n\nimport { GuessTheNumberComponent }     \nfrom './guess-the-number.component'; \n\n@NgModule({ \n    imports:      [ BrowserModule ], \n    declarations: [ GuessTheNumberComponent ], \n    bootstrap:    [ GuessTheNumberComponent ] \n}) \nexport class AppModule { } \n\n```", "```ts\nimport { platformBrowserDynamic }    \nfrom '@angular/platform-browser-dynamic'; \nimport { AppModule } from './app.module'; \nconst platform = platformBrowserDynamic(); \nplatform.bootstrapModule(AppModule); \n\n```", "```ts\n**live-server**\n\n```", "```ts\n<p class=\"text-info\">No of guesses :  \n  <span class=\"badge\">{{noOfTries}}</span> \n</p> \n\n```", "```ts\n// outputs the value of a component property \n{{property}} \n\n// adds two values \n{{ 7 + 9 }} \n\n//outputs the result of boolean comparison. Ternary operator \n{{property1 >=0?'positive': 'negative'}} \n\n//call a component's testMethod and outputs the return value \n{{testMethod()}} \n\n```", "```ts\n{{customer?.firstName }} \n\n```", "```ts\n<input type=\"number\" [value]=\"guess\" (input)=\"guess =    $event.target.value\" />\n```", "```ts\n<input type=\"number\" [value]=\"guess\" (input)=\"guess =    $event.target.value\" />\n```", "```ts\n<button (click)=\"verifyGuess()\" class=\"btn btn-primary btn-sm\">Verify</button>\n<button (click)=\"initializeGame()\" class=\"btn btn-warning    btn-sm\">Restart</button>\n```", "```ts\n<div>\n  <p *ngIf=\"deviation<0\" class=\"alert alert-warning\"> Your guess is higher.</p> \n  <p *ngIf=\"deviation>0\" class=\"alert alert-warning\"> Your guess is lower.</p>\n  <p *ngIf=\"deviation===0\" class=\"alert alert-success\"> Yes! That\"s it.</p> \n</div> \n\n```", "```ts\ntemplate: ` \n............. \n  <div>\n    <p *ngIf=\"deviation<0\" class=\"alert alert-warning\"> Your guess is higher.</p>\n    <p *ngIf=\"deviation>0\" class=\"alert alert-warning\"> Your guess is lower.</p>\n    <p *ngIf=\"deviation===0\" class=\"alert alert-success\"> Yes! That's it.</p></div> \n    <p class=\"text-info\">No of guesses : \n      <span class=\"badge\">{{noOfTries}}</span> \n    </p> \n</div>\n` \n\n```", "```ts\n<script src=\"https://unpkg.com/systemjs@0.19.27/dist/system.js\"></script> \n<script src=\"systemjs.config.js\"></script> \n\n```", "```ts\nmap : { \n    'app': 'app', \n    'rxjs': 'https://unpkg.com/rxjs@5.0.0-beta.12', \n    '@angular/common': 'https://unpkg.com/@angular/common@2.0.0', \n    '@angular/compiler': 'https://unpkg.com/@angular/compiler@2.0.0', \n    '@angular/core': 'https://unpkg.com/@angular/core@2.0.0', \n    '@angular/platform-browser': 'https://unpkg.com/@angular/\n                                  platform-browser@2.0.0', \n    '@angular/platform-browser-dynamic': 'https://unpkg.com/@angular/\n     platform-browser-dynamic@2.0.0' \n}, \n\n```", "```ts\npackages:{ \n    'app':  { main: 'main.ts',  defaultExtension: 'ts' }, \n    '@angular/common': { main: 'bundles/common.umd.js',\n                         defaultExtension: 'js' }, \n    '@angular/compiler': { main: 'bundles/compiler.umd.js',\n                           defaultExtension: 'js' }, \n    '@angular/core': { main: 'bundles/core.umd.js',\n                       defaultExtension: 'js' }, \n    '@angular/platform-browser': { main: 'bundles/platform-browser.umd.js',\n                                   defaultExtension: 'js' }, \n    '@angular/platform-browser-dynamic': { main: \n    'bundles/platform-browser-dynamic.umd.js', defaultExtension: 'js' }, \n}, \n\n```", "```ts\ntranspiler: 'typescript', \ntypescriptOptions: { \n    emitDecoratorMetadata: true \n} \n\n```", "```ts\nsystem.import('app').catch(function(err){ console.error(err); }); \n\n```", "```ts\nplatform.bootstrapModule(AppModule); \n\n```", "```ts\n<my-app>Loading...</my-app>  \n\n```", "```ts\n@Component({ \n  selector: 'my-app' \n\n```"]