["```ts\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/\n        Chart.js/2.5.0/Chart.bundle.min.js\"></script>\n\n```", "```ts\n \"scripts\":  [  \"../node_modules/chart.js/dist/\n        Chart.js\",  //..others  ]\n\n```", "```ts\n<p-chart type=\"doughnut\" [data]=\"doughnutdata\"></p-chart>\n\n```", "```ts\nthis.doughnutdata = {\n  labels: ['PrimeNG', 'PrimeUI', 'PrimeReact'],\n  datasets: [\n    {\n      data: [3000, 1000, 2000],\n      backgroundColor: [\n        \"#6544a9\",\n        \"#51cc00\",\n        \"#5d4361\"\n  ],\n      hoverBackgroundColor: [\n        \"#6544a9\",\n        \"#51cc00\",\n        \"#5d4361\"\n  ]\n    }\n  ]\n};\n\n```", "```ts\n<p-chart type=\"line\" [data]=\"linedata\" [options]=\"options\">\n</p-chart>\n\n```", "```ts\nthis.options = {\n title: {\n    display: true,\n    text: 'PrimeNG vs PrimeUI',\n    fontSize: 16\n  },\n  legend: {\n    position: 'bottom'\n  }  };\n\n```", "```ts\n<p-chart type=\"line\" [data]=\"linedata\" \n  (onDataSelect)=\"selectData($event)\"></p-chart>\n\n```", "```ts\nselectData(event: any) {\n  this.msgs = [];\n  this.msgs.push({\n    severity: 'info',\n    summary: 'Data Selected',\n    'detail': this.linedata.datasets[event.element._datasetIndex]\n    .data[event.element._index]\n  });\n}\n\n```", "```ts\n<p-chart type=\"line\" [data]=\"linedata\" width=\"300\" height=\"100\">\n</p-chart>\n\n```", "```ts\nthis.linedata = {\n labels: ['January', 'February', 'March', 'April', 'May', \n 'June', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    datasets: [\n    {\n      label: 'PrimeNG',\n      backgroundColor: '#ffb870',\n      borderColor: '#cc4e0e',\n      data: [13, 22, 15, 38, 41, 42, 25, 53, 53, 63, 77, 93]\n     },\n     {\n      label: 'PrimeUI',\n      backgroundColor: '#66ff00',\n      borderColor: '#6544a9',\n      data: [15, 11, 18, 28, 32, 32, 42, 52, 48, 62, 77, 84]\n     }\n  ]\n};\n\n```", "```ts\n<p-chart type=\"bar\" [data]=\"bardata\" width=\"300\" height=\"100\">\n</p-chart>\n\n```", "```ts\nthis.bardata = {\n  labels: ['January', 'February', 'March', 'April', 'May', \n 'June', 'July', 'Aug', 'Sep',\n 'Oct', 'Nov', 'Dec'],\n    datasets: [\n    {\n      label: 'PrimeNG',\n      backgroundColor: '#66ff00',\n      borderColor: '#6544a9',\n      data: [10, 15, 13, 27, 22, 34, 44, 48, 42, 64, 77, 89]\n    },\n    {\n      label: 'PrimeUI',\n      backgroundColor: '#ffb870',\n      borderColor: '#cc4e0e',\n      data: [5, 14, 15, 22, 26, 24, 32, 42, 48, 62, 66, 72]\n    }\n  ]\n};\n\n```", "```ts\n<p-chart #pie type=\"pie\" [data]=\"piedata\" width=\"300\" height=\"100\">\n</p-chart>\n\n```", "```ts\nthis.piedata = {\n  labels: ['PrimeNG', 'PrimeUI', 'PrimeReact'],\n  datasets: [\n    {\n      data: [3000, 1000, 2000],\n      backgroundColor: [\n        \"#6544a9\",\n        \"#51cc00\",\n        \"#5d4361\"\n  ],\n      hoverBackgroundColor: [\n        \"#6544a9\",\n        \"#51cc00\",\n        \"#5d4361\"\n  ]\n    }\n  ]\n};\n\n```", "```ts\n<p-chart type=\"doughnut\" [data]=\"doughnutdata\" width=\"300\" \n  height=\"100\">\n</p-chart>\n\n```", "```ts\nthis.doughnutdata = {\n labels: ['PrimeNG', 'PrimeUI', 'PrimeReact'],\n  datasets: [\n    {\n      data: [3000, 1000, 2000],\n      backgroundColor: [\n        \"#6544a9\",\n        \"#51cc00\",\n        \"#5d4361\"\n  ],\n      hoverBackgroundColor: [\n        \"#6544a9\",\n        \"#51cc00\",\n        \"#5d4361\"\n  ]\n    }\n  ]\n};\n\n```", "```ts\n<p-chart type=\"radar\" [data]=\"radardata\" width=\"300\" height=\"100\">\n</p-chart>\n\n```", "```ts\nthis.radardata = {\n  labels: ['Requirement', 'Design', 'Implementation', 'Testing', \n 'Deployment', 'Maintainance'],\n  datasets: [\n    {\n      label: 'PrimeNG',\n      backgroundColor: 'rgba(162,141,158,0.4)',\n      borderColor: 'rgba(145,171,188,1)',\n      pointBackgroundColor: 'rgba(145,171,188,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(145,171,188,1)',\n      data: [76, 55, 66, 78, 93, 74]\n    },\n    {\n      label: 'PrimeReact',\n      backgroundColor: 'rgba(255,99,132,0.2)',\n      borderColor: 'rgba(255,99,132,1)',\n      pointBackgroundColor: 'rgba(255,99,132,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(255,99,132,1)',\n      data: [30, 43, 38, 17, 89, 33]\n    }\n  ]\n};\n\n```", "```ts\n<p-chart type=\"polarArea\" [data]=\"polardata\" width=\"300\" height=\"100\">\n</p-chart>\n\n```", "```ts\nthis.polardata = {\n  datasets: [{\n    data: [45, 35, 10, 15, 5],\n    backgroundColor: [\"#6544a9\", \"#51cc00\", \"#5d4361\", \"#E7E9ED\", \n \"#36A2EB\"],\n    label: 'Prime Libraries'\n  }],\n  labels: [\"PrimeFaces\", \"PrimeNG\", \"PrimeReact\", \"PrimeUI\", \n \"PrimeMobile\"]\n}\n\n```", "```ts\n<p-organizationChart [value]=\"data\"></p-organizationChart>\n\n```", "```ts\ndata: TreeNode[];\n\nngOnInit() {\n  this.data = [\n    {\n      label: 'CEO',\n      expanded: true,\n      children: [\n        {\n          label: 'Finance',\n          expanded: true,\n          children: [\n            {label: 'Chief Accountant'},\n            {label: 'Junior Accountant'}\n          ]\n        },\n        {label: 'Marketing'},\n        {\n          label: 'Project Manager',\n          expanded: true,\n          children: [\n            {label: 'Architect'},\n            {label: 'Frontend Developer'},\n            {label: 'Backend Developer'}\n          ]\n        }\n      ]\n    }\n  ];\n}\n\n```", "```ts\n<p-organizationChart  [value]=\"data\" styleClass=\"company\">\n <ng-template  let-node pTemplate=\"department\">\n    <div  class=\"node-header ui-corner-top\">\n      {{node.label}}\n    </div>\n    <div  class=\"node-content ui-corner-bottom\">\n      <img  src=\"/assets/data/avatar/{{node.data.avatar}}\" width=\"32\">\n      <div>{{node.data.name}}</div>\n    </div>\n  </ng-template>\n  <ng-template  let-node pTemplate=\"default\">\n    {{node.label}}\n  </ng-template>\n</p-organizationChart>\n\n```", "```ts\nthis.data = [\n  {\n    label: 'CEO',\n    expanded: true,\n    type: 'department',\n    styleClass: 'org-dept',\n    data: {id: '1', name: 'Alex Konradi', avatar: 'man.png'},\n    children: [\n      {\n        label: 'Finance',\n        expanded: true,\n        type: 'department',\n        styleClass: 'org-dept',\n        data: {id: '2', name: 'Sara Schmidt', avatar: 'women.png'},\n        children: [\n          {\n            label: 'Chief Accountant',\n            styleClass: 'org-role'\n  },\n          {\n            label: 'Junior Accountant',\n            styleClass: 'org-role'\n  }\n        ]\n      },\n      ...\n    ]\n  }\n];\n\n```", "```ts\n.org-role {\n background-color: #00b60d;\n color: #ffffff;\n}\n\n.org-dept .ui-node-toggler {\n color: #bb0066 !important;\n}\n\n```", "```ts\n<p-organizationChart [value]=\"data\"\n  selectionMode=\"single\" [(selection)]=\"selectedNode\">\n</p-organizationChart>\n\n```", "```ts\n<p-organizationChart  [value]=\"data\" styleClass=\"company\"\n selectionMode=\"single\" [(selection)]=\"selectedNode\"\n  (onNodeSelect)=\"onNodeSelect($event)\">\n  ...\n</p-organizationChart>\n\n```", "```ts\nexport interface VCard {\n id: string;\n  fullName: string;\n  birthday: string;\n  address: string;\n  email: string;\n}\n\n```", "```ts\ndisplay: boolean = false; selectedVCard: VCard;\nprivate availableVCards: VCard[];\n\nonNodeSelect(event: any) {\n if (this.availableVCards == null) {\n    this.vcardService.getVCards().subscribe(\n      (vcards: VCard[]) => {\n        this.availableVCards = vcards;\n        this.showInfo(event);\n      });\n  } else {\n    this.showInfo(event);\n  }\n}\n\nprivate showInfo(event: any) {\n this.selectedVCard = null;\n\n  this.availableVCards.some((element: VCard) => {\n    if (event.node.data && element.id === event.node.data.id) {\n      this.selectedVCard = element;\n      return true;\n    }\n  });\n\n  if (this.selectedVCard) {\n    // show VCard in dialog\n  this.display = true;\n  } else {\n    // show node label in growl\n  this.msgs = [];\n    this.msgs.push({severity: 'Label', summary: event.node.label});\n  }\n}\n\n```", "```ts\n<p-dialog  header=\"VCard\" [(visible)]=\"display\"\n modal=\"modal\" width=\"320\" [responsive]=\"true\">\n <i  class=\"fa fa-address-card-o\"></i>\n  <ul  style=\"padding: 0.2em 0.8em;\">\n    <li>Full name: {{selectedVCard?.fullName}}</li>\n    <li>Birthday: {{selectedVCard?.birthday}}</li>\n    <li>Address: {{selectedVCard?.address}}</li>\n    <li>E-mail: {{selectedVCard?.email}}</li>\n </ul>\n</p-dialog>\n\n```", "```ts\n<script type=\"text/javascript\"   \n  src=\"https://maps.google.com/maps/api/js?\n  key=AIzaSyA6Ar0UymhiklJBzEPLKKn2QHwbjdz3XV0\"></script>\n\n```", "```ts\n<p-gmap [options]=\"options\" [styleClass]=\"'dimensions'\">\n</p-gmap>\n\n```", "```ts\nthis.options = {\n center: {lat: 14.4426, lng: 79.9865},\n  zoom: 12 };\n\n```", "```ts\n<p-gmap [options]=\"options\" [overlays]=\"overlays\"  \n  [styleClass]=\"'dimensions'\"></p-gmap>\n\n```", "```ts\nthis.overlays = [\n new google.maps.Marker({position: {lat: 14.6188043, \n lng: 79.9630253}, title:\"Talamanchi\"}),\n  new google.maps.Marker({position: {lat: 14.4290442, \n ng: 79.9456852}, title:\"Nellore\"}),\n  new google.maps.Polygon({paths: [\n    {lat: 14.1413809, lng: 79.8254154}, {lat: 11.1513809, \n lng: 78.8354154},\n    {lat: 15.1313809, lng: 78.8254154},{lat: 15.1613809, \n lng: 79.8854154}\n    ], strokeOpacity: 0.5, strokeWeight: 1,\n fillColor: '#1976D2', fillOpacity: 0.35\n  }),\n  new google.maps.Circle({center: {lat: 14.1413809, lng: 79.9513809},  \n fillColor: '#197642', fillOpacity: 0.25, strokeWeight: 1, \n radius: 25000}), new google.maps.Polyline({path: [{lat: 14.1413809,  \n lng: 79.9254154}, {lat: 14.6413809, lng: 79.9254154}], \n geodesic: true, strokeColor: '#F0F000', strokeOpacity: 0.5,  \n strokeWeight: 2})\n];\n\n```", "```ts\n<p-gmap #gmap [options]=\"options\" [overlays]=\"overlaysEvents\"\n (onMapReady)=\"handleMapReady($event)\"  \n  (onMapClick)=\"handleMapClick($event)\"(onOverlayClick)=\"handleOverlayClick($event)\" \n  (onOverlayDragStart)=\"handleDragStart($event)\"\n  (onOverlayDragEnd)=\"handleDragEnd($event)\" \n  [styleClass]=\"'dimensions'\"> \n</p-gmap>\n\n```", "```ts\n<p-dialog showEffect=\"fade\" [(visible)]=\"dialogVisible\" \n  header=\"New Location\">\n <div class=\"ui-grid ui-grid-pad ui-fluid\" *ngIf=\"selectedPosition\">\n    <div class=\"ui-grid-row\">\n      <div class=\"ui-grid-col-2\"><label for=\"title\">Label</label></div>\n      <div class=\"ui-grid-col-10\"><input type=\"text\" \n        pInputText id=\"title\"\n        [(ngModel)]=\"markerTitle\"></div> . \n      </div>\n      <div class=\"ui-grid-row\">\n        <div class=\"ui-grid-col-2\"><label for=\"lat\">Lat</label></div>\n        <div class=\"ui-grid-col-10\"><input id=\"lat\" \n          type=\"text\" readonly pInputText\n          [ngModel]=\"selectedPosition.lat()\"></div> \n        </div>\n        <div class=\"ui-grid-row\">\n          <div class=\"ui-grid-col-2\"><label for=\"lng\">Lng</label></div>\n          <div class=\"ui-grid-col-10\"><input id=\"lng\" \n            type=\"text\" readonly pInputText\n            [ngModel]=\"selectedPosition.lng()\"></div> \n        </div>\n        <div class=\"ui-grid-row\">\n          <div class=\"ui-grid-col-2\"><label for=\"drg\">Drag</label> \n          </div>\n          <div class=\"ui-grid-col-10\">\n            <p-checkbox [(ngModel)]=\"draggable\" binary=\"true\">\n            </p-checkbox></div>     \n        </div>\n     </div>\n    <p-footer>\n      <div class=\"ui-dialog-buttonpane ui-widget-content \n        ui-helper-clearfix\">\n        <button type=\"button\" pButton label=\"Add Marker\" \n          icon=\"fa-plus\" (click)=\"addMarker()\">\n        </button>\n      </div>\n    </p-footer>\n</p-dialog>\n\n```", "```ts\nif (!this.overlaysEvents || !this.overlaysEvents.length) {\n this.overlaysEvents = [\n    new google.maps.Marker({position: {lat: 14.6188043, \n lng: 79.9630253}, title:'Talamanchi'}),  \n    new google.maps.Marker({position: {lat: 14.4290442, \n lng: 79.9456852}, title:'Nellore'}),\n    new google.maps.Polygon({paths: [\n      {lat: 14.1413809, lng: 79.8254154}, \n      {lat: 11.1513809, lng: 78.8354154},\n      {lat: 15.1313809, lng: 78.8254154}, \n      {lat: 15.1613809, lng: 79.8854154}], \n strokeOpacity: 0.5, strokeWeight: 1, \n fillColor: '#1976D2', fillOpacity: 0.35\n  }),\n    new google.maps.Circle({center: {lat: 14.1413809, \n lng: 79.9513809}, fillColor: '#197642', \n fillOpacity: 0.25, strokeWeight: 1, radius: 25000}),\n    new google.maps.Polyline({path: [{lat: 14.1413809, \n lng: 79.9254154}, {lat: 14.6413809, lng: 79.9254154}], \n geodesic: true, strokeColor: '#F0F000',\n      strokeOpacity: 0.5, strokeWeight: 2})];\n}\n\n```"]