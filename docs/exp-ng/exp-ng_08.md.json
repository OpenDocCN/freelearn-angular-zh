["```ts\nimport {Component, View} from \"@angular/core\";\n\n@Component({\n selector: 'my-app',\n template: `<h2>{{ title }}</h2>`\n})\n\nexport class MyTemplateComponent {\n title = 'Learning Angular!!!'\n}\n\n```", "```ts\nimport {Component, View} from \"@angular/core\";\n\n@Component({\n selector: 'my-app',\n template: `<h2> {{ title }} </h2>`\n})\n\nexport class MyTemplate {\n title = 'Learning Angular!!!'\n}\n\n```", "```ts\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n selector: 'app-data-binding',\n templateUrl: './data-binding.component.html',\n styleUrls: ['./data-binding.component.css']\n})\nexport class DataBindingComponent {\n}\n\n```", "```ts\n{{ test_value }}\n\n```", "```ts\nimport { Component } from '@angular/core';\n\n@Component({\n templateUrl: './app.component.html',\n styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  constructor() { }\n  title = \"Data Binding\";\n}\n\n```", "```ts\n<p> {{ title }} </p>\n\n```", "```ts\n<p> {{ tax+10 }} </p> // Using plus operator\n\n<p> {{( tax*50)-10 }} </p>\n\n```", "```ts\n<h4>Template Expressions</h4>\n\n<p> Expression with (+) Operator: <strong>{{ tax+ 10 }}</strong></p>\n\n<p> Expression with (+ and *) Operator: <strong>{{ (tax*50) +10 }} \n   </strong></p>\n\n```", "```ts\nimport { Component } from '@angular/core';\n\n@Component({\n templateUrl: './app.component.html',\n styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n constructor() { }\n\n title = \"Data Binding\";\n tax = 10;\n}\n\n```", "```ts\n<button (click)= function_name()> Update Tax</button>\n\n```", "```ts\n<p> {{ title }} </p>\n<p> {{ tax+ 10 }}</p>\n<p> {{ (tax*50) +10 }} </p>\n<button (click)= updateTax()> Update Tax </button>\n\n```", "```ts\nimport { Component } from '@angular/core';\n\n@Component({\n templateUrl: './data-binding.component.html',\n styleUrls: ['./data-binding.component.css']\n})\n\nexport class DataBindingComponent {\n constructor() { }\n\n title = \"Data Binding and Template Syntax\";\n tax = 10;\n\n updateTax() {\n  this.tax = 20;\n }\n}\n\n```", "```ts\n<list-products></list-products>\n\n```", "```ts\nimport { Component } from '@angular/core';\n\n@Component({\n selector: 'list-products',\n templateUrl: './list-products.component.html',\n styleUrls: ['./list-products.component.css']\n})\n\nexport class ListProductsComponent {\n constructor() { }\n}\n\n```", "```ts\n<list-products></list-products>\n\n```", "```ts\n<button class=\"myBtn\" [disabled]=\"state=='texas'\"  .\n  (click)=\"updateTax()\"></button>\n\n```", "```ts\n<button (click)= updateTax() [disabled]=\"state=='texas'\"> Update Tax \n  </button>\n\n```", "```ts\nimport { Component } from '@angular/core';\n\n@Component({\n templateUrl: './data-binding.component.html',\n styleUrls: ['./data-binding.component.css']\n})\nexport class DataBindingComponent {\n\n constructor() { }\n\n title = \"Data Binding and Template Syntax\";\n\n tax = 10;\n state = 'texas';\n\n updateTax() {\n  this.tax = 20;\n }\n}\n\n```", "```ts\n{{ value_to_display }} // Using Interpolation  [attribute] = \"expression\" // Attribute binding\n\n```", "```ts\n<a bind-href = \"value\"> Link 1</a>\n\n```", "```ts\n<h4>{{ title }}</h4>\n\n<div [style.color]=\"colorVal\">Updating element Style CSS \n    Attributes</div>\n<p>\n  <div [className]=\"'special'\" >I am Div with className directive</div>\n<p>\n  <div [ngClass]=\"{'specialClass': true, 'specialClass2': true}\" >I am \n        Div with ngClass directive</div>\n<p>\n<img [src]=\"imageUrl\" width=\"100\" height=\"100\">\n\n```", "```ts\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-one-way',\n  templateUrl: './one-way.component.html',\n  styleUrls: ['./one-way.component.css']\n})\nexport class OneWayComponent {\n constructor() { }\n\n title = 'One way data bindings';\n\n  state = 'california';\n  colorVal = 'red';\n  specialClass : true;\n  imageUrl = '././././assets/images/angular.jpeg';\n  tax = 20;\n}\n\n```", "```ts\n(target)=\"statement\"\n\n```", "```ts\n<button (click)=\"updateTax()\"></button>\n\n```", "```ts\n<input [(ngModel)]=\"sample_value\" />\n\n```", "```ts\n<div> {{sample_value}}</div>\n\n<input [(ngModel)]=\"sample_value\" />\n\n```"]