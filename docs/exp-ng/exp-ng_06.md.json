["```ts\nimport {Component} from \"@angular/core\";\n\n@Component({\n selector: 'my-app',\n template: `<h2>{{ title }}</h2>`\n})\n\nexport class MyTemplateComponent {\n title = 'Learning Angular!!!'\n}\n\n```", "```ts\nimport  {MyTemplate}  from  \"./my-app.component\"  \n\n```", "```ts\n  <my-app>Loading...</my-app>\n\n```", "```ts\nimport {Component} from '@angular/core';\n\n@Component({\n   selector: 'my-app',\n   template: `\n\n   <h4>{{title}}</h4>\n\n   <strong>Using ngFor directive</strong>\n   <ul>\n<li *ngFor=\"let language of languages\">{{ language.name }}</li>\n</ul>\n   `\n })\nexport class StructureDirectiveComponent {\n  title = 'Structural Directives';\n\n public languages = [\n  { name: \"PHP\"},\n  { name: \"JavaScript\"},\n  { name: \"Ruby\"},\n  { name: \"Java\"},\n  { name: \"HTML5\"}\n];\n\n}\n\n```", "```ts\n <div *ngIf=\"!isLoggedIn\">\n   <p>Hello Guest user</p>\n </div>\n\n```", "```ts\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'my-app',\n  template: `\n    <h4>{{title}}</h4>\n    <strong>Using ngIf directive</strong>\n    <div *ngIf=\"isLoggedIn\">\n      <p>Hello Packt Author</p>\n    </div>\n\n   <div *ngIf=\"!isLoggedIn\">\n      <p>Hello Guest user</p>\n   </div>\n\n  <strong>Using ngFor directive - Programming Languages </strong>\n\n  <ul>\n    <li *ngFor=\"let language of languages\">{{ language.name }}</li>\n  </ul>\n`\n})\n\nexport class StructureDirectiveComponent {\n title = 'Structural Directives';\n isLoggedIn= true;\n\n public languages = [\n  { name: \"PHP\"},\n  { name: \"JavaScript\"},\n  { name: \"Ruby\"},\n  { name: \"Java\"},\n  { name: \"HTML5\"}\n];\n\n}\n\n```", "```ts\n<div [ngSwitch]=\"taxRate\">\n  <p *ngSwitchCase=\"'state'\">State Tax</p>\n  <p *ngSwitchCase=\"'fedral'\">Fedral Tax</p>\n  <p *ngSwitchCase=\"'medical'\">Medical Tax</p>\n  <p *ngSwitchDefault>Default</p>\n</div>\n\n```", "```ts\nimport {Component} from \"@angular/core\";\n@Component({\n    selector: 'structure-directive',\n    templateUrl: 'structure-directive.component.html'\n})\n\nexport class StructureDirectiveComponent {\n title = 'Structural Directives';\n\n username = \"Sridhar Rao\";\n taxRate = \"state\";\n isLoggedIn= true;\n\n public languages = [\n  { name: \"PHP\"},\n  { name: \"JavaScript\"},\n  { name: \"Ruby\"},\n  { name: \"Java\"},\n  { name: \"HTML5\"}\n ];\n}\n\n```", "```ts\n<input [(ngModel)]=\"username\">\n<p>Hello {{username}}!</p>\n\n```", "```ts\n//passing string to assign class name\n<p [ngClass]=\"'warning'\" >Sample warning message</p>\n //passing array to assign class name\n<p [ngClass]=\"['error', 'success']\" > Message </p>\n\n//Passing object to assign class name\n<p [ngClass]=\"{'error': true, 'success': false }\"> Message</p>\n\n//Passing component method to assign class name\n<p [ngClass]=\"getClassName('error')\"> </p> \n\n```", "```ts\n<p [ngStyle]=\"{ 'font-size': '13px', 'background-color':'#c5e1a5'}\" >Sample success message</p>\n\n```", "```ts\nimport { Component} from '@angular/core';\n\n@Component({\n selector: 'my-app',\n styleUrls: ['./attribute-directive.component.css'],\n template:`\n <h4>Welcome to Built-In {{title}}</h4>\n\n <strong>using ngModel</strong>\n <div><label for=\"username\">Enter username</label>\n <input type=\"text\" [(ngModel)]=\"username\" placeholder=\"enter username\" \n    id=\"username\">\n <p>username is: {{username}}</p>\n </div>\n\n<strong>Notification example using ngStyle</strong>\n <p [ngStyle]=\"{ 'font-size': '13px', 'background-color':'#c5e1a5'}\" \n>Sample success message</p>\n\n<strong>Notification example using ngClass</strong>\n    <p [ngClass]=\"'warning'\" >Sample warning message</p>\n    <p [ngClass]=\"'error'\" >Sample error message</p>\n   `\n})\nexport class AttributeDirectiveComponent {\n title = 'Attribute Directive';\n public username=\"Packt Author\";\n}\n\n```", "```ts\nng generate directive highlightDirective\n\n```", "```ts\nimport { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n selector: '[appHighlightDirective]'\n})\nexport class HighlightDirectiveDirective{\n\n constructor(private elRef: ElementRef) { \n  this.elRef.nativeElement.style.color = 'orange';\n }\n} \n\n```", "```ts\n<div appHighlightDirective> Custom Directive </div>\n\n```", "```ts\n<div appHighlightDirective highlightColor=\"green\">Custom \n    Directive</div>\n\n```", "```ts\nimport { Directive, ElementRef, Input, AfterViewInit } from '@angular/core';\n\n@Directive({\n selector: '[appHighlightDirective]'\n})\nexport class HighlightDirectiveDirective{\n\n @Input() highlightColor : string;\n\n constructor(private elRef: ElementRef) { \n   this.elRef.nativeElement.style.color = 'orange';\n }\n\n ngAfterViewInit(): void {\n   this.elRef.nativeElement.style.color = this.highlightColor;\n }\n}\n\n```", "```ts\n<img [src]=\"imageUrl\" width=\"100\" height=\"100\" appHighlightDirective \n    showOpacity=\"0.5\" hideOpacity=\"1\">\n\n```", "```ts\nimport { Directive, ElementRef, Input, HostListener, AfterViewInit } \n  from '@angular/core';\n\n@Directive({\n selector: '[appHighlightDirective]'\n})\nexport class HighlightDirectiveDirective{\n @Input() highlightColor : string;\n @Input() showOpacity : string;\n @Input() hideOpacity : string;\n\n constructor(private elRef: ElementRef) { \n   this.elRef.nativeElement.style.color = 'orange';\n }\n ngAfterViewInit(): void {\n   this.elRef.nativeElement.style.color = this.highlightColor;\n }\n\n@HostListener('mouseover') onmouseover() {\n  this.elRef.nativeElement.style.opacity = this.hideOpacity;\n }\n\n@HostListener('mouseout') onmouseout() {\n  this.elRef.nativeElement.style.opacity = this.showOpacity;\n }\n}\n\n```", "```ts\nng generate directive custom-structural\n\n```", "```ts\npublic products = [{\n productName: 'Shoes',\n isAvailable : true\n },\n {\n productName: 'Belts',\n isAvailable : true\n },\n {\n productName: 'Watches',\n isAvailable : false\n }]\n\n```", "```ts\n<ul *ngFor=\"let product of products\">\n  <li *appCustomStructural=\"product\">{{product.productName}}</li>\n</ul>\n\n```", "```ts\nimport { Directive, Input, TemplateRef, ViewContainerRef, AfterViewInit \n    } from '@angular/core';\n\n@Directive({\n selector: '[appCustomStructural]'\n})\nexport class CustomStructuralDirective {\n @Input()\n set appCustomStructural(product){\n  if(product.isAvailable == true)\n  {\n    this.viewContainerRef.createEmbeddedView(this.templateRef );\n  }\n }\n\n constructor(\n   private templateRef : TemplateRef<any>,\n   private viewContainerRef : ViewContainerRef\n ) { }\n}\n\n```", "```ts\nimport { Component} from '@angular/core';\n@Component({\n  selector: 'my-app',\n  template:`\n  <h4>Learning Angular {{title}}</h4>\n\n  <button (click)=\"toggleUser()\"> Toggle User </button>\n  <div *ngIf=\"isLoggedIn\">\n    <b>Hello Packt Author</b>\n  </div>\n\n  <div *ngIf=\"!isLoggedIn\">\n    <b>Hello Guest user</b>\n  </div>\n `\n ]\n})\nexport class AppComponent {\n title = 'Change Detection';\n isLoggedIn = true;\n toggleUser(){\n if (this.isLoggedIn)\n   this.isLoggedIn = false\n else\n   this.isLoggedIn = true\n }\n}\n\n```", "```ts\nexport class User {\n constructor(\n public userName: string,\n public userId: number) {}\n}\n\n```", "```ts\nimport { Component, Input, ChangeDetectionStrategy  } from '@angular/core';\nimport { User } from '../shared/user';\n\n@Component({\n selector: 'app-change-detect',\n template: `\n <h3>{{ title }}</h3>\n <p>\n <label>User:</label>\n <span>{{user.userName}} {{user.userId}}</span>\n</p>`,\n changeDetection: ChangeDetectionStrategy.OnPush,\n styleUrls: ['./change-detect.component.css']\n})\n\nexport class ChangeDetectComponent{\n title = \"Change Detection\";\n @Input() user: User;\n constructor() { }\n} \n\n```", "```ts\n changeDetectionDefault(): void {\n   this.user.userName = 'Packt Publications';\n   this.user.userId = 10;\n }\n\n changeDetectionOnPush(): void {\n   this.user = new User('Mike', 10);\n }\n\n```", "```ts\n<button type=\"button\" (click)=\"changeDetectionDefault()\">\n  Change Detection: Default\n </button>\n <button type=\"button\" (click)=\"changeDetectionOnPush()\">\n Change Detection: OnPush\n </button>\n\n<app-change-detect [user]=\"user\"></app-change-detect>\n\n```"]