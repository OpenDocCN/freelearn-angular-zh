["```ts\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 browser.get('http://localhost:3000'); // to navigate the    \n            browser to a specific url address  \n     \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 browser.getTitle(); // this will return the page title that \n            defined in the projects landing page  \n\n    ```", "```ts\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 element(Locator); // return the ElementFinder \n     \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 element.all(Locator); // return the ElementFinderArray \n     \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 element.all(Locator).get(position);  // will return the\n            defined  position \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 element from the ElementFinderArray  \n     \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 element.all(Locator).count(); // will return the \n            total number in the select element's array   \n\n    ```", "```ts\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 element(Locator).getText(); // return the ElementFinder \n            based on locator  \n     \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 element.(Locator).click(); // Will trigger the click \n            handler for that specific element  \n     \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 element.(Locator).clear(); // Clear the field's value \n            (suppose the element is input field)\n    ```", "```ts\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 element(by.css(cssSelector)); // select element by css \n            selector  \n     \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 element(by.id(id)); //  select element by element ID \n     \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 element.(by.model); // select element by ng-model \n\n    ```", "```ts\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 browser.get('/'); \n\n    ```", "```ts\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 var inputField = element.all(by.css('input')); \n\n    ```", "```ts\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 inputField.setText('abc'); \n\n    ```", "```ts\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 var searchButton = element.all(by.css('#searchButton'); \n     \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 searchButton.click(); \n\n    ```", "```ts\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 var searchResults = element.all(by.css('#searchResult'); \n\n    ```", "```ts\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 expect(searchResults).count() >= 1); \n\n    ```", "```ts\n\u00a0\u00a0\u00a0 describe('Given I input 'abc' into the search box',function(){ \n        //1 - Point browser to website \n        browser.get('/'); \n   \u00a0\u00a0   //2 - Select input field \n \u00a0\u00a0\u00a0 \u00a0\u00a0 var inputField = element.all(by.css('input')); \n \u00a0\u00a0  \u00a0\u00a0 //3 - Type abc into input field \n \u00a0\u00a0  \u00a0\u00a0 inputField.setText('abc'); \n \u00a0\u00a0   \u00a0 //4 - Push search button \n \u00a0\u00a0   \u00a0 var searchButton = element.all(by.css('#searchButton'); \n \u00a0\u00a0   \u00a0 searchButton.click(); \n   \u00a0\u00a0  \u00a0it('should display search results',function(){ \n  \u00a0\u00a0    // 5 - Find the search result details \n \u00a0  \u00a0\u00a0  var searchResults = element.all(by.css('#searchResult'); \n   \u00a0\u00a0   //6 - Assert \n   \u00a0\u00a0   expect(searchResults).count() >= 1); \n \u00a0  \u00a0\u00a0  }); \n \u00a0\u00a0 }); \n\n```", "```ts\n    **$ npm install protractor**\n\n    ```", "```ts\n    **$ ./node_modules/protractor/bin/protractor --version**\n\n    ```", "```ts\n    **$ ./node_modules/protractor/bin/webdriver-manager update**\n\n    ```", "```ts\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0   exports.config = {  \n     \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0   //...  \n     \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0   capabilities: { \n     \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0     'browserName': 'chrome' \n     \u00a0\u00a0\u00a0\u00a0\u00a0  \u00a0 },   \n     \u00a0\u00a0\u00a0\u00a0\u00a0  \u00a0 //... \n     \u00a0\u00a0\u00a0\u00a0\u00a0  \u00a0 }; \n\n    ```", "```ts\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0   exports.config = {  \n     \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0   //...  \n              framework: 'jasmine'   \n              //... \n     \u00a0\u00a0\u00a0\u00a0\u00a0  \u00a0 };\n    ```", "```ts\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u00a0 exports.config = { \n     \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0     //... \n     \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0     specs: ['example_spec.js'], \n     \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0     //... \n     \u00a0\u00a0\u00a0\u00a0\u00a0  \u00a0 }; \n\n    ```", "```ts\n**specs: ['confirmConfigTest.js'],**\n\n```", "```ts\n **$ ./node_modules/protractor/bin/protractor conf.js**\n\n```", "```ts\n**Finished in 0.0002 seconds**\n**0 tests, 0 assertions, 0 failures**\n\n```", "```ts\n**$ npm install**\n\n```", "```ts\n**$ npm start**\n\n```", "```ts\n**$ npm install protractor -save-dev**\n\n```", "```ts\n**$ ./node_modules/protractor/bin/protractor --version**\n\n```", "```ts\n**Version 4.0.10**\n\n```", "```ts\n**$ npm install -g protractor**\n\n```", "```ts\n**$ protractor -version**\n\n```", "```ts\n**$ ./node_modules/protractor/bin/webdriver-manager update**\n\n```", "```ts\n**$ webdriver-manager update**\n\n```", "```ts\nexports.config = { \n\n    baseUrl: ' ', \n\n    framework: 'jasmine', \n\n    specs: [], \n\n    capabilities: { \n        'browserName': 'chrome' \n    } \n\n}; \n\n```", "```ts\nexports.config = { \n    // ....  \n    baseUrl: ' http://localhost:3000', \n    // ....  \n}; \n\n```", "```ts\nexports.config = { \n    // ....  \n    specs: [ \n        'app/**/*.e2e.js' \n    ], \n    // ..... \n}; \n\n```", "```ts\nexports.config = { \n    // ....  \n    useAllAngular2AppRoots: true, \n    // ..... \n}; \n\n```", "```ts\nexports.config = { \n    // ....  \n    jasmineNodeOpts: { \n        showColors: true, \n        defaultTimeoutInterval: 30000 \n    }, \n    // ..... \n}; \n\n```", "```ts\ndescribe('Title for test suite', () => { \n\n    beforeEach(() => { \n        // ...  \n    }); \n\n    it('Title for test spec', () => { \n        // ... \n    }); \n\n});; \n\n```", "```ts\nbeforeEach(() => { \n    browser.get(''); \n});; \n\n```", "```ts\nit('Browser should have a defined title', () => { \n       expect(browser.getTitle()).toEqual('Angular Protractor'); \n}); \n\n```", "```ts\ndescribe('AppComponent Tests', () => { \n    beforeEach(() => { \n        browser.get(''); \n    }); \n\n    it('Browser should have a defined title', () => { \n        expect(browser.getTitle()).toEqual('Angular Protractor'); \n    }); \n}); \n\n```", "```ts\n**$ protractor protractor.conf.js**\n\n```", "```ts\n1 spec, 0 failures \nFinished in 1.95 seconds \n\n```", "```ts\nit('Should get the number of items as defined in item object', () => { \n        var todoListItems = element.all(by.css('li')); \n        expect(todoListItems.count()).toBe(3); \n    }); \n\n```", "```ts\nit('Should get the first item text as defined', () => { \n        expect(todoListItems.first().getText()).toEqual('test'); \n    }); \n\n    it('Should get the last item text as defined', () => { \n        expect(todoListItems.last().getText()).toEqual('refactor'); \n    }); \n\n```", "```ts\ndescribe('AppComponent Tests', () => { \n    var todoListItems = element.all(by.css('li')); \n\n    beforeEach(() => { \n        browser.get('/'); \n    }); \n\n    it('Browser should have a defined title', () => { \n        expect(browser.getTitle()).toEqual('Angular Protractor'); \n    }); \n\n    it('Should get the number of items as defined in item object', () \n    => { \n        expect(todoListItems.count()).toBe(3); \n    }); \n\n    it('Should get the first item text as defined', () => { \n        expect(todoListItems.first().getText()).toEqual('test'); \n    }); \n\n    it('Should get the last item text as defined', () => { \n        expect(todoListItems.last().getText()).toEqual('refactor'); \n    }); \n}); \n\n```", "```ts\n**$ protractor protractor.conf.js**\n\n```", "```ts\n**4 specs, 0 failures**\n**Finished in 2.991 seconds**\n\n```", "```ts\n**$ protractor**\n\n```", "```ts\n\"scripts\": { \n    // ...  \n    \"e2e\": \"protractor\" \n    // .... \n  }; \n\n```", "```ts\n**$ npm e2e**\n\n```", "```ts\n\"scripts\": { \n    // ...  \n    \"webdriver-update\": \"webdriver-manager update\" \n    // .... \n  }; \n\n```", "```ts\n**$ npm webdriver-update**\n\n```", "```ts\n**$ npm run e2e**\n\n```", "```ts\n**4 specs, 0 failures**\n**Finished in 2.991 seconds**\n\n```", "```ts\nbrowser.get(''); \n\n```", "```ts\nexpect(todoListItems.count()).toBe(3); \n\n```", "```ts\nit('Should get the number of items as defined in item object', (done) => { \n    var todoListItems = element.all(by.css('li')); \n    todoListItems.count().then(function(count){ \n        expect(count).toBe(3); \n        done(); \n    }); \n}); \n\n```", "```ts\nimport {AppComponent} from \"./app.component\"; \n\nbeforeEach(() => { \n    app = new AppComponent(); \n}); \n\n```"]