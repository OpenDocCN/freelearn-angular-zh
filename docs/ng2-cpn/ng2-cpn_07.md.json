["```ts\n[app.component.ts]\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '<h1>Angular2 Components</h1>'\n}) \nexport class AppComponent {}\n```", "```ts\n[accordion-tab.ts]\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'accordion-tab',\n  styles: [`\n    .accordion-tab {\n      width: 500px;\n      border: 1px solid black;\n      border-collapse: collapse;\n    }\n    .accordion-heading {\n      padding: 5px;\n      background-color: lightblue;\n      cursor: pointer;\n    }\n `],\n  template: `\n    <div class=\"accordion-tab\">\n      <div class=\"accordion-heading\">Accordion Title</div>\n      <div>\n        <ng-content></ng-content>\n      </div>\n    </div>\n  `\n})\nexport class AccordionTab {}\n```", "```ts\n[app.component.ts]\nimport { Component } from '@angular/core';\nimport { AccordionTab } from './components/accordion/accordion-tab';\n\n@Component({\n  selector: 'app-root',\n  template:`\n    <div>\n      <accordion-tab>Accordion Content</accordion-tab>\n      <accordion-tab></accordion-tab>\n      <accordion-tab></accordion-tab>\n    </div>\n  `\n})\nexport class AppComponent {}\n```", "```ts\n[app.module.ts]\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { AppComponent } from './app.component';\nimport { AccordionTab } from './components/accordion/accordion-tab';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AccordionTab\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n```", "```ts\n[accordion-tab.ts]\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'accordion-tab',\n  styles: [`\n    .accordion-tab {\n      width: 500px;\n      border: 1px solid black;\n      border-collapse: collapse;\n    }\n    .accordion-heading {\n      padding: 5px;\n      background-color: lightblue;\n      cursor: pointer;\n    }\n  `],\n  template: `\n    <div class=\"accordion-tab\">\n      <div class=\"accordion-heading\"\n       (click)=\"toggleContent()\">Accordion Title</div>\n      <div class=\"accordion-body\">\n        <ng-content *ngIf=\"extended\"></ng-content>\n      </div>\n    </div>\n  `\n})\nexport class AccordionTab {\n  extended: boolean = false;\n  toggleContent() {\n    this.extended = !this.extended\n  }\n}\n```", "```ts\n[app.component.ts]\nimport { Component } from '@angular/core';\nimport { AccordionTab } from './accordion/accordion-tab.ts';\n\n@Component({\n  selector: 'app-root',\n  template:`\n    <div>\n      <accordion-tab>Accordion Content</accordion-tab>\n      <accordion-tab>Accordion Content</accordion-tab>\n      <accordion-tab>Accordion Content</accordion-tab>\n    </div>\n  `\n}) \nexport class AppComponent {}\n```", "```ts\n[users.json]\n[\n  {\n    \"id\": 1,\n    \"name\": \"Jhon Darn\",\n    \"email\": \"jhon@email.com\",\n    \"birthday\": \"5/6/1979\",\n    \"gender\": \"male\",\n    \"status\": \"active\",\n    \"role\": \"employee\",\n    \"phoneNumbers\": [\n      \"+972-123-9873\",\n      \"+972-352-8922\",\n      \"+972-667-2973\"\n    ]\n  },\n  (...)\n```", "```ts\n[accordion.ts]\nimport { Component } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { AccordionTab } from './accordion-tab';\n\n@Component({\n  selector: 'accordion',\n  template: `\n    <div>\n      <accordion-tab *ngFor=\"let user of users\"\n                   (click)=\"toggle(user)\"\n                   [extended]=\"isActive(user)\"\n                   [title]=\"user.name\">\n                 <pre>{{ user | json }}</pre>\n      </accordion-tab>\n    </div>\n  `\n})\nexport class Accordion {  users;\n  activeUserId = 0;\n\n  constructor(http: Http) {\n    http.get('/app/server/users.json')\n        .map(result => result.json())\n        .subscribe(result => this.users = result);\n  }\n\n  isActive(user) {\n    return user.id === this.activeUserId;\n  }\n\n  toggle(user) {\n    this.isActive(user) ?\n        this.activeUserId = 0 : this.activeUserId = user.id;\n  }\n}\n```", "```ts\n[accordion-tab.ts]\nimport {\n    Component, Input, Output\n} from '@angular/core';\n\n@Component({\n  selector: 'accordion-tab',\n  styles: [`\n    .accordion-tab {\n      width: 500px;\n      border: 1px solid black;\n      border-collapse: collapse;\n    }\n    .accordion-heading {\n      padding: 5px;\n      background-color: lightblue;\n      cursor: pointer;\n    }\n  `],\n  template:`\n    <div class=\"accordion-tab\">\n      <div class=\"accordion-heading\"\n       (click)=\"toggleContent()\">{{title}}</div>\n      <div class=\"accordion-body\">\n        <content *ngIf=\"extended\"></content>\n      </div>\n    </div>\n  `\n})\nexport class AccordionTab {\n  @Input() extended;\n  @Input() title;\n\n  toggleContent() {\n    this.extended = !this.extended\n  }\n}\n```", "```ts\n[app.component.ts]\nimport { Component } from '@angular/core';\nimport { Accordion } from './components/accordion/accordion';\n\n@Component({\n  selector: 'app-root',\n  template: `<accordion></accordion>`\n}) \nexport class AppComponent {}\n```", "```ts\n[accordion-tab.ts]\nimport {\n    Component, Input, Output, EventEmitter\n} from '@angular/core';\n\n@Component({\n  selector: 'accordion-tab',\n  styles: [`\n    .accordion-tab {\n      width: 500px;\n      border: 1px solid black;\n      border-collapse: collapse;\n    }\n    .accordion-heading {\n      padding: 5px;\n      background-color: lightblue;\n      cursor: pointer;\n    }\n `],\n  template: `\n    <div class=\"accordion-tab\">\n     <div class=\"accordion-heading\" \n          (click)=\"toggleContent()\">{{title}}</div>\n     <div>\n      <ng-content *ngIf=\"extended\"></ng-content>\n     </div>\n    </div>\n  `\n}) \nexport class AccordionTab {\n  @Input() extended : boolean;\n  @Input() title : string;\n  @Output() toggle = new EventEmitter<any>();\n  toggleContent() {\n    this.toggle.emit(null)\n  }\n}\n```", "```ts\n[accordion.ts]\nimport { Component, Inject } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { AccordionTab } from './accordion-tab';\n@Component({\n  selector: 'accordion',\n  template: `\n    <div>\n      <accordion-tab *ngFor=\"let user of users\"\n                    (toggle)=\"toggle(user)\"\n                    [extended]=\"isActive(user)\"\n                    [title]=\"user.name\">\n        <pre>{{ user | json }}</pre>\n      </accordion-tab>\n    </div>\n  `\n})\nexport class Accordion {  \n  users;\n  activeUserId = 0;\n\n  constructor(http: Http) {\n    http.get('/app/server/users.json')\n        .map(result => result.json())\n        .subscribe(result => this.users = result);\n  }\n  isActive(user) {\n    return user.id === this.activeUserId;\n  }\n  toggle(user) {\n    this.isActive(user) ?\n        this.activeUserId = 0 : this.activeUserId = user.id;\n  }\n}\n```", "```ts\n[app.component.ts]\nimport { Component } from '@angular/core';\nimport { Accordion } from './components/accordion/accordion';\n\n@Component({\n  selector: 'app-root',\n  template:`<accordion></accordion>`\n}) \nexport class AppComponent {}\n```", "```ts\n[accordion.ts] \nimport { Component, Inject, ViewEncapsulation } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { AccordionTab } from './accordion-tab';\nimport { UserInformation } from '../user-info/user-info';\n\n@Component({\n  selector: 'accordion',\n  template: `\n    <div>\n      <accordion-tab *ngFor=\"let user of users\"\n                    (toggle)=\"toggle(user)\"\n                    [extended]=\"isActive(user)\"\n                    [title]=\"user.name\">\n        <user-info [user]=\"user\"></user-info>\n      </accordion-tab>\n    </div>\n  `\n})\nexport class Accordion {  \n  users;\n  activeUserId = 0;\n  constructor(http: Http) {\n    http.get('app/server/users.json')\n        .map(result => result.json())\n        .subscribe(result => this.users = result);\n  }\n  isActive(user) {\n    return user.id === this.activeUserId;\n  }\n  toggle(user) {\n    this.isActive(user) ?\n        this.activeUserId = 0 : this.activeUserId = user.id;\n  }\n}\n```", "```ts\n[other-users.json]\n[\n  {\n    \"id\": 5,\n    \"name\": \"Michael jackson\",\n    \"email\": \"jackson@email.com\",\n    \"birthday\": \"22/3/1974\",\n    \"gender\": \"male\",\n    \"status\": \"onhold\",\n    \"role\": \"manager\",\n    \"phoneNumbers\": [\n      \"+972-123-9873\"\n    ]\n  },\n  (...)\n]\n```", "```ts\n[accordion.ts]\nimport { Component, Inject } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { AccordionTab } from './accordion-tab';\nimport { UserInformation } from '../user-info/user-info';\n\n@Component({\n  selector: 'accordion',\n  template: `\n    <div>\n     <button (click)=\"fetchData('other-users.json')\">update data</button>\n     <accordion-tab *ngFor=\"let user of users\"\n                    (toggle)=\"toggle(user)\"\n                    [extended]=\"isActive(user)\"\n                    [title]=\"user.name\">\n        <user-info [user]=\"user\"></user-info>\n      </accordion-tab>\n    </div>\n  `\n})\nexport class Accordion {  \n  users;\n  activeUserId = 0;\n\n  constructor(private http: Http) {\n    this.fetchData('users.json');\n  }\n  isActive(user) {\n    return user.id === this.activeUserId;\n  }\n\n  fetchData(subPath) {\n    this.http.get(`/app/server/${subPath}`)\n        .map(result => result.json())\n        .subscribe(result => this.users = result);\n  }\n\n  toggle(user) {\n    this.isActive(user) ?\n        this.activeUserId = 0 : this.activeUserId = user.id;\n  }\n}\n```", "```ts\n[user-info.ts]\nimport {\n  Component, Input,\n  OnInit, OnDestroy\n} from '@angular/core';\n\n@Component({\n\n  selector: 'user-info',\n  styleUrls: ['./user-info.css'],\n  templateUrl: './user-info.html'\n})\nexport class UserInformation implements OnInit, OnDestroy {  \n  @Input() \n  user;\n\n  fontSize = '20px';\n  editMode = false;\n  randomNumber;\n\n  ngOnInit(){\n    console.log('UserInformation initialized');\n  }\n\n  ngOnDestroy(){\n    console.log('UserInformation Destroy');\n  }\n\n  toggleEditMode() {\n    this.editMode = !this.editMode;\n  }\n\n  onSubmit(data) {\n    Object.assign(this.user, data);\n    this.editMode = false;\n  }\n}\n```", "```ts\n[user-info.ts]\nimport {\n  Component, Input,\n  OnInit, OnDestroy, OnChanges\n} from '@angular/core';\n\n@Component({\n  selector: 'user-info',\n  styleUrls: ['./user-info.css'],\n  templateUrl: './user-info.html'\n})\nexport class UserInformation\n      implements OnInit, OnDestroy, OnChanges {  \n  @Input() user;\n  fontSize = '20px';\n  editMode = false;\n  randomNumber;\n\n  ngOnInit(){\n    console.log('UserInformation initialized');\n  }\n\n  ngOnDestroy(){\n    console.log('UserInformation Destroy');\n  }\n\n  ngOnChanges(changes){\n    console.log('onChanges', changes);\n  }\n\n  toggleEditMode() {\n    this.editMode = !this.editMode;\n  }\n\n  onSubmit(data) {\n    Object.assign(this.user, data);\n    this.editMode = false;\n  }\n}\n```"]