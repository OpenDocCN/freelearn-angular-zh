["```ts\n[app.component.ts]\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<h1>Angular2 components</h1>`\n})\nexport class AppComponent {}\n```", "```ts\n**npm install @types/jquery @types/bootstrap --save-dev**\n\n```", "```ts\n[angular-cli.json]\n{\n  \"project\": {\n    \"version\": \"1.0.0-beta.16\",\n    \"name\": \"ng-components\"\n  },\n  \"apps\": [\n    {\n      \"root\": \"src\",\n      \"outDir\": \"dist\",\n      \"assets\": \"assets\",\n      \"index\": \"index.html\",\n      \"main\": \"main.ts\",\n      \"test\": \"test.ts\",\n      \"tsconfig\": \"tsconfig.json\",\n      \"prefix\": \"app\",\n      \"mobile\": false,\n      \"styles\": [\n        \"styles.css\",\n        \"../node_modules/bootstrap/dist/css/bootstrap.css\"\n      ],\n      \"scripts\": [\n      ],\n      \"environments\": {\n        \"source\": \"environments/environment.ts\",\n        \"dev\": \"environments/environment.ts\",\n        \"prod\": \"environments/environment.prod.ts\"\n      }\n    }\n  ],\n  (\u2026)\n}\n```", "```ts\n**npm install expose-loader --save-dev**\n\n```", "```ts\n[app.component.ts]\nimport { Component } from '@angular/core';\nimport 'expose?jQuery!jquery';\nimport 'bootstrap';\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'app-root',\n  template: `<h1>Angular2 components</h1>`\n})\nexport class AppComponent {}\n```", "```ts\n[app.component.ts]\nimport { Component, AfterViewInit } from '@angular/core';\nimport 'expose?jQuery!jquery';\nimport 'bootstrap';\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <h1 data-toggle=\"tooltip\"\n        data-placement=\"bottom\"\n        title=\"A Tooltip on the right\">Angular2 components</h1>\n  `\n})\nexport class AppComponent implements AfterViewInit {\n  ngAfterViewInit() {\n    $('h1').tooltip();\n  }\n}\n```", "```ts\n[app.component.ts]\nimport { Component, AfterViewInit } from '@angular/core';\nimport 'expose?jQuery!jquery';\nimport 'bootstrap';\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <input type=\"text\" [(ngModel)]=\"title\" placeholder=\"enter custom title..\">\n    <h1 data-toggle=\"tooltip\"\n        data-placement=\"bottom\"\n        [title]=\"title\">Angular2 components</h1>\n  `\n})\nexport class AppComponent implements AfterViewInit {\n  ngAfterViewInit() {\n    $('h1').tooltip();\n  }\n}\n```", "```ts\n[collapse.ts]\nimport { Component, AfterViewInit } from '@angular/core';\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'collapse',\n  templateUrl: './collapse.html'\n})\n\nexport class Collapse implements AfterViewInit {\n  ngAfterViewInit() {\n    $('.collapse').collapse();\n  }\n}\n```", "```ts\n[collapse.html]\n<button class=\"btn btn-primary\"\n        data-toggle=\"collapse\"\n        data-target=\"#collapseExample\"\n        aria-expanded=\"false\"\n        aria-controls=\"collapseExample\">\n  Collapse!\n</button>\n\n<div class=\"collapse\"\n     id=\"collapseExample\">\n  <div class=\"well\">\n    Integrating third party is easy with angular2!\n  </div>\n</div>\n```", "```ts\n[app.component.ts]\nimport { Component } from '@angular/core';\nimport 'expose?jQuery!jquery';\nimport 'bootstrap';\n\n@Component({\n  selector: 'app-root',\n  template: '<collapse></collapse>'\n})\nexport class AppComponent {}\n```", "```ts\n[app.module.ts]\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { AppComponent } from './app.component';\nimport { Collapse } from './components/collapse/collapse';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    Collapse\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n```", "```ts\n[collapse.ts]\nimport { Component, Inject, ElementRef } from '@angular/core';\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'collapse',\n  templateUrl: './collapse.html'\n})\nexport class Collapse {\n  constructor(element: ElementRef) {\n    $(element.nativeElement)\n      .on('show.bs.collapse', \n      ()=> console.log('handle show event'));\n    $(element.nativeElement)\n      .on('hide.bs.collapse', \n      ()=> console.log('handle hideevent'));\n  } \n}\n```"]