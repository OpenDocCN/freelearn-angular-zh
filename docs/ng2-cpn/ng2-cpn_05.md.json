["```ts\n[app.component.ts]\nimport { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <h1>\n      {{title}}\n    </h1>\n  `,\n  styles: [`\n    h1 { color: darkblue }\n  `]\n})\nexport class AppComponent {\n  title = 'app works!';\n}\n```", "```ts\n[app.component.ts]\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <h1>\n      {{ title }}\n    </h1>\n  `\n})\nexport class AppComponent {\n  title: string;\n\n  constructor() {\n    this.title = 'app works!';\n  }\n}\n```", "```ts\n[app.component.ts]\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <h1>\n      {{ info }}\n    </h1>\n  `\n})\nexport class AppComponent {\n  info: {};\n\n  constructor() {\n    this.info = {title: 'app works!'};\n  }\n}\n```", "```ts\n[app.component.ts]\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <h1>\n      {{ info.title }}\n    </h1>\n  `\n})\nexport class AppComponent {\n  info: {};\n\n  constructor() {\n    this.info = {title: 'app works!'}\n  }\n}\n```", "```ts\n[app.component.ts]\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <h1>{{ info.title }}</h1>\n    <h2>{{ info.subtitle || 'alternative text' }}</h2>\n    <h3>My name is: {{ getFullName() }}</h3>        \n  `\n})\nexport class AppComponent {\n  info: {};\n  firstName: string;\n  lastName: string;\n\n  constructor() {\n    this.info = {title: 'app works!'}\n    this.firstName = 'Nir';\n    this.lastName = 'Kaufman';\n  }\n\n  getFullName(){\n    return `${this.firstName} ${this.lastName}`;\n  }\n}\n```", "```ts\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n\n  imports: [\n    BrowserModule\n  ],\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n```", "```ts\n[app.component.ts]\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <h1>{{ info.title }}</h1>\n    <h2>{{ info.subtitle || 'alternative text' }}</h2>  \n    <h3 *ngIf=\"showFullName\">My name is: {{ getFullName() }}</h3> \n  `\n})\nexport class AppComponent {\n  info: {};\n  firstName: string;\n  lastName: string;\n  showFullName: boolean;\n\n  constructor() {\n    this.info = {title: 'app works!'};\n    this.firstName = 'Nir';\n    this.lastName = 'Kaufman';\n    this.showFullName = false;\n  }\n\n  getFullName(){\n    return `${this.firstName} ${this.lastName}`;\n  }\n}\n```", "```ts\n[app.component.ts]\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <h1>{{ info.title }}</h1>\n    <h2>{{ info.subtitle || 'alternative text' }}</h2>\n\n     <template [ngIf]=\"showFullName\">\n      <h3>My name is: {{ getFullName() }}</h3>        \n    </template>      \n  `\n})\nexport class AppComponent {\n  info: {};\n  firstName: string;\n  lastName: string;\n  showFullName: boolean;\n\n  constructor() {\n    this.info = {title: 'app works!'};\n    this.firstName = 'Nir';\n    this.lastName = 'Kaufman';\n    this.showFullName = false;\n  }\n\n  getFullName(){\n    return `${this.firstName} ${this.lastName}`;\n  }\n}\n```", "```ts\n[app.component.ts]\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  styles: [`\n    .italic { font-style: italic}\n    .info { color: blue; } \n  `],\n  template: `\n    <h1>{{ info.title }}</h1>\n    <h2 [ngClass]=\"getClass()\">\n      {{ info.subtitle || 'alternative text' }}</h2>\n\n    <template [ngIf]=\"showFullName\">\n      <h3>My name is: {{ getFullName() }}</h3> \n    </template>  \n  `\n})\nexport class AppComponent {\n  info: {};\n  firstName: string;\n  lastName: string;\n  showFullName: boolean;\n\n  constructor() {\n    this.info = {title: 'app works!'};\n    this.firstName = 'Nir';\n    this.lastName = 'Kaufman';\n    this.showFullName = false;\n  }\n\n  getFullName(){\n    return `${this.firstName} ${this.lastName}`;\n  }\n\n  getClass(){\n    return 'info italic';\n  }\n}\n```", "```ts\n    getClass(){\n      return ['info', 'italic'];\n    }\n    ```", "```ts\n    getClass(){\n      return { italic: true, info: true };\n    }\n    ```", "```ts\n[app.component.ts]\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  styles: [`\n    .italic { font-style: italic}\n    .info { color: blue; }        \n  `],\n  template: `\n    <h1 [ngStyle]=\"{'font-size': titleSize }\">{{ info.title }}</h1>\n    <h2 [ngClass]=\"getClass()\">\n      {{ info.subtitle || 'alternative text' }}</h2>\n\n    <template [ngIf]=\"showFullName\">\n      <h3>My name is: {{ getFullName() }}</h3>        \n    </template>  \n  `\n})\nexport class AppComponent {\n  info: {};\n  firstName: string;\n  lastName: string;\n  showFullName: boolean;\n  titleSize: string;\n\n  constructor() {\n    this.info = {title: 'app works!'};\n    this.firstName = 'Nir';\n    this.lastName = 'Kaufman';\n    this.showFullName = false;\n    this.titleSize = '96px';\n  }\n\n  getFullName(){\n    return `${this.firstName} ${this.lastName}`;\n  }\n\n  getClass(){\n    return { italic: true, info: true };\n  }\n}\n```", "```ts\n<div [ngSwitch]=\"cases\">\n  <div *ngSwitchCase=\"1\">Case 1</div> \n  <div *ngSwitchCase=\"2\">Case 2</div> \n  <div *ngSwitchDefault>Default Case</div> \n</div>\n```", "```ts\n@Component({\n  selector: 'app-root',\n  template: `\n    <ul>\n      <li *ngFor=\"let color of colors\">{{ color }}</li>\n    </ul>   \n  `\n})\nexport class AppComponent {\n  colors: string[] = ['red', 'green', 'blue'];\n}\n```", "```ts\n@Component({\n  selector: 'app-root',\n  template: `\n   <button [disabled]=\"isDisabled\">You can't click me!</button>   \n  `\n})\nexport class AppComponent {\n  private isDisabled: boolean;\n\n  constructor() {\n    this.isDisabled = true;\n  }\n}\n```", "```ts\n@Component({\n  selector: 'app-root',\n  template: `\n    <input [type]=\"inputType\" [placeholder]=\"placeHolderText\">  \n  `\n})\nexport class AppComponent {\n  private placeHolderText: string;\n  private inputType: string;\n  private inputClass: string;\n\n  constructor() {\n    this.placeHolderText = 'type your password...'\n    this.inputType = 'password';\n  }\n}\n```", "```ts\n@Component({\n  selector: 'app-root',\n  template: `\n    <button (click)=\"clickHandler()\">\n      click me!</button> \n  `\n})\nexport class AppComponent {\n  clickHandler() {\n    console.log('button clicked!');\n  }\n}\n```", "```ts\n@Component({\n  selector: 'app-root',\n  template: `    \n    <h2 (click)=\"toggeld = !toggeld \">Click me to toggle some content1</h2>\n    <p *ngIf=\"toggeld\">Toggeld content</p>\n  `\n})\nexport class AppComponent {}\n```", "```ts\n@Component({\n  selector: 'app-root',\n  template: `          \n    <input type=\"text\" [(ngModel)]=\"user.username\">\n    <input type=\"password\" [(ngModel)]=\"user.password\">\n\n    <button (click)=\"sendUser()\">Send</button>\n  `\n})\nexport class AppComponent {\n  private user = {\n    username: '',\n    password: ''\n  }\n\n  sendUser(){\n    console.log(this.user);\n  }\n}\n```"]